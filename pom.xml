<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.kohsuke</groupId>
  <artifactId>github-api</artifactId>
  <version>2.0-alpha-3-SNAPSHOT</version>
  <name>GitHub API for Java</name>
  <url>https://github-api.kohsuke.org/</url>
  <description>GitHub API for Java</description>

  <scm>
    <connection>scm:git:git@github.com/hub4j/${project.artifactId}.git</connection>
    <developerConnection>scm:git:ssh://git@github.com/hub4j/${project.artifactId}.git</developerConnection>
    <url>https://github.com/hub4j/github-api/</url>
    <tag>HEAD</tag>
  </scm>

  <distributionManagement>
    <snapshotRepository>
      <id>sonatype-nexus-snapshots</id>
      <name>Sonatype Nexus Snapshots</name>
      <url>https://s01.oss.sonatype.org/content/repositories/snapshots/</url>
    </snapshotRepository>
    <repository>
      <id>sonatype-nexus-staging</id>
      <name>Nexus Release Repository</name>
      <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
    <site>
      <id>github-pages</id>
      <url>gitsite:git@github.com/hub4j/${project.artifactId}.git</url>
    </site>
  </distributionManagement>

  <properties>
    <spring.boot.version>3.3.4</spring.boot.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <spotbugs-maven-plugin.version>4.8.6.4</spotbugs-maven-plugin.version>
    <spotbugs.version>4.8.6</spotbugs.version>
    <spotbugs-maven-plugin.failOnError>true</spotbugs-maven-plugin.failOnError>
    <hamcrest.version>3.0</hamcrest.version>
    <okhttp3.version>4.12.0</okhttp3.version>
    <okio.version>3.9.1</okio.version>
    <!-- Using this as the minimum bar for code coverage.  Adding methods without covering them will fail this. -->
    <jacoco.coverage.target.bundle.method>0.70</jacoco.coverage.target.bundle.method>
    <jacoco.coverage.target.class.method>0.50</jacoco.coverage.target.class.method>
    <!-- For non-ci builds we'd like the build to still complete if jacoco metrics aren't met. -->
    <jacoco.haltOnFailure>false</jacoco.haltOnFailure>
    <jjwt.suite.version>0.12.6</jjwt.suite.version>

    <jacoco.surefire.argLine />
    <surefire.argLine />
  </properties>

  <build>
    <extensions>
      <extension>
        <groupId>org.apache.maven.scm</groupId>
        <artifactId>maven-scm-provider-gitexe</artifactId>
        <version>2.1.0</version>
      </extension>
      <extension>
        <groupId>org.apache.maven.scm</groupId>
        <artifactId>maven-scm-manager-plexus</artifactId>
        <version>2.1.0</version>
      </extension>
    </extensions>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <excludes>
          <exclude>**/wiremock/**</exclude>
        </excludes>
      </testResource>
    </testResources>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>2.17.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-help-plugin</artifactId>
          <version>3.5.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.5.0</version>
          <configuration>
            <!-- SUREFIRE-1226 workaround -->
            <trimStackTrace>false</trimStackTrace>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.3.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>3.2.7</version>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>0.8.12</version>
          <configuration>
            <!-- no need to get data about external code. It dramatically reduces performance of JaCoCo for nothing -->
            <excludes>
              <exclude>/org/kohsuke/github/example/*</exclude>
            </excludes>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>prepare-agent-integration</goal>
              </goals>
              <configuration>
                <propertyName>jacoco.surefire.argLine</propertyName>
              </configuration>
            </execution>
            <!-- attached to Maven test phase -->
            <execution>
              <id>report</id>
              <goals>
                <goal>report-integration</goal>
              </goals>
            </execution>
            <execution>
              <id>check</id>
              <phase>verify</phase>
              <goals>
                <goal>check</goal>
              </goals>
              <configuration>
                <dataFile>${project.build.directory}/jacoco-it.exec</dataFile>
                <rules>
                  <rule>
                    <element>BUNDLE</element>
                    <limits>
                      <limit>
                        <counter>METHOD</counter>
                        <value>COVEREDRATIO</value>
                        <minimum>${jacoco.coverage.target.bundle.method}</minimum>
                      </limit>
                    </limits>
                  </rule>
                  <rule>
                    <!--We end up with chatty logs, but it shows us which particular classes    -->
                    <!--are lacking in coverage. If this is too much, just remove the           -->
                    <!--<element>CLASS</element> tag below.                                     -->
                    <element>CLASS</element>
                    <limits>
                      <limit>
                        <counter>METHOD</counter>
                        <value>COVEREDRATIO</value>
                        <minimum>${jacoco.coverage.target.class.method}</minimum>
                      </limit>
                    </limits>
                    <excludes>
                      <!-- V2.x changes -->
                      <exclude>org.kohsuke.github.GHRepositorySearchBuilder.Fork</exclude>

                      <!-- Sample only -->
                      <exclude>org.kohsuke.github.example.*</exclude>

                      <!-- Unbridged test changes -->
                      <exclude>org.kohsuke.github.GHCommit.GHAuthor</exclude>

                      <!-- TODO: Some coverage, but more needed -->
                      <exclude>org.kohsuke.github.GHIssue.PullRequest</exclude>
                      <exclude>org.kohsuke.github.GHCommitSearchBuilder</exclude>
                      <exclude>org.kohsuke.github.GHRepositorySearchBuilder</exclude>
                      <exclude>org.kohsuke.github.GHUserSearchBuilder</exclude>

                      <!-- TODO: These still need test coverage -->
                      <exclude>org.kohsuke.github.GHBranchProtection.RequiredSignatures</exclude>
                      <exclude>org.kohsuke.github.GHBranchProtectionBuilder.Restrictions</exclude>
                      <exclude>org.kohsuke.github.GHBranchProtection.Restrictions</exclude>
                      <exclude>org.kohsuke.github.GHCommentAuthorAssociation</exclude>
                      <exclude>org.kohsuke.github.GHDeployKey</exclude>
                      <exclude>org.kohsuke.github.GHEmail</exclude>
                      <exclude>org.kohsuke.github.GHInvitation</exclude>
                      <exclude>org.kohsuke.github.GHPullRequestCommitDetail.Authorship</exclude>
                      <exclude>org.kohsuke.github.GHPullRequestCommitDetail.Commit</exclude>
                      <exclude>org.kohsuke.github.GHPullRequestCommitDetail.CommitPointer</exclude>
                      <exclude>org.kohsuke.github.GHPullRequestCommitDetail.Tree</exclude>
                      <exclude>org.kohsuke.github.GHPullRequestCommitDetail</exclude>
                      <exclude>org.kohsuke.github.GHPullRequestFileDetail</exclude>
                      <exclude>org.kohsuke.github.GHReleaseUpdater</exclude>
                      <exclude>org.kohsuke.github.GHRequestedAction</exclude>
                      <exclude>org.kohsuke.github.GHVerifiedKey</exclude>
                    </excludes>
                  </rule>
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>3.10.0</version>
          <configuration>
            <source>11</source>
            <release>11</release>
            <failOnWarnings>true</failOnWarnings>
            <doclint>all</doclint>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.sonatype.plugins</groupId>
          <artifactId>nexus-staging-maven-plugin</artifactId>
          <version>1.7.0</version>
          <extensions>true</extensions>
          <configuration>
            <serverId>sonatype-nexus-staging</serverId>
            <nexusUrl>https://oss.sonatype.org/</nexusUrl>
            <autoReleaseAfterClose>true</autoReleaseAfterClose>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <!--
      This plugin is used to generate AOT metadata during tests so that it can be
      compared against those in META-INF/native-image/org.kohsuke/github-api/*.
      The tests are start with the name "Aot..." 
      -->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>${spring.boot.version}</version>
        <executions>
          <execution>
            <id>process-test-aot</id>
            <goals>
              <goal>process-test-aot</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>3.20.0</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>3.1.1</version>
        <configuration>
          <autoVersionSubmodules>true</autoVersionSubmodules>
          <useReleaseProfile>false</useReleaseProfile>
          <releaseProfiles>release</releaseProfiles>
          <goals>deploy</goals>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>3.7.0</version>
        <dependencies>
          <dependency>
            <groupId>org.apache.bcel</groupId>
            <artifactId>bcel</artifactId>
            <version>6.10.0</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.13.0</version>
        <configuration>
          <source>11</source>
          <target>11</target>
          <release>11</release>
          <annotationProcessorPaths>
            <annotationProcessorPath>
              <groupId>org.jenkins-ci</groupId>
              <artifactId>annotation-indexer</artifactId>
              <version>1.17</version>
            </annotationProcessorPath>
          </annotationProcessorPaths>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <argLine>@{jacoco.surefire.argLine} ${surefire.argLine}</argLine>
        </configuration>
        <executions>
          <execution>
            <id>default-test</id>
            <configuration>
              <excludesFile>src/test/resources/slow-or-flaky-tests.txt</excludesFile>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.4.2</version>
        <configuration>
          <archive>
            <manifestEntries>
              <Automatic-Module-Name>org.kohsuke.github.api</Automatic-Module-Name>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>2.43.0</version>
        <executions>
          <execution>
            <id>spotless-check</id>
            <!-- runs in verify phase by default -->
            <goals>
              <!-- can be disabled using -Dspotless.check.skip=true -->
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <java>
            <includes>
              <include>src/main/java/**/*.java</include>
              <include>src/test/java/**/*.java</include>
            </includes>

            <eclipse>
              <file>${basedir}/src/build/eclipse/formatter.xml</file>
            </eclipse>

            <importOrder>
              <file>${basedir}/src/build/eclipse/eclipse.importorder</file>
            </importOrder>
            <removeUnusedImports />

            <trimTrailingWhitespace />
            <endWithNewline />

          </java>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <version>${spotbugs-maven-plugin.version}</version>
        <configuration>
          <xmlOutput>true</xmlOutput>
          <failOnError>${spotbugs-maven-plugin.failOnError}</failOnError>
        </configuration>
        <executions>
          <execution>
            <id>run-spotbugs</id>
            <phase>verify</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <!-- overwrite dependency on spotbugs if you want to specify the version of spotbugs -->
          <dependency>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs</artifactId>
            <version>${spotbugs.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>com.github.siom79.japicmp</groupId>
        <artifactId>japicmp-maven-plugin</artifactId>
        <version>0.23.0</version>
        <configuration>
          <oldVersion>
            <dependency>
              <groupId>${project.groupId}</groupId>
              <artifactId>${project.artifactId}</artifactId>
              <version>2.0.0-alpha-1</version>
              <type>jar</type>
            </dependency>
          </oldVersion>
          <parameter>
            <breakBuildOnBinaryIncompatibleModifications>true</breakBuildOnBinaryIncompatibleModifications> -->
            <!-- <breakBuildBasedOnSemanticVersioning>true</breakBuildBasedOnSemanticVersioning> -->
            <onlyModified>true</onlyModified>
            <includeSynthetic>true</includeSynthetic>
            <excludes>
              <!-- Classes in internal are public but are considered private for API stability purposes -->
              <exclude>org.kohsuke.github.internal</exclude>
            </excludes>
          </parameter>
        </configuration>
        <executions>
          <execution>
            <phase>verify</phase>
            <goals>
              <goal>cmp</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.fasterxml.jackson</groupId>
        <artifactId>jackson-bom</artifactId>
        <version>2.18.0</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>   
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.17.0</version>
    </dependency>
    <dependency>
      <groupId>com.tngtech.archunit</groupId>
      <artifactId>archunit</artifactId>
      <version>1.3.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest</artifactId>
      <version>${hamcrest.version}</version>
      <scope>test</scope>
    </dependency>
    <!--
    This plugin is used to start a spring boot application during tests
    to generate AOT metadata. See also spring-boot-maven-plugin
    -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <version>${spring.boot.version}</version>
      <scope>test</scope>
    </dependency>
    <!-- This is needed in order to force junit4 and JTH tests to use newer hamcrest version -->
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-core</artifactId>
      <version>${hamcrest.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-library</artifactId>
      <version>${hamcrest.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.github.npathai</groupId>
      <artifactId>hamcrest-optional</artifactId>
      <version>2.0.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <version>4.2.2</version>
      <scope>test</scope>
    </dependency>
    <!-- junit vintage engine is used because junit4 and junit5 tests are required -->
    <dependency>
      <groupId>org.junit.vintage</groupId>
      <artifactId>junit-vintage-engine</artifactId>
      <version>5.10.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.16.1</version>
    </dependency>
    <dependency>
      <groupId>com.infradna.tool</groupId>
      <artifactId>bridge-method-annotation</artifactId>
      <version>1.29</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>33.3.1-jre</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.jsonwebtoken</groupId>
      <artifactId>jjwt-api</artifactId>
      <version>${jjwt.suite.version}</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>io.jsonwebtoken</groupId>
      <artifactId>jjwt-impl</artifactId>
      <version>${jjwt.suite.version}</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>io.jsonwebtoken</groupId>
      <artifactId>jjwt-jackson</artifactId>
      <version>${jjwt.suite.version}</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>com.squareup.okio</groupId>
      <artifactId>okio</artifactId>
      <version>${okio.version}</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>com.squareup.okhttp3</groupId>
      <artifactId>okhttp</artifactId>
      <version>${okhttp3.version}</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.kohsuke</groupId>
      <artifactId>wordnet-random-name</artifactId>
      <version>1.6</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>5.13.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.github.spotbugs</groupId>
      <artifactId>spotbugs-annotations</artifactId>
      <version>${spotbugs.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.github.tomakehurst</groupId>
      <artifactId>wiremock-jre8-standalone</artifactId>
      <version>2.35.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.11.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>2.0.16</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <repositories>
    <repository>
      <id>repo.jenkins-ci.org</id>
      <url>https://repo.jenkins-ci.org/public/</url>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>repo.jenkins-ci.org</id>
      <url>https://repo.jenkins-ci.org/public/</url>
    </pluginRepository>
  </pluginRepositories>
  <profiles>
    <!-- only enable slow-or-flaky-test if -Dtest= is not present -->
    <profile>
      <id>test-jwt-slow-flaky</id>
      <activation>
        <property>
          <name>!test</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <executions>
              <execution>
                <id>okhttp-test</id>
                <phase>integration-test</phase>
                <goals>
                  <goal>test</goal>
                </goals>
                <configuration>
                  <classesDirectory>${project.basedir}/target/${project.artifactId}-${project.version}.jar</classesDirectory>
                  <excludesFile>src/test/resources/slow-or-flaky-tests.txt</excludesFile>
                  <argLine>@{jacoco.surefire.argLine} ${surefire.argLine} -Dtest.github.connector=okhttp</argLine>
                </configuration>
              </execution>
              <execution>
                <id>httpclient-test</id>
                <phase>integration-test</phase>
                <goals>
                  <goal>test</goal>
                </goals>
                <configuration>
                  <classesDirectory>${project.basedir}/target/${project.artifactId}-${project.version}.jar</classesDirectory>
                  <useSystemClassLoader>false</useSystemClassLoader>
                  <excludesFile>src/test/resources/slow-or-flaky-tests.txt</excludesFile>
                  <argLine>@{jacoco.surefire.argLine} ${surefire.argLine} -Dtest.github.connector=httpclient</argLine>
                  <!-- Run some test passes with trace logging turned on -->
                  <systemPropertyVariables>
                    <java.util.logging.config.file>src/test/resources/test-trace-logging.properties</java.util.logging.config.file>
                  </systemPropertyVariables>
                </configuration>
              </execution>
              <execution>
                <id>slow-or-flaky-test</id>
                <phase>integration-test</phase>
                <goals>
                  <goal>test</goal>
                </goals>
                <configuration>
                  <classesDirectory>${project.basedir}/target/${project.artifactId}-${project.version}.jar</classesDirectory>
                  <rerunFailingTestsCount>2</rerunFailingTestsCount>
                  <includesFile>src/test/resources/slow-or-flaky-tests.txt</includesFile>
                </configuration>
              </execution>
              <execution>
                <id>slow-or-flaky-test-tracing</id>
                <phase>integration-test</phase>
                <goals>
                  <goal>test</goal>
                </goals>
                <configuration>
                  <classesDirectory>${project.basedir}/target/${project.artifactId}-${project.version}.jar</classesDirectory>
                  <rerunFailingTestsCount>2</rerunFailingTestsCount>
                  <includesFile>src/test/resources/slow-or-flaky-tests.txt</includesFile>
                  <!-- Run some test passes with trace logging turned on -->
                  <systemPropertyVariables>
                    <java.util.logging.config.file>src/test/resources/test-trace-logging.properties</java.util.logging.config.file>
                  </systemPropertyVariables>
                </configuration>
              </execution>
              <execution>
                <!-- Verify that JWT suite 0.11.x still works -->
                <id>jwt0.11.x-test</id>
                <phase>integration-test</phase>
                <goals>
                  <goal>test</goal>
                </goals>
                <configuration>
                  <classesDirectory>${project.basedir}/target/${project.artifactId}-${project.version}.jar</classesDirectory>
                  <useSystemClassLoader>false</useSystemClassLoader>
                  <excludesFile>src/test/resources/slow-or-flaky-tests.txt</excludesFile>
                  <argLine>@{jacoco.surefire.argLine} ${surefire.argLine} -Dtest.github.connector=okhttp</argLine>
                  <classpathDependencyExcludes>
                    <classpathDependencyExclude>io.jsonwebtoken:*</classpathDependencyExclude>
                  </classpathDependencyExcludes>
                  <additionalClasspathDependencies>
                    <additionalClasspathDependency>
                      <groupId>io.jsonwebtoken</groupId>
                      <artifactId>jjwt-api</artifactId>
                      <version>0.11.5</version>
                    </additionalClasspathDependency>
                    <additionalClasspathDependency>
                      <groupId>io.jsonwebtoken</groupId>
                      <artifactId>jjwt-impl</artifactId>
                      <version>0.11.5</version>
                    </additionalClasspathDependency>
                    <additionalClasspathDependency>
                      <groupId>io.jsonwebtoken</groupId>
                      <artifactId>jjwt-jackson</artifactId>
                      <version>0.11.5</version>
                    </additionalClasspathDependency>
                  </additionalClasspathDependencies>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>ci-non-windows</id>
      <activation>
        <property>
          <name>enable-ci</name>
        </property>
        <os>
          <family>!windows</family>
        </os>
      </activation>
      <properties>
        <!-- Only fail code coverage on non-windows machines -->
        <jacoco.haltOnFailure>true</jacoco.haltOnFailure>
      </properties>
    </profile>
    <profile>
      <id>ci-all</id>
      <activation>
        <property>
          <name>enable-ci</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>com.diffplug.spotless</groupId>
            <artifactId>spotless-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>spotless-check</id>
                <!-- In CI, run check early in the build -->
                <phase>process-sources</phase>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <version>3.5.0</version>
            <executions>
              <execution>
                <id>enforce-jacoco-exist</id>
                <phase>verify</phase>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requireFilesExist>
                      <files>
                        <file>${project.build.directory}/jacoco-it.exec</file>
                      </files>
                    </requireFilesExist>
                  </rules>
                  <fail>true</fail>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
                <configuration>
                  <gpgArguments>
                    <arg>--pinentry-mode</arg>
                    <arg>loopback</arg>
                  </gpgArguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <reportSets>
          <reportSet>
            <reports>
              <!-- select non-aggregate reports -->
              <report>report-integration</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
      </plugin>
    </plugins>
  </reporting>

  <licenses>
    <license>
      <name>The MIT license</name>
      <url>https://www.opensource.org/licenses/mit-license.php</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <mailingLists>
    <mailingList>
      <name>User List</name>
      <post>github-api@googlegroups.com</post>
      <archive>https://groups.google.com/forum/#!forum/github-api</archive>
    </mailingList>
  </mailingLists>

  <developers>
    <developer>
      <name>Kohsuke Kawaguchi</name>
      <id>kohsuke</id>
      <email>kk@kohsuke.org</email>
    </developer>
  </developers>

</project>
