[
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/comments/328303932",
    "html_url": "https://github.com/hub4j/github-api/issues/348#issuecomment-328303932",
    "issue_url": "https://api.github.com/repos/hub4j/github-api/issues/348",
    "id": 328303932,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODMwMzkzMg==",
    "user": {
      "login": "kohsuke",
      "id": 50003,
      "node_id": "MDQ6VXNlcjUwMDAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/50003?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kohsuke",
      "html_url": "https://github.com/kohsuke",
      "followers_url": "https://api.github.com/users/kohsuke/followers",
      "following_url": "https://api.github.com/users/kohsuke/following{/other_user}",
      "gists_url": "https://api.github.com/users/kohsuke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kohsuke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kohsuke/subscriptions",
      "organizations_url": "https://api.github.com/users/kohsuke/orgs",
      "repos_url": "https://api.github.com/users/kohsuke/repos",
      "events_url": "https://api.github.com/users/kohsuke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kohsuke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-09T21:16:07Z",
    "updated_at": "2017-09-09T21:16:07Z",
    "author_association": "COLLABORATOR",
    "body": "Translating the requirement: it'd be convenient to allow `PagedIterator` to skip forward without actually retrieving the objects in between.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/comments/334574018",
    "html_url": "https://github.com/hub4j/github-api/issues/348#issuecomment-334574018",
    "issue_url": "https://api.github.com/repos/hub4j/github-api/issues/348",
    "id": 334574018,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDU3NDAxOA==",
    "user": {
      "login": "nodoze",
      "id": 2439314,
      "node_id": "MDQ6VXNlcjI0MzkzMTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2439314?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nodoze",
      "html_url": "https://github.com/nodoze",
      "followers_url": "https://api.github.com/users/nodoze/followers",
      "following_url": "https://api.github.com/users/nodoze/following{/other_user}",
      "gists_url": "https://api.github.com/users/nodoze/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nodoze/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nodoze/subscriptions",
      "organizations_url": "https://api.github.com/users/nodoze/orgs",
      "repos_url": "https://api.github.com/users/nodoze/repos",
      "events_url": "https://api.github.com/users/nodoze/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nodoze/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-05T19:53:35Z",
    "updated_at": "2017-10-05T19:53:35Z",
    "author_association": "NONE",
    "body": "I think the PageIterator simply needs to implement the \"page\" parameter to skip to a particular page. It support size but not page from what I can tell. \r\n\r\nhttps://developer.github.com/v3/#pagination\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/comments/541221611",
    "html_url": "https://github.com/hub4j/github-api/issues/348#issuecomment-541221611",
    "issue_url": "https://api.github.com/repos/hub4j/github-api/issues/348",
    "id": 541221611,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MTIyMTYxMQ==",
    "user": {
      "login": "bitwiseman",
      "id": 1958953,
      "node_id": "MDQ6VXNlcjE5NTg5NTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1958953?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bitwiseman",
      "html_url": "https://github.com/bitwiseman",
      "followers_url": "https://api.github.com/users/bitwiseman/followers",
      "following_url": "https://api.github.com/users/bitwiseman/following{/other_user}",
      "gists_url": "https://api.github.com/users/bitwiseman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bitwiseman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bitwiseman/subscriptions",
      "organizations_url": "https://api.github.com/users/bitwiseman/orgs",
      "repos_url": "https://api.github.com/users/bitwiseman/repos",
      "events_url": "https://api.github.com/users/bitwiseman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bitwiseman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-11T20:57:45Z",
    "updated_at": "2020-11-24T16:07:32Z",
    "author_association": "COLLABORATOR",
    "body": "@nodoze \r\nYes, there is enough information for PagedIterable to know how many pages it has, you only have get the first page in order to know the total number of pages.   Seems like something that could be added without breaking anything.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/comments/551307612",
    "html_url": "https://github.com/hub4j/github-api/issues/348#issuecomment-551307612",
    "issue_url": "https://api.github.com/repos/hub4j/github-api/issues/348",
    "id": 551307612,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTMwNzYxMg==",
    "user": {
      "login": "bitwiseman",
      "id": 1958953,
      "node_id": "MDQ6VXNlcjE5NTg5NTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1958953?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bitwiseman",
      "html_url": "https://github.com/bitwiseman",
      "followers_url": "https://api.github.com/users/bitwiseman/followers",
      "following_url": "https://api.github.com/users/bitwiseman/following{/other_user}",
      "gists_url": "https://api.github.com/users/bitwiseman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bitwiseman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bitwiseman/subscriptions",
      "organizations_url": "https://api.github.com/users/bitwiseman/orgs",
      "repos_url": "https://api.github.com/users/bitwiseman/repos",
      "events_url": "https://api.github.com/users/bitwiseman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bitwiseman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-07T23:07:11Z",
    "updated_at": "2019-11-07T23:07:11Z",
    "author_association": "COLLABORATOR",
    "body": "In #448, another scenario was mentioned - restarting a search from a specific page.  One thing to keep in mind for searches is that the underlying data may have changed.  At that point the page position of items may have changed.  This a generally problem for any paged query though, so maybe that is something that we can leave to consumers of the API to figure out for themselves.\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/comments/733086151",
    "html_url": "https://github.com/hub4j/github-api/issues/348#issuecomment-733086151",
    "issue_url": "https://api.github.com/repos/hub4j/github-api/issues/348",
    "id": 733086151,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMzA4NjE1MQ==",
    "user": {
      "login": "bitwiseman",
      "id": 1958953,
      "node_id": "MDQ6VXNlcjE5NTg5NTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1958953?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bitwiseman",
      "html_url": "https://github.com/bitwiseman",
      "followers_url": "https://api.github.com/users/bitwiseman/followers",
      "following_url": "https://api.github.com/users/bitwiseman/following{/other_user}",
      "gists_url": "https://api.github.com/users/bitwiseman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bitwiseman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bitwiseman/subscriptions",
      "organizations_url": "https://api.github.com/users/bitwiseman/orgs",
      "repos_url": "https://api.github.com/users/bitwiseman/repos",
      "events_url": "https://api.github.com/users/bitwiseman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bitwiseman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-24T16:19:50Z",
    "updated_at": "2020-11-24T16:30:10Z",
    "author_association": "COLLABORATOR",
    "body": "I think it would make sense to add a `GitHubPaginator` class that handles page traversal and navigation.  `PagedIterable` would have a method `paginator()` that would return the new class and support going to a specific page, next, previous, etc. ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/comments/887050145",
    "html_url": "https://github.com/hub4j/github-api/issues/348#issuecomment-887050145",
    "issue_url": "https://api.github.com/repos/hub4j/github-api/issues/348",
    "id": 887050145,
    "node_id": "IC_kwDOAAlq-s4030-h",
    "user": {
      "login": "bitwiseman",
      "id": 1958953,
      "node_id": "MDQ6VXNlcjE5NTg5NTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1958953?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bitwiseman",
      "html_url": "https://github.com/bitwiseman",
      "followers_url": "https://api.github.com/users/bitwiseman/followers",
      "following_url": "https://api.github.com/users/bitwiseman/following{/other_user}",
      "gists_url": "https://api.github.com/users/bitwiseman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bitwiseman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bitwiseman/subscriptions",
      "organizations_url": "https://api.github.com/users/bitwiseman/orgs",
      "repos_url": "https://api.github.com/users/bitwiseman/repos",
      "events_url": "https://api.github.com/users/bitwiseman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bitwiseman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-26T21:48:27Z",
    "updated_at": "2021-07-26T22:37:48Z",
    "author_association": "COLLABORATOR",
    "body": "See #1197 \r\nOther users would like a method that returns an iterator that only returns results for a specific page range: `pageRange(start, end)`.  Results would be returned only within that page range.  \r\n\r\nI'm thinking the following methods on the iterable:\r\n`startAtPage(long)`\r\n`endAfterPage(long)`\r\n`pageRange(long, long)`\r\n'pageIterator()`\r\n\r\nAnd adding methods to the iterator and page iterator:\r\n`hasPrevious()`\r\n`previous()`\r\n`getCurrentPageNumber()`\r\n`getPageCount()`\r\n`first()`\r\n`last()`\r\n \r\n\r\n\r\n\r\n\r\n",
    "performed_via_github_app": null
  }
]