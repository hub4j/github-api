[
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/127",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/127/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/127/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/127/events",
    "html_url": "https://github.com/hub4j/github-api/pull/127",
    "id": 42192172,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjA4ODY4MTk=",
    "number": 127,
    "title": "retrieve allUsers, allOrganizations with single API call",
    "user": {
      "login": "msperisen",
      "id": 2448228,
      "node_id": "MDQ6VXNlcjI0NDgyMjg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2448228?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/msperisen",
      "html_url": "https://github.com/msperisen",
      "followers_url": "https://api.github.com/users/msperisen/followers",
      "following_url": "https://api.github.com/users/msperisen/following{/other_user}",
      "gists_url": "https://api.github.com/users/msperisen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/msperisen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msperisen/subscriptions",
      "organizations_url": "https://api.github.com/users/msperisen/orgs",
      "repos_url": "https://api.github.com/users/msperisen/repos",
      "events_url": "https://api.github.com/users/msperisen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/msperisen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-09-08T12:46:46Z",
    "updated_at": "2014-09-28T10:07:53Z",
    "closed_at": "2014-09-28T10:07:53Z",
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/hub4j/github-api/pulls/127",
      "html_url": "https://github.com/hub4j/github-api/pull/127",
      "diff_url": "https://github.com/hub4j/github-api/pull/127.diff",
      "patch_url": "https://github.com/hub4j/github-api/pull/127.patch"
    },
    "body": "- retrieves all users and all organisations by using the [/users api](https://developer.github.com//v3/users/#get-all-users) call.\u2028the resulting GHPerson list is available as well as the GHUser and GHOrganization list. call is used for GH enterprise integration into existing enterprise infrastructure.\n- Fix repository ownership to return GHUser or GHOrganization.\n- added suspend-at to GHUser\n- added guava dependency\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/125",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/125/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/125/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/125/events",
    "html_url": "https://github.com/hub4j/github-api/pull/125",
    "id": 42022727,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjA3OTMwMDI=",
    "number": 125,
    "title": "retrieve allUsers, allOrganizations with single API call",
    "user": {
      "login": "msperisen",
      "id": 2448228,
      "node_id": "MDQ6VXNlcjI0NDgyMjg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2448228?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/msperisen",
      "html_url": "https://github.com/msperisen",
      "followers_url": "https://api.github.com/users/msperisen/followers",
      "following_url": "https://api.github.com/users/msperisen/following{/other_user}",
      "gists_url": "https://api.github.com/users/msperisen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/msperisen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msperisen/subscriptions",
      "organizations_url": "https://api.github.com/users/msperisen/orgs",
      "repos_url": "https://api.github.com/users/msperisen/repos",
      "events_url": "https://api.github.com/users/msperisen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/msperisen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-09-05T07:55:51Z",
    "updated_at": "2014-09-05T14:38:37Z",
    "closed_at": "2014-09-05T14:38:37Z",
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/hub4j/github-api/pulls/125",
      "html_url": "https://github.com/hub4j/github-api/pull/125",
      "diff_url": "https://github.com/hub4j/github-api/pull/125.diff",
      "patch_url": "https://github.com/hub4j/github-api/pull/125.patch"
    },
    "body": "retrieves all users and all organisations by using the [/users api call](https://developer.github.com/v3/users/#get-all-users).\nthe resulting GHPerson list is available as well as the GHUser and GHOrganization list. call is used for GH enterprise integration into existing enterprise infrastructure.\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/124",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/124/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/124/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/124/events",
    "html_url": "https://github.com/hub4j/github-api/pull/124",
    "id": 41894208,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjA3MjE3NjI=",
    "number": 124,
    "title": "Allow to use custom HttpConnector when only OAuth token is given",
    "user": {
      "login": "ohtake",
      "id": 1013655,
      "node_id": "MDQ6VXNlcjEwMTM2NTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1013655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ohtake",
      "html_url": "https://github.com/ohtake",
      "followers_url": "https://api.github.com/users/ohtake/followers",
      "following_url": "https://api.github.com/users/ohtake/following{/other_user}",
      "gists_url": "https://api.github.com/users/ohtake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ohtake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ohtake/subscriptions",
      "organizations_url": "https://api.github.com/users/ohtake/orgs",
      "repos_url": "https://api.github.com/users/ohtake/repos",
      "events_url": "https://api.github.com/users/ohtake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ohtake/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-09-04T04:32:02Z",
    "updated_at": "2014-09-25T13:07:49Z",
    "closed_at": "2014-09-04T17:32:11Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/hub4j/github-api/pulls/124",
      "html_url": "https://github.com/hub4j/github-api/pull/124",
      "diff_url": "https://github.com/hub4j/github-api/pull/124.diff",
      "patch_url": "https://github.com/hub4j/github-api/pull/124.patch"
    },
    "body": "The old pull request is #120.\n\nIf you use `GitHub.connectUsingOAuth(String oauthAccessToken)` or `GitHub.connectUsingOAuth(String githubServer, String oauthAccessToken)`, the constructor of `GitHub` calls `#getMyself`.\nBecause there is no way to call `#setConnector` before the construction, `#getMyself` will fail if the server is behind proxies.\nThis pull request allows library users to use custom HttpConnector when only OAuth token is given.\n\nExample usage is:\n\n``` java\nGitHub gh = new GitHubBuilder()\n    .withEndpoint(serverAPIUrl)\n    .withOAuthToken(accessToken)\n    .withConnector(new HttpConnectorWithJenkinsProxy())\n    .build();\n```\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/123",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/123/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/123/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/123/events",
    "html_url": "https://github.com/hub4j/github-api/pull/123",
    "id": 41876098,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjA3MTEyMzE=",
    "number": 123,
    "title": "Use issues endpoints for pull requests",
    "user": {
      "login": "rtyley",
      "id": 52038,
      "node_id": "MDQ6VXNlcjUyMDM4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/52038?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rtyley",
      "html_url": "https://github.com/rtyley",
      "followers_url": "https://api.github.com/users/rtyley/followers",
      "following_url": "https://api.github.com/users/rtyley/following{/other_user}",
      "gists_url": "https://api.github.com/users/rtyley/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rtyley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rtyley/subscriptions",
      "organizations_url": "https://api.github.com/users/rtyley/orgs",
      "repos_url": "https://api.github.com/users/rtyley/repos",
      "events_url": "https://api.github.com/users/rtyley/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rtyley/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-09-03T22:36:52Z",
    "updated_at": "2014-09-04T17:31:25Z",
    "closed_at": "2014-09-04T17:31:25Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/hub4j/github-api/pulls/123",
      "html_url": "https://github.com/hub4j/github-api/pull/123",
      "diff_url": "https://github.com/hub4j/github-api/pull/123.diff",
      "patch_url": "https://github.com/hub4j/github-api/pull/123.patch"
    },
    "body": "Setting labels and assignee on Pull requests failed silently, because the API endpoint being hit contained '/pulls/' rather than '/issues/'.\n\n> \"Every pull request is an issue, but not every issue is a pull request. For this reason, “shared” actions for both features, like manipulating assignees, labels and milestones, are provided within the Issues API.\"\n\nhttps://developer.github.com/v3/pulls/#labels-assignees-and-milestones\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/122",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/122/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/122/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/122/events",
    "html_url": "https://github.com/hub4j/github-api/pull/122",
    "id": 41859728,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjA3MDIxODI=",
    "number": 122,
    "title": "Add missing field browser_download_url in GHAsset",
    "user": {
      "login": "tbruyelle",
      "id": 92280,
      "node_id": "MDQ6VXNlcjkyMjgw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/92280?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tbruyelle",
      "html_url": "https://github.com/tbruyelle",
      "followers_url": "https://api.github.com/users/tbruyelle/followers",
      "following_url": "https://api.github.com/users/tbruyelle/following{/other_user}",
      "gists_url": "https://api.github.com/users/tbruyelle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tbruyelle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tbruyelle/subscriptions",
      "organizations_url": "https://api.github.com/users/tbruyelle/orgs",
      "repos_url": "https://api.github.com/users/tbruyelle/repos",
      "events_url": "https://api.github.com/users/tbruyelle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tbruyelle/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-09-03T20:04:30Z",
    "updated_at": "2014-09-04T17:29:24Z",
    "closed_at": "2014-09-04T17:29:23Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/hub4j/github-api/pulls/122",
      "html_url": "https://github.com/hub4j/github-api/pull/122",
      "diff_url": "https://github.com/hub4j/github-api/pull/122.diff",
      "patch_url": "https://github.com/hub4j/github-api/pull/122.patch"
    },
    "body": "See https://developer.github.com/v3/repos/releases/#get-a-single-release-asset\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/121",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/121/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/121/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/121/events",
    "html_url": "https://github.com/hub4j/github-api/pull/121",
    "id": 41858982,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjA3MDE3MTc=",
    "number": 121,
    "title": "Add missing field browser_download_url in GHAsset",
    "user": {
      "login": "tbruyelle",
      "id": 92280,
      "node_id": "MDQ6VXNlcjkyMjgw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/92280?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tbruyelle",
      "html_url": "https://github.com/tbruyelle",
      "followers_url": "https://api.github.com/users/tbruyelle/followers",
      "following_url": "https://api.github.com/users/tbruyelle/following{/other_user}",
      "gists_url": "https://api.github.com/users/tbruyelle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tbruyelle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tbruyelle/subscriptions",
      "organizations_url": "https://api.github.com/users/tbruyelle/orgs",
      "repos_url": "https://api.github.com/users/tbruyelle/repos",
      "events_url": "https://api.github.com/users/tbruyelle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tbruyelle/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-09-03T19:56:11Z",
    "updated_at": "2014-09-03T20:03:51Z",
    "closed_at": "2014-09-03T20:03:51Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/hub4j/github-api/pulls/121",
      "html_url": "https://github.com/hub4j/github-api/pull/121",
      "diff_url": "https://github.com/hub4j/github-api/pull/121.diff",
      "patch_url": "https://github.com/hub4j/github-api/pull/121.patch"
    },
    "body": "See https://developer.github.com/v3/repos/releases/#get-a-single-release-asset\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/120",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/120/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/120/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/120/events",
    "html_url": "https://github.com/hub4j/github-api/pull/120",
    "id": 41816523,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjA2NzY2ODc=",
    "number": 120,
    "title": "Use custom HttpConnector when authentication",
    "user": {
      "login": "ohtake",
      "id": 1013655,
      "node_id": "MDQ6VXNlcjEwMTM2NTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1013655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ohtake",
      "html_url": "https://github.com/ohtake",
      "followers_url": "https://api.github.com/users/ohtake/followers",
      "following_url": "https://api.github.com/users/ohtake/following{/other_user}",
      "gists_url": "https://api.github.com/users/ohtake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ohtake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ohtake/subscriptions",
      "organizations_url": "https://api.github.com/users/ohtake/orgs",
      "repos_url": "https://api.github.com/users/ohtake/repos",
      "events_url": "https://api.github.com/users/ohtake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ohtake/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-09-03T13:35:11Z",
    "updated_at": "2014-09-05T02:17:46Z",
    "closed_at": "2014-09-03T15:32:00Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/hub4j/github-api/pulls/120",
      "html_url": "https://github.com/hub4j/github-api/pull/120",
      "diff_url": "https://github.com/hub4j/github-api/pull/120.diff",
      "patch_url": "https://github.com/hub4j/github-api/pull/120.patch"
    },
    "body": "I'm trying to modify ghprb-plugin so that it can work behind authentication proxies.\nI added a HttpConnector implementation to ghprb-plugin:\n\n``` java\npublic class HttpConnectorWithJenkinsProxy implements HttpConnector{\n    public HttpURLConnection connect(URL url) throws IOException {\n        return (HttpURLConnection)ProxyConfiguration.open(url);\n    }\n}\n```\n\nSince all `GitHub` constructors are `private`, there is no way to call `#setConnector` before `GitHub(String, String, Sttring, String)` constructor calls `#getMyself`, nor to extend `GitHub` class.\nSo I added `HttpConnector` parameter to `connect*` methods, except `connectToEnterprise` which does not require proxies in most cases.\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/119",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/119/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/119/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/119/events",
    "html_url": "https://github.com/hub4j/github-api/issues/119",
    "id": 41729156,
    "node_id": "MDU6SXNzdWU0MTcyOTE1Ng==",
    "number": 119,
    "title": "Support notifications api",
    "user": {
      "login": "GUIpsp",
      "id": 386686,
      "node_id": "MDQ6VXNlcjM4NjY4Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/386686?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GUIpsp",
      "html_url": "https://github.com/GUIpsp",
      "followers_url": "https://api.github.com/users/GUIpsp/followers",
      "following_url": "https://api.github.com/users/GUIpsp/following{/other_user}",
      "gists_url": "https://api.github.com/users/GUIpsp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GUIpsp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GUIpsp/subscriptions",
      "organizations_url": "https://api.github.com/users/GUIpsp/orgs",
      "repos_url": "https://api.github.com/users/GUIpsp/repos",
      "events_url": "https://api.github.com/users/GUIpsp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GUIpsp/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-09-02T16:37:57Z",
    "updated_at": "2015-03-23T12:46:47Z",
    "closed_at": "2015-03-22T22:55:26Z",
    "author_association": "NONE",
    "body": "https://developer.github.com/v3/activity/notifications/\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/118",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/118/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/118/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/118/events",
    "html_url": "https://github.com/hub4j/github-api/issues/118",
    "id": 41051615,
    "node_id": "MDU6SXNzdWU0MTA1MTYxNQ==",
    "number": 118,
    "title": "Cannot create repository in organisation",
    "user": {
      "login": "Ryuinferno",
      "id": 2844952,
      "node_id": "MDQ6VXNlcjI4NDQ5NTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2844952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ryuinferno",
      "html_url": "https://github.com/Ryuinferno",
      "followers_url": "https://api.github.com/users/Ryuinferno/followers",
      "following_url": "https://api.github.com/users/Ryuinferno/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ryuinferno/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ryuinferno/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ryuinferno/subscriptions",
      "organizations_url": "https://api.github.com/users/Ryuinferno/orgs",
      "repos_url": "https://api.github.com/users/Ryuinferno/repos",
      "events_url": "https://api.github.com/users/Ryuinferno/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ryuinferno/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-08-25T11:04:09Z",
    "updated_at": "2015-02-15T15:18:09Z",
    "closed_at": "2015-02-15T15:18:09Z",
    "author_association": "NONE",
    "body": "Got this error:\n\n```\n{\"message\":\"Validation Failed\",\"documentation_url\":\"https://developer.github.com/v3/repos/#create\",\"errors\":[{\"value\":309572,\"resource\":\"Repo\",\"field\":\"team_id\",\"code\":\"invalid\"}]}\n```\n\nIs it due to an API update? Thank you.\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/117",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/117/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/117/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/117/events",
    "html_url": "https://github.com/hub4j/github-api/pull/117",
    "id": 40966201,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjAyMDYwNDQ=",
    "number": 117,
    "title": "All the refs worth knowing: Implementation of ref updating and deleting.",
    "user": {
      "login": "farmdawgnation",
      "id": 620189,
      "node_id": "MDQ6VXNlcjYyMDE4OQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/620189?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/farmdawgnation",
      "html_url": "https://github.com/farmdawgnation",
      "followers_url": "https://api.github.com/users/farmdawgnation/followers",
      "following_url": "https://api.github.com/users/farmdawgnation/following{/other_user}",
      "gists_url": "https://api.github.com/users/farmdawgnation/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/farmdawgnation/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/farmdawgnation/subscriptions",
      "organizations_url": "https://api.github.com/users/farmdawgnation/orgs",
      "repos_url": "https://api.github.com/users/farmdawgnation/repos",
      "events_url": "https://api.github.com/users/farmdawgnation/events{/privacy}",
      "received_events_url": "https://api.github.com/users/farmdawgnation/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-08-23T03:35:11Z",
    "updated_at": "2014-08-30T21:04:00Z",
    "closed_at": "2014-08-30T21:04:00Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/hub4j/github-api/pulls/117",
      "html_url": "https://github.com/hub4j/github-api/pull/117",
      "diff_url": "https://github.com/hub4j/github-api/pull/117.diff",
      "patch_url": "https://github.com/hub4j/github-api/pull/117.patch"
    },
    "body": "This PR implements the updating and deleting of refs according to the specification in the GitHub API.\n\nhttps://developer.github.com/v3/git/refs/#update-a-reference\nhttps://developer.github.com/v3/git/refs/#delete-a-reference\n\nLet me know if there are any changes that need to be made! :)\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/116",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/116/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/116/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/116/events",
    "html_url": "https://github.com/hub4j/github-api/pull/116",
    "id": 40626957,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjAwMDI4NjI=",
    "number": 116,
    "title": "Remove getPath()",
    "user": {
      "login": "DavidTanner",
      "id": 368889,
      "node_id": "MDQ6VXNlcjM2ODg4OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/368889?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DavidTanner",
      "html_url": "https://github.com/DavidTanner",
      "followers_url": "https://api.github.com/users/DavidTanner/followers",
      "following_url": "https://api.github.com/users/DavidTanner/following{/other_user}",
      "gists_url": "https://api.github.com/users/DavidTanner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DavidTanner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DavidTanner/subscriptions",
      "organizations_url": "https://api.github.com/users/DavidTanner/orgs",
      "repos_url": "https://api.github.com/users/DavidTanner/repos",
      "events_url": "https://api.github.com/users/DavidTanner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DavidTanner/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2014-08-19T19:22:33Z",
    "updated_at": "2014-10-08T17:37:18Z",
    "closed_at": "2014-08-30T20:54:05Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/hub4j/github-api/pulls/116",
      "html_url": "https://github.com/hub4j/github-api/pull/116",
      "diff_url": "https://github.com/hub4j/github-api/pull/116.diff",
      "patch_url": "https://github.com/hub4j/github-api/pull/116.patch"
    },
    "body": "When getting the path and providing an enterprise url for the apiUrl, the /api/v3 portion gets duplicated.  Since they will be combined on line 231 of GitHub.java there is no point just grabbing the path.  See https://github.com/janinko/ghprb/issues/178, and https://issues.jenkins-ci.org/browse/JENKINS-24145?focusedCommentId=208270#comment-208270\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/115",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/115/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/115/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/115/events",
    "html_url": "https://github.com/hub4j/github-api/pull/115",
    "id": 40496844,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTk5MjI3Njk=",
    "number": 115,
    "title": "Add missing GitHub event types.",
    "user": {
      "login": "bernd",
      "id": 461,
      "node_id": "MDQ6VXNlcjQ2MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/461?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bernd",
      "html_url": "https://github.com/bernd",
      "followers_url": "https://api.github.com/users/bernd/followers",
      "following_url": "https://api.github.com/users/bernd/following{/other_user}",
      "gists_url": "https://api.github.com/users/bernd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bernd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bernd/subscriptions",
      "organizations_url": "https://api.github.com/users/bernd/orgs",
      "repos_url": "https://api.github.com/users/bernd/repos",
      "events_url": "https://api.github.com/users/bernd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bernd/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-08-18T14:56:56Z",
    "updated_at": "2014-08-30T20:53:24Z",
    "closed_at": "2014-08-30T20:53:23Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/hub4j/github-api/pulls/115",
      "html_url": "https://github.com/hub4j/github-api/pull/115",
      "diff_url": "https://github.com/hub4j/github-api/pull/115.diff",
      "patch_url": "https://github.com/hub4j/github-api/pull/115.patch"
    },
    "body": "This adds the missing GitHub `DEPLOYMENT`, `DEPLOYMENT_STATUS`, `RELEASE` and `STATUS` events.\n\nI'm running into this:\n\n```\nException in thread \"main\" java.lang.IllegalArgumentException: No enum constant org.kohsuke.github.GHEvent.RELEASE\n```\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/114",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/114/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/114/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/114/events",
    "html_url": "https://github.com/hub4j/github-api/pull/114",
    "id": 39584503,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTkzODE5NTA=",
    "number": 114,
    "title": "get repository full name (including owner)",
    "user": {
      "login": "ndeloof",
      "id": 132757,
      "node_id": "MDQ6VXNlcjEzMjc1Nw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/132757?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ndeloof",
      "html_url": "https://github.com/ndeloof",
      "followers_url": "https://api.github.com/users/ndeloof/followers",
      "following_url": "https://api.github.com/users/ndeloof/following{/other_user}",
      "gists_url": "https://api.github.com/users/ndeloof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ndeloof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ndeloof/subscriptions",
      "organizations_url": "https://api.github.com/users/ndeloof/orgs",
      "repos_url": "https://api.github.com/users/ndeloof/repos",
      "events_url": "https://api.github.com/users/ndeloof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ndeloof/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-08-06T02:32:31Z",
    "updated_at": "2014-08-30T20:53:02Z",
    "closed_at": "2014-08-30T20:53:02Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/hub4j/github-api/pulls/114",
      "html_url": "https://github.com/hub4j/github-api/pull/114",
      "diff_url": "https://github.com/hub4j/github-api/pull/114.diff",
      "patch_url": "https://github.com/hub4j/github-api/pull/114.patch"
    },
    "body": "owner.login isn't set when owner is an organization\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/113",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/113/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/113/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/113/events",
    "html_url": "https://github.com/hub4j/github-api/issues/113",
    "id": 38966208,
    "node_id": "MDU6SXNzdWUzODk2NjIwOA==",
    "number": 113,
    "title": "Different ways of getting issue.getClosedby() return different results.",
    "user": {
      "login": "artfullyContrived",
      "id": 445103,
      "node_id": "MDQ6VXNlcjQ0NTEwMw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/445103?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/artfullyContrived",
      "html_url": "https://github.com/artfullyContrived",
      "followers_url": "https://api.github.com/users/artfullyContrived/followers",
      "following_url": "https://api.github.com/users/artfullyContrived/following{/other_user}",
      "gists_url": "https://api.github.com/users/artfullyContrived/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/artfullyContrived/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/artfullyContrived/subscriptions",
      "organizations_url": "https://api.github.com/users/artfullyContrived/orgs",
      "repos_url": "https://api.github.com/users/artfullyContrived/repos",
      "events_url": "https://api.github.com/users/artfullyContrived/events{/privacy}",
      "received_events_url": "https://api.github.com/users/artfullyContrived/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-07-29T08:00:39Z",
    "updated_at": "2015-02-15T15:16:33Z",
    "closed_at": "2015-02-15T15:16:33Z",
    "author_association": "NONE",
    "body": "The following test case shows that calling `issue.getRepository().getIssue(issue.getNumber())    .getClosedBy()` at times yields different results from `issue.getClosedBy().`\n\nAlso not all closed issues return the `GHuser` who closed them whereas github shows the closer of the issue.\n\n```\nimport static org.junit.Assert.assertEquals;\n\nimport java.io.IOException;\n\nimport org.junit.BeforeClass;\nimport org.junit.Test;\nimport org.kohsuke.github.GHIssue;\nimport org.kohsuke.github.GHIssueState;\nimport org.kohsuke.github.GHRepository;\nimport org.kohsuke.github.GitHub;\n\npublic class IssueTester {\n\n    private  static GHRepository repo;\n\n    @BeforeClass\n    public  static void setup() {\n        try {\n            repo = GitHub.connectAnonymously().getRepository(\n                    \"kohsuke/github-api\");\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n\n    // These two ways of gettting closers must return same GHUser\n    @Test\n    public void testGetCloser() {\n        try {\n            for (GHIssue issue : repo.getIssues(GHIssueState.CLOSED)) {\n                assertEquals(issue.getRepository().getIssue(issue.getNumber())\n                        .getClosedBy(), issue.getClosedBy());\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n\n    // Every closed issue must have been closed by someone\n    @Test\n    public void testClosedIssue() {\n        try {\n            for (GHIssue issue : repo.getIssues(GHIssueState.CLOSED)) {\n                assert (issue.getClosedBy() != null);\n                assert (issue.getRepository().getIssue(issue.getNumber())\n                        .getClosedBy() != null);\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n```\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/112",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/112/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/112/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/112/events",
    "html_url": "https://github.com/hub4j/github-api/pull/112",
    "id": 38606529,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTg4MjMxODU=",
    "number": 112,
    "title": "Get all orgs/teams/permissions in a single GitHub API call",
    "user": {
      "login": "lucamilanesio",
      "id": 182893,
      "node_id": "MDQ6VXNlcjE4Mjg5Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/182893?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lucamilanesio",
      "html_url": "https://github.com/lucamilanesio",
      "followers_url": "https://api.github.com/users/lucamilanesio/followers",
      "following_url": "https://api.github.com/users/lucamilanesio/following{/other_user}",
      "gists_url": "https://api.github.com/users/lucamilanesio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lucamilanesio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lucamilanesio/subscriptions",
      "organizations_url": "https://api.github.com/users/lucamilanesio/orgs",
      "repos_url": "https://api.github.com/users/lucamilanesio/repos",
      "events_url": "https://api.github.com/users/lucamilanesio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lucamilanesio/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 13,
    "created_at": "2014-07-24T08:16:46Z",
    "updated_at": "2014-08-20T09:59:14Z",
    "closed_at": "2014-08-19T17:57:39Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/hub4j/github-api/pulls/112",
      "html_url": "https://github.com/hub4j/github-api/pull/112",
      "diff_url": "https://github.com/hub4j/github-api/pull/112.diff",
      "patch_url": "https://github.com/hub4j/github-api/pull/112.patch"
    },
    "body": "Exposes a new API call at GitHub root level to build the complete\nset of organisations and teams that current user belongs to.\n\nThis change allows to massively reduce the number of calls to GitHub \nespecially for people that belongs to multiple organisations with \nlots of teams and members.\n\nSigned-off-by: Luca Milanesio luca.milanesio@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/111",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/111/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/111/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/111/events",
    "html_url": "https://github.com/hub4j/github-api/issues/111",
    "id": 38177752,
    "node_id": "MDU6SXNzdWUzODE3Nzc1Mg==",
    "number": 111,
    "title": "NullPointerException in GHPerson",
    "user": {
      "login": "kuc",
      "id": 1827393,
      "node_id": "MDQ6VXNlcjE4MjczOTM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1827393?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kuc",
      "html_url": "https://github.com/kuc",
      "followers_url": "https://api.github.com/users/kuc/followers",
      "following_url": "https://api.github.com/users/kuc/following{/other_user}",
      "gists_url": "https://api.github.com/users/kuc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kuc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kuc/subscriptions",
      "organizations_url": "https://api.github.com/users/kuc/orgs",
      "repos_url": "https://api.github.com/users/kuc/repos",
      "events_url": "https://api.github.com/users/kuc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kuc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2014-07-18T13:51:13Z",
    "updated_at": "2015-04-07T07:48:21Z",
    "closed_at": "2015-02-15T15:14:08Z",
    "author_association": "NONE",
    "body": "I'm not sure if I should report this here or to https://github.com/janinko/ghprb, but exception is thrown in `at org.kohsuke.github.GHPerson.populate(GHPerson.java:42)`.\n\nI use `GitHub API Plugin 1.55` and `GitHub Pull Request Builder 1.12`.\n\n```\nJul 14, 2014 6:54:53 PM WARNING org.jenkinsci.plugins.ghprb.GhprbPullRequest obtainAuthorEmail\nCouldn't obtain author email.\njava.lang.NullPointerException\n    at org.kohsuke.github.GHPerson.populate(GHPerson.java:42)\n    at org.kohsuke.github.GHPerson.getEmail(GHPerson.java:220)\n    at org.jenkinsci.plugins.ghprb.GhprbPullRequest.obtainAuthorEmail(GhprbPullRequest.java:266)\n    at org.jenkinsci.plugins.ghprb.GhprbPullRequest.tryBuild(GhprbPullRequest.java:161)\n    at org.jenkinsci.plugins.ghprb.GhprbPullRequest.check(GhprbPullRequest.java:106)\n    at org.jenkinsci.plugins.ghprb.GhprbRepository.onPullRequestHook(GhprbRepository.java:233)\n    at org.jenkinsci.plugins.ghprb.GhprbRootAction.doIndex(GhprbRootAction.java:62)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:483)\n    at org.kohsuke.stapler.Function$InstanceFunction.invoke(Function.java:298)\n    at org.kohsuke.stapler.Function.bindAndInvoke(Function.java:161)\n    at org.kohsuke.stapler.Function.bindAndInvokeAndServeResponse(Function.java:96)\n    at org.kohsuke.stapler.MetaClass$2.dispatch(MetaClass.java:164)\n    at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:728)\n    at org.kohsuke.stapler.Stapler.invoke(Stapler.java:858)\n    at org.kohsuke.stapler.MetaClass$12.dispatch(MetaClass.java:390)\n    at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:728)\n    at org.kohsuke.stapler.Stapler.invoke(Stapler.java:858)\n    at org.kohsuke.stapler.Stapler.invoke(Stapler.java:631)\n(...)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/110",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/110/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/110/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/110/events",
    "html_url": "https://github.com/hub4j/github-api/issues/110",
    "id": 38099071,
    "node_id": "MDU6SXNzdWUzODA5OTA3MQ==",
    "number": 110,
    "title": "Suggested enhancement: GHPerson#getAllRepositories()",
    "user": {
      "login": "alexrothenberg",
      "id": 12577,
      "node_id": "MDQ6VXNlcjEyNTc3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12577?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexrothenberg",
      "html_url": "https://github.com/alexrothenberg",
      "followers_url": "https://api.github.com/users/alexrothenberg/followers",
      "following_url": "https://api.github.com/users/alexrothenberg/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexrothenberg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexrothenberg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexrothenberg/subscriptions",
      "organizations_url": "https://api.github.com/users/alexrothenberg/orgs",
      "repos_url": "https://api.github.com/users/alexrothenberg/repos",
      "events_url": "https://api.github.com/users/alexrothenberg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexrothenberg/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-07-17T16:18:32Z",
    "updated_at": "2015-02-15T15:06:35Z",
    "closed_at": "2015-02-15T15:06:35Z",
    "author_association": "NONE",
    "body": "Currently `GHPerson#getRepositories()` will only get the first 30 repositories.  It would be useful (to me) to have a `getAllRepositories` that returns a map of all my repositories, if there are a lot it would follow pagination links making several github api requests.\n\nWould you be open to this enhancement?  If so I'll work on a pull request.\n\nThanks\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/109",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/109/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/109/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/109/events",
    "html_url": "https://github.com/hub4j/github-api/issues/109",
    "id": 37772481,
    "node_id": "MDU6SXNzdWUzNzc3MjQ4MQ==",
    "number": 109,
    "title": "add support for proxy",
    "user": {
      "login": "layerssss",
      "id": 1559832,
      "node_id": "MDQ6VXNlcjE1NTk4MzI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1559832?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/layerssss",
      "html_url": "https://github.com/layerssss",
      "followers_url": "https://api.github.com/users/layerssss/followers",
      "following_url": "https://api.github.com/users/layerssss/following{/other_user}",
      "gists_url": "https://api.github.com/users/layerssss/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/layerssss/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/layerssss/subscriptions",
      "organizations_url": "https://api.github.com/users/layerssss/orgs",
      "repos_url": "https://api.github.com/users/layerssss/repos",
      "events_url": "https://api.github.com/users/layerssss/events{/privacy}",
      "received_events_url": "https://api.github.com/users/layerssss/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-07-14T09:50:13Z",
    "updated_at": "2015-02-15T17:14:50Z",
    "closed_at": "2015-02-15T15:03:41Z",
    "author_association": "NONE",
    "body": "Hi, I am using the github-oauth-plugin on my jenkins instances. And I need an https proxy to reach github.com access points. Recently the plugin [patched](https://github.com/jenkinsci/github-oauth-plugin/pull/15) its oauth part with support for setting an http proxy via `-Dhttps.proxyHost` & `-Dhttps.proxyPort` arguments.\n\nHowever, setting those is still not effective for retrieving user's github group list, which is backed by github-api. So is there a way can I set a proxy for github-api? or we need one\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/108",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/108/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/108/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/108/events",
    "html_url": "https://github.com/hub4j/github-api/issues/108",
    "id": 37562777,
    "node_id": "MDU6SXNzdWUzNzU2Mjc3Nw==",
    "number": 108,
    "title": "Error while accessing rate limit API -  No subject alternative DNS name matching api.github.com found.",
    "user": {
      "login": "kuc",
      "id": 1827393,
      "node_id": "MDQ6VXNlcjE4MjczOTM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1827393?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kuc",
      "html_url": "https://github.com/kuc",
      "followers_url": "https://api.github.com/users/kuc/followers",
      "following_url": "https://api.github.com/users/kuc/following{/other_user}",
      "gists_url": "https://api.github.com/users/kuc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kuc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kuc/subscriptions",
      "organizations_url": "https://api.github.com/users/kuc/orgs",
      "repos_url": "https://api.github.com/users/kuc/repos",
      "events_url": "https://api.github.com/users/kuc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kuc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-07-10T13:36:53Z",
    "updated_at": "2015-02-15T14:58:08Z",
    "closed_at": "2015-02-15T14:58:08Z",
    "author_association": "NONE",
    "body": "```\njavax.net.ssl.SSLHandshakeException: java.security.cert.CertificateException: No subject alternative DNS name matching api.github.com found.\n    at sun.security.ssl.Alerts.getSSLException(Alerts.java:192)\n    at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1917)\n    at sun.security.ssl.Handshaker.fatalSE(Handshaker.java:301)\n    at sun.security.ssl.Handshaker.fatalSE(Handshaker.java:295)\n    at sun.security.ssl.ClientHandshaker.serverCertificate(ClientHandshaker.java:1369)\n    at sun.security.ssl.ClientHandshaker.processMessage(ClientHandshaker.java:156)\n    at sun.security.ssl.Handshaker.processLoop(Handshaker.java:925)\n    at sun.security.ssl.Handshaker.process_record(Handshaker.java:860)\n    at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:1043)\n    at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1343)\n    at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1371)\n    at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1355)\n    at sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:563)\n    at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185)\n    at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1511)\n    at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1439)\n    at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:254)\n    at org.kohsuke.github.Requester.parse(Requester.java:359)\n    at org.kohsuke.github.Requester._to(Requester.java:180)\n    at org.kohsuke.github.Requester.to(Requester.java:155)\n    at org.kohsuke.github.GitHub.getRateLimit(GitHub.java:244)\n    at org.jenkinsci.plugins.ghprb.GhprbRepository.initGhRepository(GhprbRepository.java:51)\n    at org.jenkinsci.plugins.ghprb.GhprbRepository.check(GhprbRepository.java:73)\n    at org.jenkinsci.plugins.ghprb.Ghprb.run(Ghprb.java:95)\n    at org.jenkinsci.plugins.ghprb.GhprbTrigger.run(GhprbTrigger.java:124)\n    at hudson.triggers.Trigger.checkTriggers(Trigger.java:266)\n    at hudson.triggers.Trigger$Cron.doRun(Trigger.java:214)\n    at hudson.triggers.SafeTimerTask.run(SafeTimerTask.java:54)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n    at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)\n    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)\n    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: java.security.cert.CertificateException: No subject alternative DNS name matching api.github.com found.\n    at sun.security.util.HostnameChecker.matchDNS(HostnameChecker.java:191)\n    at sun.security.util.HostnameChecker.match(HostnameChecker.java:93)\n    at sun.security.ssl.X509TrustManagerImpl.checkIdentity(X509TrustManagerImpl.java:455)\n    at sun.security.ssl.X509TrustManagerImpl.checkIdentity(X509TrustManagerImpl.java:436)\n    at sun.security.ssl.X509TrustManagerImpl.checkTrusted(X509TrustManagerImpl.java:200)\n    at sun.security.ssl.X509TrustManagerImpl.checkServerTrusted(X509TrustManagerImpl.java:124)\n    at sun.security.ssl.ClientHandshaker.serverCertificate(ClientHandshaker.java:1351)\n    ... 30 more\n```\n\nI use Jenkins via HTTPS with self-signed certificate - maybe it's related to\nhttp://stackoverflow.com/questions/10258101/sslhandshakeexception-no-subject-alternative-names-present\nor\nhttp://stackoverflow.com/questions/8443081/how-are-ssl-certificate-server-names-resolved-can-i-add-alternative-names-using\n?\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/107",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/107/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/107/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/107/events",
    "html_url": "https://github.com/hub4j/github-api/pull/107",
    "id": 37440591,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTgxNDU2MjA=",
    "number": 107,
    "title": "General pagination",
    "user": {
      "login": "msperisen",
      "id": 2448228,
      "node_id": "MDQ6VXNlcjI0NDgyMjg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2448228?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/msperisen",
      "html_url": "https://github.com/msperisen",
      "followers_url": "https://api.github.com/users/msperisen/followers",
      "following_url": "https://api.github.com/users/msperisen/following{/other_user}",
      "gists_url": "https://api.github.com/users/msperisen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/msperisen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msperisen/subscriptions",
      "organizations_url": "https://api.github.com/users/msperisen/orgs",
      "repos_url": "https://api.github.com/users/msperisen/repos",
      "events_url": "https://api.github.com/users/msperisen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/msperisen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-07-09T07:38:48Z",
    "updated_at": "2014-08-30T20:52:36Z",
    "closed_at": "2014-08-30T20:52:35Z",
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/hub4j/github-api/pulls/107",
      "html_url": "https://github.com/hub4j/github-api/pull/107",
      "diff_url": "https://github.com/hub4j/github-api/pull/107.diff",
      "patch_url": "https://github.com/hub4j/github-api/pull/107.patch"
    },
    "body": "implementation of general pagination by evaluating link header field. as suggested by api the link for pagination is not constructed in code but taken out of the link field (rel=next).\nrefresh of cache to be able to reflect update operations on github without creating new GitHub instance.\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/106",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/106/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/106/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/106/events",
    "html_url": "https://github.com/hub4j/github-api/pull/106",
    "id": 37058872,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTc5MzMwMjg=",
    "number": 106,
    "title": "Implement pagination on list of private+public repos of a user.",
    "user": {
      "login": "lucamilanesio",
      "id": 182893,
      "node_id": "MDQ6VXNlcjE4Mjg5Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/182893?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lucamilanesio",
      "html_url": "https://github.com/lucamilanesio",
      "followers_url": "https://api.github.com/users/lucamilanesio/followers",
      "following_url": "https://api.github.com/users/lucamilanesio/following{/other_user}",
      "gists_url": "https://api.github.com/users/lucamilanesio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lucamilanesio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lucamilanesio/subscriptions",
      "organizations_url": "https://api.github.com/users/lucamilanesio/orgs",
      "repos_url": "https://api.github.com/users/lucamilanesio/repos",
      "events_url": "https://api.github.com/users/lucamilanesio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lucamilanesio/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-07-03T09:08:01Z",
    "updated_at": "2014-07-05T02:13:04Z",
    "closed_at": "2014-07-05T02:13:04Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/hub4j/github-api/pulls/106",
      "html_url": "https://github.com/hub4j/github-api/pull/106",
      "diff_url": "https://github.com/hub4j/github-api/pull/106.diff",
      "patch_url": "https://github.com/hub4j/github-api/pull/106.patch"
    },
    "body": "The paginated version of listRepositories() was \nmissing at GHMyself: as side-effect of this bug\nwhen requesting a paginated list of repositories\nthe ones privately owned by a user were not shown.\n\nThis was caused by the missing override of the \nlistRepositories(final int pageSize) at GHMyself\nthat caused the GHPerson implementation to invoked.\n\nThe GHPerson version uses the /users/:org/repos?per_page=x\nURL which _works fine_ for organisations but unfortunately\n_does not return_ private repositories for users.\n\nIMHO GitHub API are quite inconsistent form this \npoint of view, but they are documented in this way\nso that work (inconsistently) as designed.\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/105",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/105/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/105/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/105/events",
    "html_url": "https://github.com/hub4j/github-api/issues/105",
    "id": 36875199,
    "node_id": "MDU6SXNzdWUzNjg3NTE5OQ==",
    "number": 105,
    "title": "Add support for retrieving repository available labels",
    "user": {
      "login": "idoganzer",
      "id": 7049039,
      "node_id": "MDQ6VXNlcjcwNDkwMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7049039?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/idoganzer",
      "html_url": "https://github.com/idoganzer",
      "followers_url": "https://api.github.com/users/idoganzer/followers",
      "following_url": "https://api.github.com/users/idoganzer/following{/other_user}",
      "gists_url": "https://api.github.com/users/idoganzer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/idoganzer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/idoganzer/subscriptions",
      "organizations_url": "https://api.github.com/users/idoganzer/orgs",
      "repos_url": "https://api.github.com/users/idoganzer/repos",
      "events_url": "https://api.github.com/users/idoganzer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/idoganzer/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2014-07-01T09:18:49Z",
    "updated_at": "2015-02-15T14:55:45Z",
    "closed_at": "2015-02-15T14:55:45Z",
    "author_association": "NONE",
    "body": "Hi, this library is great!\ncan you add a support to retrieve all available labels for a repository?\nhttps://developer.github.com/v3/issues/labels/#list-all-labels-for-this-repository\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/104",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/104/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/104/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/104/events",
    "html_url": "https://github.com/hub4j/github-api/issues/104",
    "id": 36722784,
    "node_id": "MDU6SXNzdWUzNjcyMjc4NA==",
    "number": 104,
    "title": "Consider committing to using OkHttp in preference to HttpURLConnection",
    "user": {
      "login": "rtyley",
      "id": 52038,
      "node_id": "MDQ6VXNlcjUyMDM4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/52038?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rtyley",
      "html_url": "https://github.com/rtyley",
      "followers_url": "https://api.github.com/users/rtyley/followers",
      "following_url": "https://api.github.com/users/rtyley/following{/other_user}",
      "gists_url": "https://api.github.com/users/rtyley/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rtyley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rtyley/subscriptions",
      "organizations_url": "https://api.github.com/users/rtyley/orgs",
      "repos_url": "https://api.github.com/users/rtyley/repos",
      "events_url": "https://api.github.com/users/rtyley/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rtyley/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-06-28T10:37:56Z",
    "updated_at": "2015-03-22T18:18:39Z",
    "closed_at": "2015-03-22T18:18:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "This blogpost explains the advantages of OkHttp's interface over `HttpURLConnection` - it neatly supports separation of [Request](https://github.com/square/okhttp/blob/parent-2.0.0/okhttp/src/main/java/com/squareup/okhttp/Request.java) and [Response](https://github.com/square/okhttp/blob/parent-2.0.0/okhttp/src/main/java/com/squareup/okhttp/Response.java), and offers an asynchronous [Call](https://github.com/square/okhttp/blob/parent-2.0.0/okhttp/src/main/java/com/squareup/okhttp/Call.java) interface:\n\nhttp://corner.squareup.com/2014/06/okhttp-2.html\n\nIn order for `github-api` to take full advantage of the superior OkHttp API - and to expose it to external users so that **users can do async calls to the GitHub API** - would probably require commiting to using OkHttp everywhere within the `github-api` library, removing all usage of HttpURLConnection. This might feel like a big change, but it's mostly an _internal_ one, so hopefully would not substantially impact consumers of the library, other than offering them additional functionality.\n\nAmongst it's many consumers, OkHttp is also the engine that powers [HttpUrlConnection as of Android 4.4](https://twitter.com/JakeWharton/status/482563299511250944), so it's a library that has a lot of traction and support.\n\nSee the OkHttp ['Recipes'](https://github.com/square/okhttp/wiki/Recipes) documentation for code usage examples.\n\nWould there be any interest in a pull-request that made this happen?\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/103",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/103/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/103/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/103/events",
    "html_url": "https://github.com/hub4j/github-api/pull/103",
    "id": 36722392,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTc3MzY2ODg=",
    "number": 103,
    "title": "Update to OkHttp 2.0.0, which has a new OkUrlFactory",
    "user": {
      "login": "rtyley",
      "id": 52038,
      "node_id": "MDQ6VXNlcjUyMDM4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/52038?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rtyley",
      "html_url": "https://github.com/rtyley",
      "followers_url": "https://api.github.com/users/rtyley/followers",
      "following_url": "https://api.github.com/users/rtyley/following{/other_user}",
      "gists_url": "https://api.github.com/users/rtyley/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rtyley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rtyley/subscriptions",
      "organizations_url": "https://api.github.com/users/rtyley/orgs",
      "repos_url": "https://api.github.com/users/rtyley/repos",
      "events_url": "https://api.github.com/users/rtyley/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rtyley/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-06-28T10:13:09Z",
    "updated_at": "2014-07-03T04:13:37Z",
    "closed_at": "2014-07-03T04:13:37Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/hub4j/github-api/pulls/103",
      "html_url": "https://github.com/hub4j/github-api/pull/103",
      "diff_url": "https://github.com/hub4j/github-api/pull/103.diff",
      "patch_url": "https://github.com/hub4j/github-api/pull/103.patch"
    },
    "body": "OkHttp changed API with v2.0.0, and the `client.open(url)` method no longer exists:\n\n\"URLConnection support has moved to the okhttp-urlconnection module. If you're upgrading from 1.x, this change will impact you. You will need to add the okhttp-urlconnection module to your project and use\nthe OkUrlFactory to create new instances of HttpURLConnection\"\n\nhttps://github.com/square/okhttp/blob/main/CHANGELOG.md#version-200-rc1\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/102",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/102/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/102/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/102/events",
    "html_url": "https://github.com/hub4j/github-api/pull/102",
    "id": 36390209,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTc1MzU0MTQ=",
    "number": 102,
    "title": "Better FNFE from delete()",
    "user": {
      "login": "jglick",
      "id": 154109,
      "node_id": "MDQ6VXNlcjE1NDEwOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/154109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jglick",
      "html_url": "https://github.com/jglick",
      "followers_url": "https://api.github.com/users/jglick/followers",
      "following_url": "https://api.github.com/users/jglick/following{/other_user}",
      "gists_url": "https://api.github.com/users/jglick/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jglick/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jglick/subscriptions",
      "organizations_url": "https://api.github.com/users/jglick/orgs",
      "repos_url": "https://api.github.com/users/jglick/repos",
      "events_url": "https://api.github.com/users/jglick/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jglick/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-06-24T14:39:49Z",
    "updated_at": "2014-08-27T20:11:12Z",
    "closed_at": "2014-07-03T04:13:16Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/hub4j/github-api/pulls/102",
      "html_url": "https://github.com/hub4j/github-api/pull/102",
      "diff_url": "https://github.com/hub4j/github-api/pull/102.diff",
      "patch_url": "https://github.com/hub4j/github-api/pull/102.patch"
    },
    "body": "[Explanation](http://stackoverflow.com/a/19327004/12916)\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/101",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/101/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/101/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/101/events",
    "html_url": "https://github.com/hub4j/github-api/pull/101",
    "id": 35738965,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTcxNDgxNTk=",
    "number": 101,
    "title": "Un-finalize a handful of classes.",
    "user": {
      "login": "farmdawgnation",
      "id": 620189,
      "node_id": "MDQ6VXNlcjYyMDE4OQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/620189?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/farmdawgnation",
      "html_url": "https://github.com/farmdawgnation",
      "followers_url": "https://api.github.com/users/farmdawgnation/followers",
      "following_url": "https://api.github.com/users/farmdawgnation/following{/other_user}",
      "gists_url": "https://api.github.com/users/farmdawgnation/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/farmdawgnation/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/farmdawgnation/subscriptions",
      "organizations_url": "https://api.github.com/users/farmdawgnation/orgs",
      "repos_url": "https://api.github.com/users/farmdawgnation/repos",
      "events_url": "https://api.github.com/users/farmdawgnation/events{/privacy}",
      "received_events_url": "https://api.github.com/users/farmdawgnation/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-06-14T23:35:45Z",
    "updated_at": "2014-07-03T04:12:59Z",
    "closed_at": "2014-07-03T04:12:59Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/hub4j/github-api/pulls/101",
      "html_url": "https://github.com/hub4j/github-api/pull/101",
      "diff_url": "https://github.com/hub4j/github-api/pull/101.diff",
      "patch_url": "https://github.com/hub4j/github-api/pull/101.patch"
    },
    "body": "Having final classes prevents consumers of the API from mocking those classes in testing. I've un-finalized a handful of classes in this PR such that they will mock correctly for those people who are doing mocking work for unit tests.\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/100",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/100/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/100/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/100/events",
    "html_url": "https://github.com/hub4j/github-api/issues/100",
    "id": 35499313,
    "node_id": "MDU6SXNzdWUzNTQ5OTMxMw==",
    "number": 100,
    "title": "Unable to access commit date through api.",
    "user": {
      "login": "shalecraig",
      "id": 679197,
      "node_id": "MDQ6VXNlcjY3OTE5Nw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/679197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shalecraig",
      "html_url": "https://github.com/shalecraig",
      "followers_url": "https://api.github.com/users/shalecraig/followers",
      "following_url": "https://api.github.com/users/shalecraig/following{/other_user}",
      "gists_url": "https://api.github.com/users/shalecraig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shalecraig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shalecraig/subscriptions",
      "organizations_url": "https://api.github.com/users/shalecraig/orgs",
      "repos_url": "https://api.github.com/users/shalecraig/repos",
      "events_url": "https://api.github.com/users/shalecraig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shalecraig/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-06-11T16:07:44Z",
    "updated_at": "2014-06-11T16:22:18Z",
    "closed_at": "2014-06-11T16:22:18Z",
    "author_association": "NONE",
    "body": "API Documentation is [here](https://developer.github.com/v3/git/commits/#get-a-commit)\n\nI expected a method of the form of [1], but it looks like `getCommitter` and `getAuthor` return a User. Similarly, I expected [2] when looking for the user.\n\nIf there's a way to do this that I'm not aware of, please let me know.\n\n[1] `myGHCommit.getCommitter().getDate()` and `myGHCommit.getAuthor().getDate()`\n[2] `myGHCommit.getCommitter().getUser()` and `myGHCommit.getAuthor().getUser()`\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/99",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/99/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/99/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/99/events",
    "html_url": "https://github.com/hub4j/github-api/issues/99",
    "id": 35443082,
    "node_id": "MDU6SXNzdWUzNTQ0MzA4Mg==",
    "number": 99,
    "title": "getReadme its outdated",
    "user": {
      "login": "patriq",
      "id": 3120671,
      "node_id": "MDQ6VXNlcjMxMjA2NzE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3120671?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/patriq",
      "html_url": "https://github.com/patriq",
      "followers_url": "https://api.github.com/users/patriq/followers",
      "following_url": "https://api.github.com/users/patriq/following{/other_user}",
      "gists_url": "https://api.github.com/users/patriq/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/patriq/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/patriq/subscriptions",
      "organizations_url": "https://api.github.com/users/patriq/orgs",
      "repos_url": "https://api.github.com/users/patriq/repos",
      "events_url": "https://api.github.com/users/patriq/events{/privacy}",
      "received_events_url": "https://api.github.com/users/patriq/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-06-11T01:43:57Z",
    "updated_at": "2015-02-15T14:31:41Z",
    "closed_at": "2015-02-15T14:31:41Z",
    "author_association": "NONE",
    "body": "You either use this:\n/repos/:owner/:repo/readme\n\nOr you just change it to this:\n\nGHContent getReadme(){\n     return getFileContent(\"README.md\");\n}\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/98",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/98/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/98/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/98/events",
    "html_url": "https://github.com/hub4j/github-api/pull/98",
    "id": 35416453,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTY5NjAyMDE=",
    "number": 98,
    "title": "Implemented New Method to Retrieve all Collaborators from a Repository",
    "user": {
      "login": "luciano-sabenca-movile",
      "id": 1260136,
      "node_id": "MDQ6VXNlcjEyNjAxMzY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1260136?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luciano-sabenca-movile",
      "html_url": "https://github.com/luciano-sabenca-movile",
      "followers_url": "https://api.github.com/users/luciano-sabenca-movile/followers",
      "following_url": "https://api.github.com/users/luciano-sabenca-movile/following{/other_user}",
      "gists_url": "https://api.github.com/users/luciano-sabenca-movile/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luciano-sabenca-movile/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luciano-sabenca-movile/subscriptions",
      "organizations_url": "https://api.github.com/users/luciano-sabenca-movile/orgs",
      "repos_url": "https://api.github.com/users/luciano-sabenca-movile/repos",
      "events_url": "https://api.github.com/users/luciano-sabenca-movile/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luciano-sabenca-movile/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2014-06-10T19:31:08Z",
    "updated_at": "2014-07-03T13:02:42Z",
    "closed_at": "2014-07-03T04:26:01Z",
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/hub4j/github-api/pulls/98",
      "html_url": "https://github.com/hub4j/github-api/pull/98",
      "diff_url": "https://github.com/hub4j/github-api/pull/98.diff",
      "patch_url": "https://github.com/hub4j/github-api/pull/98.patch"
    },
    "body": "Hi. \n\nI have a very ordinary use-case: I need to check if a Github user has access to a repository. Unfortunately, the Github's API doesn't provide a way to do it directly. To do it, I need to get all repos and check in which repositories the user is in repository's collaborators list. I tried to implement it, but a found a little problem: the method getCollaborators just return the first 30th collaborators. So, I've implemented a new method to retrieve all collaborators from a repository doing pagination just like several other methods from this library. \n\nThere is also, in this pull-request, fixes to some formatting issues and a unitary test-case to the new method.\n\nAny question/suggestion, please, feel free to contact me.\n\nThanks in advance\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/97",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/97/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/97/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/97/events",
    "html_url": "https://github.com/hub4j/github-api/pull/97",
    "id": 35216270,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTY4NTY5MzM=",
    "number": 97,
    "title": "Add support for adding context to commit status.",
    "user": {
      "login": "suryagaddipati",
      "id": 64078,
      "node_id": "MDQ6VXNlcjY0MDc4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/64078?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/suryagaddipati",
      "html_url": "https://github.com/suryagaddipati",
      "followers_url": "https://api.github.com/users/suryagaddipati/followers",
      "following_url": "https://api.github.com/users/suryagaddipati/following{/other_user}",
      "gists_url": "https://api.github.com/users/suryagaddipati/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/suryagaddipati/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/suryagaddipati/subscriptions",
      "organizations_url": "https://api.github.com/users/suryagaddipati/orgs",
      "repos_url": "https://api.github.com/users/suryagaddipati/repos",
      "events_url": "https://api.github.com/users/suryagaddipati/events{/privacy}",
      "received_events_url": "https://api.github.com/users/suryagaddipati/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2014-06-07T19:34:59Z",
    "updated_at": "2014-06-13T17:30:26Z",
    "closed_at": "2014-06-08T17:21:43Z",
    "author_association": "COLLABORATOR",
    "pull_request": {
      "url": "https://api.github.com/repos/hub4j/github-api/pulls/97",
      "html_url": "https://github.com/hub4j/github-api/pull/97",
      "diff_url": "https://github.com/hub4j/github-api/pull/97.diff",
      "patch_url": "https://github.com/hub4j/github-api/pull/97.patch"
    },
    "body": "This groups statuses from multiple contexts to return single combined\nstatus. More information here:\nhttps://developer.github.com/changes/2014-03-27-combined-status-api/\n"
  }
]