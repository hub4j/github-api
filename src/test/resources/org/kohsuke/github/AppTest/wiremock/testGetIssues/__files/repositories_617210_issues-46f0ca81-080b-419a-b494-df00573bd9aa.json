[
  {
    "url": "https://api.github.com/repos/github-api/github-api/issues/112",
    "repository_url": "https://api.github.com/repos/github-api/github-api",
    "labels_url": "https://api.github.com/repos/github-api/github-api/issues/112/labels{/name}",
    "comments_url": "https://api.github.com/repos/github-api/github-api/issues/112/comments",
    "events_url": "https://api.github.com/repos/github-api/github-api/issues/112/events",
    "html_url": "https://github.com/github-api/github-api/pull/112",
    "id": 38606529,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTg4MjMxODU=",
    "number": 112,
    "title": "Get all orgs/teams/permissions in a single GitHub API call",
    "user": {
      "login": "lucamilanesio",
      "id": 182893,
      "node_id": "MDQ6VXNlcjE4Mjg5Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/182893?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lucamilanesio",
      "html_url": "https://github.com/lucamilanesio",
      "followers_url": "https://api.github.com/users/lucamilanesio/followers",
      "following_url": "https://api.github.com/users/lucamilanesio/following{/other_user}",
      "gists_url": "https://api.github.com/users/lucamilanesio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lucamilanesio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lucamilanesio/subscriptions",
      "organizations_url": "https://api.github.com/users/lucamilanesio/orgs",
      "repos_url": "https://api.github.com/users/lucamilanesio/repos",
      "events_url": "https://api.github.com/users/lucamilanesio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lucamilanesio/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 13,
    "created_at": "2014-07-24T08:16:46Z",
    "updated_at": "2014-08-20T09:59:14Z",
    "closed_at": "2014-08-19T17:57:39Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/github-api/github-api/pulls/112",
      "html_url": "https://github.com/github-api/github-api/pull/112",
      "diff_url": "https://github.com/github-api/github-api/pull/112.diff",
      "patch_url": "https://github.com/github-api/github-api/pull/112.patch"
    },
    "body": "Exposes a new API call at GitHub root level to build the complete\nset of organisations and teams that current user belongs to.\n\nThis change allows to massively reduce the number of calls to GitHub \nespecially for people that belongs to multiple organisations with \nlots of teams and members.\n\nSigned-off-by: Luca Milanesio luca.milanesio@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/github-api/github-api/issues/111",
    "repository_url": "https://api.github.com/repos/github-api/github-api",
    "labels_url": "https://api.github.com/repos/github-api/github-api/issues/111/labels{/name}",
    "comments_url": "https://api.github.com/repos/github-api/github-api/issues/111/comments",
    "events_url": "https://api.github.com/repos/github-api/github-api/issues/111/events",
    "html_url": "https://github.com/github-api/github-api/issues/111",
    "id": 38177752,
    "node_id": "MDU6SXNzdWUzODE3Nzc1Mg==",
    "number": 111,
    "title": "NullPointerException in GHPerson",
    "user": {
      "login": "kuc",
      "id": 1827393,
      "node_id": "MDQ6VXNlcjE4MjczOTM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1827393?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kuc",
      "html_url": "https://github.com/kuc",
      "followers_url": "https://api.github.com/users/kuc/followers",
      "following_url": "https://api.github.com/users/kuc/following{/other_user}",
      "gists_url": "https://api.github.com/users/kuc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kuc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kuc/subscriptions",
      "organizations_url": "https://api.github.com/users/kuc/orgs",
      "repos_url": "https://api.github.com/users/kuc/repos",
      "events_url": "https://api.github.com/users/kuc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kuc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2014-07-18T13:51:13Z",
    "updated_at": "2015-04-07T07:48:21Z",
    "closed_at": "2015-02-15T15:14:08Z",
    "author_association": "NONE",
    "body": "I'm not sure if I should report this here or to https://github.com/janinko/ghprb, but exception is thrown in `at org.kohsuke.github.GHPerson.populate(GHPerson.java:42)`.\n\nI use `GitHub API Plugin 1.55` and `GitHub Pull Request Builder 1.12`.\n\n```\nJul 14, 2014 6:54:53 PM WARNING org.jenkinsci.plugins.ghprb.GhprbPullRequest obtainAuthorEmail\nCouldn't obtain author email.\njava.lang.NullPointerException\n    at org.kohsuke.github.GHPerson.populate(GHPerson.java:42)\n    at org.kohsuke.github.GHPerson.getEmail(GHPerson.java:220)\n    at org.jenkinsci.plugins.ghprb.GhprbPullRequest.obtainAuthorEmail(GhprbPullRequest.java:266)\n    at org.jenkinsci.plugins.ghprb.GhprbPullRequest.tryBuild(GhprbPullRequest.java:161)\n    at org.jenkinsci.plugins.ghprb.GhprbPullRequest.check(GhprbPullRequest.java:106)\n    at org.jenkinsci.plugins.ghprb.GhprbRepository.onPullRequestHook(GhprbRepository.java:233)\n    at org.jenkinsci.plugins.ghprb.GhprbRootAction.doIndex(GhprbRootAction.java:62)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:483)\n    at org.kohsuke.stapler.Function$InstanceFunction.invoke(Function.java:298)\n    at org.kohsuke.stapler.Function.bindAndInvoke(Function.java:161)\n    at org.kohsuke.stapler.Function.bindAndInvokeAndServeResponse(Function.java:96)\n    at org.kohsuke.stapler.MetaClass$2.dispatch(MetaClass.java:164)\n    at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:728)\n    at org.kohsuke.stapler.Stapler.invoke(Stapler.java:858)\n    at org.kohsuke.stapler.MetaClass$12.dispatch(MetaClass.java:390)\n    at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:728)\n    at org.kohsuke.stapler.Stapler.invoke(Stapler.java:858)\n    at org.kohsuke.stapler.Stapler.invoke(Stapler.java:631)\n(...)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/github-api/github-api/issues/110",
    "repository_url": "https://api.github.com/repos/github-api/github-api",
    "labels_url": "https://api.github.com/repos/github-api/github-api/issues/110/labels{/name}",
    "comments_url": "https://api.github.com/repos/github-api/github-api/issues/110/comments",
    "events_url": "https://api.github.com/repos/github-api/github-api/issues/110/events",
    "html_url": "https://github.com/github-api/github-api/issues/110",
    "id": 38099071,
    "node_id": "MDU6SXNzdWUzODA5OTA3MQ==",
    "number": 110,
    "title": "Suggested enhancement: GHPerson#getAllRepositories()",
    "user": {
      "login": "alexrothenberg",
      "id": 12577,
      "node_id": "MDQ6VXNlcjEyNTc3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12577?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexrothenberg",
      "html_url": "https://github.com/alexrothenberg",
      "followers_url": "https://api.github.com/users/alexrothenberg/followers",
      "following_url": "https://api.github.com/users/alexrothenberg/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexrothenberg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexrothenberg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexrothenberg/subscriptions",
      "organizations_url": "https://api.github.com/users/alexrothenberg/orgs",
      "repos_url": "https://api.github.com/users/alexrothenberg/repos",
      "events_url": "https://api.github.com/users/alexrothenberg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexrothenberg/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-07-17T16:18:32Z",
    "updated_at": "2015-02-15T15:06:35Z",
    "closed_at": "2015-02-15T15:06:35Z",
    "author_association": "NONE",
    "body": "Currently `GHPerson#getRepositories()` will only get the first 30 repositories.  It would be useful (to me) to have a `getAllRepositories` that returns a map of all my repositories, if there are a lot it would follow pagination links making several github api requests.\n\nWould you be open to this enhancement?  If so I'll work on a pull request.\n\nThanks\n"
  },
  {
    "url": "https://api.github.com/repos/github-api/github-api/issues/109",
    "repository_url": "https://api.github.com/repos/github-api/github-api",
    "labels_url": "https://api.github.com/repos/github-api/github-api/issues/109/labels{/name}",
    "comments_url": "https://api.github.com/repos/github-api/github-api/issues/109/comments",
    "events_url": "https://api.github.com/repos/github-api/github-api/issues/109/events",
    "html_url": "https://github.com/github-api/github-api/issues/109",
    "id": 37772481,
    "node_id": "MDU6SXNzdWUzNzc3MjQ4MQ==",
    "number": 109,
    "title": "add support for proxy",
    "user": {
      "login": "layerssss",
      "id": 1559832,
      "node_id": "MDQ6VXNlcjE1NTk4MzI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1559832?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/layerssss",
      "html_url": "https://github.com/layerssss",
      "followers_url": "https://api.github.com/users/layerssss/followers",
      "following_url": "https://api.github.com/users/layerssss/following{/other_user}",
      "gists_url": "https://api.github.com/users/layerssss/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/layerssss/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/layerssss/subscriptions",
      "organizations_url": "https://api.github.com/users/layerssss/orgs",
      "repos_url": "https://api.github.com/users/layerssss/repos",
      "events_url": "https://api.github.com/users/layerssss/events{/privacy}",
      "received_events_url": "https://api.github.com/users/layerssss/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-07-14T09:50:13Z",
    "updated_at": "2015-02-15T17:14:50Z",
    "closed_at": "2015-02-15T15:03:41Z",
    "author_association": "NONE",
    "body": "Hi, I am using the github-oauth-plugin on my jenkins instances. And I need an https proxy to reach github.com access points. Recently the plugin [patched](https://github.com/jenkinsci/github-oauth-plugin/pull/15) its oauth part with support for setting an http proxy via `-Dhttps.proxyHost` & `-Dhttps.proxyPort` arguments.\n\nHowever, setting those is still not effective for retrieving user's github group list, which is backed by github-api. So is there a way can I set a proxy for github-api? or we need one\n"
  },
  {
    "url": "https://api.github.com/repos/github-api/github-api/issues/108",
    "repository_url": "https://api.github.com/repos/github-api/github-api",
    "labels_url": "https://api.github.com/repos/github-api/github-api/issues/108/labels{/name}",
    "comments_url": "https://api.github.com/repos/github-api/github-api/issues/108/comments",
    "events_url": "https://api.github.com/repos/github-api/github-api/issues/108/events",
    "html_url": "https://github.com/github-api/github-api/issues/108",
    "id": 37562777,
    "node_id": "MDU6SXNzdWUzNzU2Mjc3Nw==",
    "number": 108,
    "title": "Error while accessing rate limit API -  No subject alternative DNS name matching api.github.com found.",
    "user": {
      "login": "kuc",
      "id": 1827393,
      "node_id": "MDQ6VXNlcjE4MjczOTM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1827393?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kuc",
      "html_url": "https://github.com/kuc",
      "followers_url": "https://api.github.com/users/kuc/followers",
      "following_url": "https://api.github.com/users/kuc/following{/other_user}",
      "gists_url": "https://api.github.com/users/kuc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kuc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kuc/subscriptions",
      "organizations_url": "https://api.github.com/users/kuc/orgs",
      "repos_url": "https://api.github.com/users/kuc/repos",
      "events_url": "https://api.github.com/users/kuc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kuc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-07-10T13:36:53Z",
    "updated_at": "2015-02-15T14:58:08Z",
    "closed_at": "2015-02-15T14:58:08Z",
    "author_association": "NONE",
    "body": "```\njavax.net.ssl.SSLHandshakeException: java.security.cert.CertificateException: No subject alternative DNS name matching api.github.com found.\n    at sun.security.ssl.Alerts.getSSLException(Alerts.java:192)\n    at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1917)\n    at sun.security.ssl.Handshaker.fatalSE(Handshaker.java:301)\n    at sun.security.ssl.Handshaker.fatalSE(Handshaker.java:295)\n    at sun.security.ssl.ClientHandshaker.serverCertificate(ClientHandshaker.java:1369)\n    at sun.security.ssl.ClientHandshaker.processMessage(ClientHandshaker.java:156)\n    at sun.security.ssl.Handshaker.processLoop(Handshaker.java:925)\n    at sun.security.ssl.Handshaker.process_record(Handshaker.java:860)\n    at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:1043)\n    at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1343)\n    at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1371)\n    at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1355)\n    at sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:563)\n    at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185)\n    at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1511)\n    at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1439)\n    at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:254)\n    at org.kohsuke.github.Requester.parse(Requester.java:359)\n    at org.kohsuke.github.Requester._to(Requester.java:180)\n    at org.kohsuke.github.Requester.to(Requester.java:155)\n    at org.kohsuke.github.GitHub.getRateLimit(GitHub.java:244)\n    at org.jenkinsci.plugins.ghprb.GhprbRepository.initGhRepository(GhprbRepository.java:51)\n    at org.jenkinsci.plugins.ghprb.GhprbRepository.check(GhprbRepository.java:73)\n    at org.jenkinsci.plugins.ghprb.Ghprb.run(Ghprb.java:95)\n    at org.jenkinsci.plugins.ghprb.GhprbTrigger.run(GhprbTrigger.java:124)\n    at hudson.triggers.Trigger.checkTriggers(Trigger.java:266)\n    at hudson.triggers.Trigger$Cron.doRun(Trigger.java:214)\n    at hudson.triggers.SafeTimerTask.run(SafeTimerTask.java:54)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n    at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)\n    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)\n    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: java.security.cert.CertificateException: No subject alternative DNS name matching api.github.com found.\n    at sun.security.util.HostnameChecker.matchDNS(HostnameChecker.java:191)\n    at sun.security.util.HostnameChecker.match(HostnameChecker.java:93)\n    at sun.security.ssl.X509TrustManagerImpl.checkIdentity(X509TrustManagerImpl.java:455)\n    at sun.security.ssl.X509TrustManagerImpl.checkIdentity(X509TrustManagerImpl.java:436)\n    at sun.security.ssl.X509TrustManagerImpl.checkTrusted(X509TrustManagerImpl.java:200)\n    at sun.security.ssl.X509TrustManagerImpl.checkServerTrusted(X509TrustManagerImpl.java:124)\n    at sun.security.ssl.ClientHandshaker.serverCertificate(ClientHandshaker.java:1351)\n    ... 30 more\n```\n\nI use Jenkins via HTTPS with self-signed certificate - maybe it's related to\nhttp://stackoverflow.com/questions/10258101/sslhandshakeexception-no-subject-alternative-names-present\nor\nhttp://stackoverflow.com/questions/8443081/how-are-ssl-certificate-server-names-resolved-can-i-add-alternative-names-using\n?\n"
  },
  {
    "url": "https://api.github.com/repos/github-api/github-api/issues/107",
    "repository_url": "https://api.github.com/repos/github-api/github-api",
    "labels_url": "https://api.github.com/repos/github-api/github-api/issues/107/labels{/name}",
    "comments_url": "https://api.github.com/repos/github-api/github-api/issues/107/comments",
    "events_url": "https://api.github.com/repos/github-api/github-api/issues/107/events",
    "html_url": "https://github.com/github-api/github-api/pull/107",
    "id": 37440591,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTgxNDU2MjA=",
    "number": 107,
    "title": "General pagination",
    "user": {
      "login": "msperisen",
      "id": 2448228,
      "node_id": "MDQ6VXNlcjI0NDgyMjg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2448228?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/msperisen",
      "html_url": "https://github.com/msperisen",
      "followers_url": "https://api.github.com/users/msperisen/followers",
      "following_url": "https://api.github.com/users/msperisen/following{/other_user}",
      "gists_url": "https://api.github.com/users/msperisen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/msperisen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msperisen/subscriptions",
      "organizations_url": "https://api.github.com/users/msperisen/orgs",
      "repos_url": "https://api.github.com/users/msperisen/repos",
      "events_url": "https://api.github.com/users/msperisen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/msperisen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-07-09T07:38:48Z",
    "updated_at": "2014-08-30T20:52:36Z",
    "closed_at": "2014-08-30T20:52:35Z",
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/github-api/github-api/pulls/107",
      "html_url": "https://github.com/github-api/github-api/pull/107",
      "diff_url": "https://github.com/github-api/github-api/pull/107.diff",
      "patch_url": "https://github.com/github-api/github-api/pull/107.patch"
    },
    "body": "implementation of general pagination by evaluating link header field. as suggested by api the link for pagination is not constructed in code but taken out of the link field (rel=next).\nrefresh of cache to be able to reflect update operations on github without creating new GitHub instance.\n"
  },
  {
    "url": "https://api.github.com/repos/github-api/github-api/issues/106",
    "repository_url": "https://api.github.com/repos/github-api/github-api",
    "labels_url": "https://api.github.com/repos/github-api/github-api/issues/106/labels{/name}",
    "comments_url": "https://api.github.com/repos/github-api/github-api/issues/106/comments",
    "events_url": "https://api.github.com/repos/github-api/github-api/issues/106/events",
    "html_url": "https://github.com/github-api/github-api/pull/106",
    "id": 37058872,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTc5MzMwMjg=",
    "number": 106,
    "title": "Implement pagination on list of private+public repos of a user.",
    "user": {
      "login": "lucamilanesio",
      "id": 182893,
      "node_id": "MDQ6VXNlcjE4Mjg5Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/182893?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lucamilanesio",
      "html_url": "https://github.com/lucamilanesio",
      "followers_url": "https://api.github.com/users/lucamilanesio/followers",
      "following_url": "https://api.github.com/users/lucamilanesio/following{/other_user}",
      "gists_url": "https://api.github.com/users/lucamilanesio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lucamilanesio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lucamilanesio/subscriptions",
      "organizations_url": "https://api.github.com/users/lucamilanesio/orgs",
      "repos_url": "https://api.github.com/users/lucamilanesio/repos",
      "events_url": "https://api.github.com/users/lucamilanesio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lucamilanesio/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-07-03T09:08:01Z",
    "updated_at": "2014-07-05T02:13:04Z",
    "closed_at": "2014-07-05T02:13:04Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/github-api/github-api/pulls/106",
      "html_url": "https://github.com/github-api/github-api/pull/106",
      "diff_url": "https://github.com/github-api/github-api/pull/106.diff",
      "patch_url": "https://github.com/github-api/github-api/pull/106.patch"
    },
    "body": "The paginated version of listRepositories() was \nmissing at GHMyself: as side-effect of this bug\nwhen requesting a paginated list of repositories\nthe ones privately owned by a user were not shown.\n\nThis was caused by the missing override of the \nlistRepositories(final int pageSize) at GHMyself\nthat caused the GHPerson implementation to invoked.\n\nThe GHPerson version uses the /users/:org/repos?per_page=x\nURL which _works fine_ for organisations but unfortunately\n_does not return_ private repositories for users.\n\nIMHO GitHub API are quite inconsistent form this \npoint of view, but they are documented in this way\nso that work (inconsistently) as designed.\n"
  },
  {
    "url": "https://api.github.com/repos/github-api/github-api/issues/105",
    "repository_url": "https://api.github.com/repos/github-api/github-api",
    "labels_url": "https://api.github.com/repos/github-api/github-api/issues/105/labels{/name}",
    "comments_url": "https://api.github.com/repos/github-api/github-api/issues/105/comments",
    "events_url": "https://api.github.com/repos/github-api/github-api/issues/105/events",
    "html_url": "https://github.com/github-api/github-api/issues/105",
    "id": 36875199,
    "node_id": "MDU6SXNzdWUzNjg3NTE5OQ==",
    "number": 105,
    "title": "Add support for retrieving repository available labels",
    "user": {
      "login": "idoganzer",
      "id": 7049039,
      "node_id": "MDQ6VXNlcjcwNDkwMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7049039?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/idoganzer",
      "html_url": "https://github.com/idoganzer",
      "followers_url": "https://api.github.com/users/idoganzer/followers",
      "following_url": "https://api.github.com/users/idoganzer/following{/other_user}",
      "gists_url": "https://api.github.com/users/idoganzer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/idoganzer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/idoganzer/subscriptions",
      "organizations_url": "https://api.github.com/users/idoganzer/orgs",
      "repos_url": "https://api.github.com/users/idoganzer/repos",
      "events_url": "https://api.github.com/users/idoganzer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/idoganzer/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2014-07-01T09:18:49Z",
    "updated_at": "2015-02-15T14:55:45Z",
    "closed_at": "2015-02-15T14:55:45Z",
    "author_association": "NONE",
    "body": "Hi, this library is great!\ncan you add a support to retrieve all available labels for a repository?\nhttps://developer.github.com/v3/issues/labels/#list-all-labels-for-this-repository\n"
  },
  {
    "url": "https://api.github.com/repos/github-api/github-api/issues/104",
    "repository_url": "https://api.github.com/repos/github-api/github-api",
    "labels_url": "https://api.github.com/repos/github-api/github-api/issues/104/labels{/name}",
    "comments_url": "https://api.github.com/repos/github-api/github-api/issues/104/comments",
    "events_url": "https://api.github.com/repos/github-api/github-api/issues/104/events",
    "html_url": "https://github.com/github-api/github-api/issues/104",
    "id": 36722784,
    "node_id": "MDU6SXNzdWUzNjcyMjc4NA==",
    "number": 104,
    "title": "Consider committing to using OkHttp in preference to HttpURLConnection",
    "user": {
      "login": "rtyley",
      "id": 52038,
      "node_id": "MDQ6VXNlcjUyMDM4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/52038?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rtyley",
      "html_url": "https://github.com/rtyley",
      "followers_url": "https://api.github.com/users/rtyley/followers",
      "following_url": "https://api.github.com/users/rtyley/following{/other_user}",
      "gists_url": "https://api.github.com/users/rtyley/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rtyley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rtyley/subscriptions",
      "organizations_url": "https://api.github.com/users/rtyley/orgs",
      "repos_url": "https://api.github.com/users/rtyley/repos",
      "events_url": "https://api.github.com/users/rtyley/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rtyley/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-06-28T10:37:56Z",
    "updated_at": "2015-03-22T18:18:39Z",
    "closed_at": "2015-03-22T18:18:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "This blogpost explains the advantages of OkHttp's interface over `HttpURLConnection` - it neatly supports separation of [Request](https://github.com/square/okhttp/blob/parent-2.0.0/okhttp/src/main/java/com/squareup/okhttp/Request.java) and [Response](https://github.com/square/okhttp/blob/parent-2.0.0/okhttp/src/main/java/com/squareup/okhttp/Response.java), and offers an asynchronous [Call](https://github.com/square/okhttp/blob/parent-2.0.0/okhttp/src/main/java/com/squareup/okhttp/Call.java) interface:\n\nhttp://corner.squareup.com/2014/06/okhttp-2.html\n\nIn order for `github-api` to take full advantage of the superior OkHttp API - and to expose it to external users so that **users can do async calls to the GitHub API** - would probably require commiting to using OkHttp everywhere within the `github-api` library, removing all usage of HttpURLConnection. This might feel like a big change, but it's mostly an _internal_ one, so hopefully would not substantially impact consumers of the library, other than offering them additional functionality.\n\nAmongst it's many consumers, OkHttp is also the engine that powers [HttpUrlConnection as of Android 4.4](https://twitter.com/JakeWharton/status/482563299511250944), so it's a library that has a lot of traction and support.\n\nSee the OkHttp ['Recipes'](https://github.com/square/okhttp/wiki/Recipes) documentation for code usage examples.\n\nWould there be any interest in a pull-request that made this happen?\n"
  },
  {
    "url": "https://api.github.com/repos/github-api/github-api/issues/103",
    "repository_url": "https://api.github.com/repos/github-api/github-api",
    "labels_url": "https://api.github.com/repos/github-api/github-api/issues/103/labels{/name}",
    "comments_url": "https://api.github.com/repos/github-api/github-api/issues/103/comments",
    "events_url": "https://api.github.com/repos/github-api/github-api/issues/103/events",
    "html_url": "https://github.com/github-api/github-api/pull/103",
    "id": 36722392,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTc3MzY2ODg=",
    "number": 103,
    "title": "Update to OkHttp 2.0.0, which has a new OkUrlFactory",
    "user": {
      "login": "rtyley",
      "id": 52038,
      "node_id": "MDQ6VXNlcjUyMDM4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/52038?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rtyley",
      "html_url": "https://github.com/rtyley",
      "followers_url": "https://api.github.com/users/rtyley/followers",
      "following_url": "https://api.github.com/users/rtyley/following{/other_user}",
      "gists_url": "https://api.github.com/users/rtyley/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rtyley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rtyley/subscriptions",
      "organizations_url": "https://api.github.com/users/rtyley/orgs",
      "repos_url": "https://api.github.com/users/rtyley/repos",
      "events_url": "https://api.github.com/users/rtyley/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rtyley/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-06-28T10:13:09Z",
    "updated_at": "2014-07-03T04:13:37Z",
    "closed_at": "2014-07-03T04:13:37Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/github-api/github-api/pulls/103",
      "html_url": "https://github.com/github-api/github-api/pull/103",
      "diff_url": "https://github.com/github-api/github-api/pull/103.diff",
      "patch_url": "https://github.com/github-api/github-api/pull/103.patch"
    },
    "body": "OkHttp changed API with v2.0.0, and the `client.open(url)` method no longer exists:\n\n\"URLConnection support has moved to the okhttp-urlconnection module. If you're upgrading from 1.x, this change will impact you. You will need to add the okhttp-urlconnection module to your project and use\nthe OkUrlFactory to create new instances of HttpURLConnection\"\n\nhttps://github.com/square/okhttp/blob/master/CHANGELOG.md#version-200-rc1\n"
  },
  {
    "url": "https://api.github.com/repos/github-api/github-api/issues/102",
    "repository_url": "https://api.github.com/repos/github-api/github-api",
    "labels_url": "https://api.github.com/repos/github-api/github-api/issues/102/labels{/name}",
    "comments_url": "https://api.github.com/repos/github-api/github-api/issues/102/comments",
    "events_url": "https://api.github.com/repos/github-api/github-api/issues/102/events",
    "html_url": "https://github.com/github-api/github-api/pull/102",
    "id": 36390209,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTc1MzU0MTQ=",
    "number": 102,
    "title": "Better FNFE from delete()",
    "user": {
      "login": "jglick",
      "id": 154109,
      "node_id": "MDQ6VXNlcjE1NDEwOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/154109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jglick",
      "html_url": "https://github.com/jglick",
      "followers_url": "https://api.github.com/users/jglick/followers",
      "following_url": "https://api.github.com/users/jglick/following{/other_user}",
      "gists_url": "https://api.github.com/users/jglick/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jglick/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jglick/subscriptions",
      "organizations_url": "https://api.github.com/users/jglick/orgs",
      "repos_url": "https://api.github.com/users/jglick/repos",
      "events_url": "https://api.github.com/users/jglick/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jglick/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-06-24T14:39:49Z",
    "updated_at": "2014-08-27T20:11:12Z",
    "closed_at": "2014-07-03T04:13:16Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/github-api/github-api/pulls/102",
      "html_url": "https://github.com/github-api/github-api/pull/102",
      "diff_url": "https://github.com/github-api/github-api/pull/102.diff",
      "patch_url": "https://github.com/github-api/github-api/pull/102.patch"
    },
    "body": "[Explanation](http://stackoverflow.com/a/19327004/12916)\n"
  },
  {
    "url": "https://api.github.com/repos/github-api/github-api/issues/101",
    "repository_url": "https://api.github.com/repos/github-api/github-api",
    "labels_url": "https://api.github.com/repos/github-api/github-api/issues/101/labels{/name}",
    "comments_url": "https://api.github.com/repos/github-api/github-api/issues/101/comments",
    "events_url": "https://api.github.com/repos/github-api/github-api/issues/101/events",
    "html_url": "https://github.com/github-api/github-api/pull/101",
    "id": 35738965,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTcxNDgxNTk=",
    "number": 101,
    "title": "Un-finalize a handful of classes.",
    "user": {
      "login": "farmdawgnation",
      "id": 620189,
      "node_id": "MDQ6VXNlcjYyMDE4OQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/620189?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/farmdawgnation",
      "html_url": "https://github.com/farmdawgnation",
      "followers_url": "https://api.github.com/users/farmdawgnation/followers",
      "following_url": "https://api.github.com/users/farmdawgnation/following{/other_user}",
      "gists_url": "https://api.github.com/users/farmdawgnation/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/farmdawgnation/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/farmdawgnation/subscriptions",
      "organizations_url": "https://api.github.com/users/farmdawgnation/orgs",
      "repos_url": "https://api.github.com/users/farmdawgnation/repos",
      "events_url": "https://api.github.com/users/farmdawgnation/events{/privacy}",
      "received_events_url": "https://api.github.com/users/farmdawgnation/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-06-14T23:35:45Z",
    "updated_at": "2014-07-03T04:12:59Z",
    "closed_at": "2014-07-03T04:12:59Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/github-api/github-api/pulls/101",
      "html_url": "https://github.com/github-api/github-api/pull/101",
      "diff_url": "https://github.com/github-api/github-api/pull/101.diff",
      "patch_url": "https://github.com/github-api/github-api/pull/101.patch"
    },
    "body": "Having final classes prevents consumers of the API from mocking those classes in testing. I've un-finalized a handful of classes in this PR such that they will mock correctly for those people who are doing mocking work for unit tests.\n"
  },
  {
    "url": "https://api.github.com/repos/github-api/github-api/issues/100",
    "repository_url": "https://api.github.com/repos/github-api/github-api",
    "labels_url": "https://api.github.com/repos/github-api/github-api/issues/100/labels{/name}",
    "comments_url": "https://api.github.com/repos/github-api/github-api/issues/100/comments",
    "events_url": "https://api.github.com/repos/github-api/github-api/issues/100/events",
    "html_url": "https://github.com/github-api/github-api/issues/100",
    "id": 35499313,
    "node_id": "MDU6SXNzdWUzNTQ5OTMxMw==",
    "number": 100,
    "title": "Unable to access commit date through api.",
    "user": {
      "login": "shalecraig",
      "id": 679197,
      "node_id": "MDQ6VXNlcjY3OTE5Nw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/679197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shalecraig",
      "html_url": "https://github.com/shalecraig",
      "followers_url": "https://api.github.com/users/shalecraig/followers",
      "following_url": "https://api.github.com/users/shalecraig/following{/other_user}",
      "gists_url": "https://api.github.com/users/shalecraig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shalecraig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shalecraig/subscriptions",
      "organizations_url": "https://api.github.com/users/shalecraig/orgs",
      "repos_url": "https://api.github.com/users/shalecraig/repos",
      "events_url": "https://api.github.com/users/shalecraig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shalecraig/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-06-11T16:07:44Z",
    "updated_at": "2014-06-11T16:22:18Z",
    "closed_at": "2014-06-11T16:22:18Z",
    "author_association": "NONE",
    "body": "API Documentation is [here](https://developer.github.com/v3/git/commits/#get-a-commit)\n\nI expected a method of the form of [1], but it looks like `getCommitter` and `getAuthor` return a User. Similarly, I expected [2] when looking for the user.\n\nIf there's a way to do this that I'm not aware of, please let me know.\n\n[1] `myGHCommit.getCommitter().getDate()` and `myGHCommit.getAuthor().getDate()`\n[2] `myGHCommit.getCommitter().getUser()` and `myGHCommit.getAuthor().getUser()`\n"
  },
  {
    "url": "https://api.github.com/repos/github-api/github-api/issues/99",
    "repository_url": "https://api.github.com/repos/github-api/github-api",
    "labels_url": "https://api.github.com/repos/github-api/github-api/issues/99/labels{/name}",
    "comments_url": "https://api.github.com/repos/github-api/github-api/issues/99/comments",
    "events_url": "https://api.github.com/repos/github-api/github-api/issues/99/events",
    "html_url": "https://github.com/github-api/github-api/issues/99",
    "id": 35443082,
    "node_id": "MDU6SXNzdWUzNTQ0MzA4Mg==",
    "number": 99,
    "title": "getReadme its outdated",
    "user": {
      "login": "patriq",
      "id": 3120671,
      "node_id": "MDQ6VXNlcjMxMjA2NzE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3120671?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/patriq",
      "html_url": "https://github.com/patriq",
      "followers_url": "https://api.github.com/users/patriq/followers",
      "following_url": "https://api.github.com/users/patriq/following{/other_user}",
      "gists_url": "https://api.github.com/users/patriq/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/patriq/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/patriq/subscriptions",
      "organizations_url": "https://api.github.com/users/patriq/orgs",
      "repos_url": "https://api.github.com/users/patriq/repos",
      "events_url": "https://api.github.com/users/patriq/events{/privacy}",
      "received_events_url": "https://api.github.com/users/patriq/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-06-11T01:43:57Z",
    "updated_at": "2015-02-15T14:31:41Z",
    "closed_at": "2015-02-15T14:31:41Z",
    "author_association": "NONE",
    "body": "You either use this:\n/repos/:owner/:repo/readme\n\nOr you just change it to this:\n\nGHContent getReadme(){\n     return getFileContent(\"README.md\");\n}\n"
  },
  {
    "url": "https://api.github.com/repos/github-api/github-api/issues/98",
    "repository_url": "https://api.github.com/repos/github-api/github-api",
    "labels_url": "https://api.github.com/repos/github-api/github-api/issues/98/labels{/name}",
    "comments_url": "https://api.github.com/repos/github-api/github-api/issues/98/comments",
    "events_url": "https://api.github.com/repos/github-api/github-api/issues/98/events",
    "html_url": "https://github.com/github-api/github-api/pull/98",
    "id": 35416453,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTY5NjAyMDE=",
    "number": 98,
    "title": "Implemented New Method to Retrieve all Collaborators from a Repository",
    "user": {
      "login": "luciano-sabenca-movile",
      "id": 1260136,
      "node_id": "MDQ6VXNlcjEyNjAxMzY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1260136?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luciano-sabenca-movile",
      "html_url": "https://github.com/luciano-sabenca-movile",
      "followers_url": "https://api.github.com/users/luciano-sabenca-movile/followers",
      "following_url": "https://api.github.com/users/luciano-sabenca-movile/following{/other_user}",
      "gists_url": "https://api.github.com/users/luciano-sabenca-movile/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luciano-sabenca-movile/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luciano-sabenca-movile/subscriptions",
      "organizations_url": "https://api.github.com/users/luciano-sabenca-movile/orgs",
      "repos_url": "https://api.github.com/users/luciano-sabenca-movile/repos",
      "events_url": "https://api.github.com/users/luciano-sabenca-movile/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luciano-sabenca-movile/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2014-06-10T19:31:08Z",
    "updated_at": "2014-07-03T13:02:42Z",
    "closed_at": "2014-07-03T04:26:01Z",
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/github-api/github-api/pulls/98",
      "html_url": "https://github.com/github-api/github-api/pull/98",
      "diff_url": "https://github.com/github-api/github-api/pull/98.diff",
      "patch_url": "https://github.com/github-api/github-api/pull/98.patch"
    },
    "body": "Hi. \n\nI have a very ordinary use-case: I need to check if a Github user has access to a repository. Unfortunately, the Github's API doesn't provide a way to do it directly. To do it, I need to get all repos and check in which repositories the user is in repository's collaborators list. I tried to implement it, but a found a little problem: the method getCollaborators just return the first 30th collaborators. So, I've implemented a new method to retrieve all collaborators from a repository doing pagination just like several other methods from this library. \n\nThere is also, in this pull-request, fixes to some formatting issues and a unitary test-case to the new method.\n\nAny question/suggestion, please, feel free to contact me.\n\nThanks in advance\n"
  },
  {
    "url": "https://api.github.com/repos/github-api/github-api/issues/97",
    "repository_url": "https://api.github.com/repos/github-api/github-api",
    "labels_url": "https://api.github.com/repos/github-api/github-api/issues/97/labels{/name}",
    "comments_url": "https://api.github.com/repos/github-api/github-api/issues/97/comments",
    "events_url": "https://api.github.com/repos/github-api/github-api/issues/97/events",
    "html_url": "https://github.com/github-api/github-api/pull/97",
    "id": 35216270,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTY4NTY5MzM=",
    "number": 97,
    "title": "Add support for adding context to commit status.",
    "user": {
      "login": "suryagaddipati",
      "id": 64078,
      "node_id": "MDQ6VXNlcjY0MDc4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/64078?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/suryagaddipati",
      "html_url": "https://github.com/suryagaddipati",
      "followers_url": "https://api.github.com/users/suryagaddipati/followers",
      "following_url": "https://api.github.com/users/suryagaddipati/following{/other_user}",
      "gists_url": "https://api.github.com/users/suryagaddipati/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/suryagaddipati/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/suryagaddipati/subscriptions",
      "organizations_url": "https://api.github.com/users/suryagaddipati/orgs",
      "repos_url": "https://api.github.com/users/suryagaddipati/repos",
      "events_url": "https://api.github.com/users/suryagaddipati/events{/privacy}",
      "received_events_url": "https://api.github.com/users/suryagaddipati/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2014-06-07T19:34:59Z",
    "updated_at": "2014-06-13T17:30:26Z",
    "closed_at": "2014-06-08T17:21:43Z",
    "author_association": "COLLABORATOR",
    "pull_request": {
      "url": "https://api.github.com/repos/github-api/github-api/pulls/97",
      "html_url": "https://github.com/github-api/github-api/pull/97",
      "diff_url": "https://github.com/github-api/github-api/pull/97.diff",
      "patch_url": "https://github.com/github-api/github-api/pull/97.patch"
    },
    "body": "This groups statuses from multiple contexts to return single combined\nstatus. More information here:\nhttps://developer.github.com/changes/2014-03-27-combined-status-api/\n"
  },
  {
    "url": "https://api.github.com/repos/github-api/github-api/issues/96",
    "repository_url": "https://api.github.com/repos/github-api/github-api",
    "labels_url": "https://api.github.com/repos/github-api/github-api/issues/96/labels{/name}",
    "comments_url": "https://api.github.com/repos/github-api/github-api/issues/96/comments",
    "events_url": "https://api.github.com/repos/github-api/github-api/issues/96/events",
    "html_url": "https://github.com/github-api/github-api/issues/96",
    "id": 35063591,
    "node_id": "MDU6SXNzdWUzNTA2MzU5MQ==",
    "number": 96,
    "title": "Add support for commit status contexts.",
    "user": {
      "login": "farmdawgnation",
      "id": 620189,
      "node_id": "MDQ6VXNlcjYyMDE4OQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/620189?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/farmdawgnation",
      "html_url": "https://github.com/farmdawgnation",
      "followers_url": "https://api.github.com/users/farmdawgnation/followers",
      "following_url": "https://api.github.com/users/farmdawgnation/following{/other_user}",
      "gists_url": "https://api.github.com/users/farmdawgnation/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/farmdawgnation/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/farmdawgnation/subscriptions",
      "organizations_url": "https://api.github.com/users/farmdawgnation/orgs",
      "repos_url": "https://api.github.com/users/farmdawgnation/repos",
      "events_url": "https://api.github.com/users/farmdawgnation/events{/privacy}",
      "received_events_url": "https://api.github.com/users/farmdawgnation/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2014-06-05T14:43:42Z",
    "updated_at": "2014-06-14T23:40:29Z",
    "closed_at": "2014-06-14T23:40:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "The GitHub status API now supports the concept of optional contexts for commit statuses. It would be useful to be able to add those from the Java API for the benefit of things like the GitHub Pull Request builder.\n\nI'm going to try and find some time in the next week to actually work on this. If someone else starts tackling it before I get around to it, please comment here so we're not duplicating work! :)\n"
  },
  {
    "url": "https://api.github.com/repos/github-api/github-api/issues/95",
    "repository_url": "https://api.github.com/repos/github-api/github-api",
    "labels_url": "https://api.github.com/repos/github-api/github-api/issues/95/labels{/name}",
    "comments_url": "https://api.github.com/repos/github-api/github-api/issues/95/comments",
    "events_url": "https://api.github.com/repos/github-api/github-api/issues/95/events",
    "html_url": "https://github.com/github-api/github-api/pull/95",
    "id": 34998334,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTY3MzEyNzc=",
    "number": 95,
    "title": "Add support for retriving a single ref",
    "user": {
      "login": "suryagaddipati",
      "id": 64078,
      "node_id": "MDQ6VXNlcjY0MDc4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/64078?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/suryagaddipati",
      "html_url": "https://github.com/suryagaddipati",
      "followers_url": "https://api.github.com/users/suryagaddipati/followers",
      "following_url": "https://api.github.com/users/suryagaddipati/following{/other_user}",
      "gists_url": "https://api.github.com/users/suryagaddipati/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/suryagaddipati/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/suryagaddipati/subscriptions",
      "organizations_url": "https://api.github.com/users/suryagaddipati/orgs",
      "repos_url": "https://api.github.com/users/suryagaddipati/repos",
      "events_url": "https://api.github.com/users/suryagaddipati/events{/privacy}",
      "received_events_url": "https://api.github.com/users/suryagaddipati/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-06-04T20:12:42Z",
    "updated_at": "2014-07-01T17:26:03Z",
    "closed_at": "2014-06-05T17:27:42Z",
    "author_association": "COLLABORATOR",
    "pull_request": {
      "url": "https://api.github.com/repos/github-api/github-api/pulls/95",
      "html_url": "https://github.com/github-api/github-api/pull/95",
      "diff_url": "https://github.com/github-api/github-api/pull/95.diff",
      "patch_url": "https://github.com/github-api/github-api/pull/95.patch"
    },
    "body": "Implements the following api method\nhttps://developer.github.com/v3/git/refs/#get-a-reference\n"
  },
  {
    "url": "https://api.github.com/repos/github-api/github-api/issues/94",
    "repository_url": "https://api.github.com/repos/github-api/github-api",
    "labels_url": "https://api.github.com/repos/github-api/github-api/issues/94/labels{/name}",
    "comments_url": "https://api.github.com/repos/github-api/github-api/issues/94/comments",
    "events_url": "https://api.github.com/repos/github-api/github-api/issues/94/events",
    "html_url": "https://github.com/github-api/github-api/pull/94",
    "id": 34901058,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTY2NzU5NzY=",
    "number": 94,
    "title": "Add support for adding deploykeys to repo",
    "user": {
      "login": "suryagaddipati",
      "id": 64078,
      "node_id": "MDQ6VXNlcjY0MDc4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/64078?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/suryagaddipati",
      "html_url": "https://github.com/suryagaddipati",
      "followers_url": "https://api.github.com/users/suryagaddipati/followers",
      "following_url": "https://api.github.com/users/suryagaddipati/following{/other_user}",
      "gists_url": "https://api.github.com/users/suryagaddipati/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/suryagaddipati/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/suryagaddipati/subscriptions",
      "organizations_url": "https://api.github.com/users/suryagaddipati/orgs",
      "repos_url": "https://api.github.com/users/suryagaddipati/repos",
      "events_url": "https://api.github.com/users/suryagaddipati/events{/privacy}",
      "received_events_url": "https://api.github.com/users/suryagaddipati/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-06-03T20:27:52Z",
    "updated_at": "2014-06-19T13:30:25Z",
    "closed_at": "2014-06-05T17:28:19Z",
    "author_association": "COLLABORATOR",
    "pull_request": {
      "url": "https://api.github.com/repos/github-api/github-api/pulls/94",
      "html_url": "https://github.com/github-api/github-api/pull/94",
      "diff_url": "https://github.com/github-api/github-api/pull/94.diff",
      "patch_url": "https://github.com/github-api/github-api/pull/94.patch"
    },
    "body": "Implements https://developer.github.com/v3/repos/keys/\n"
  },
  {
    "url": "https://api.github.com/repos/github-api/github-api/issues/93",
    "repository_url": "https://api.github.com/repos/github-api/github-api",
    "labels_url": "https://api.github.com/repos/github-api/github-api/issues/93/labels{/name}",
    "comments_url": "https://api.github.com/repos/github-api/github-api/issues/93/comments",
    "events_url": "https://api.github.com/repos/github-api/github-api/issues/93/events",
    "html_url": "https://github.com/github-api/github-api/pull/93",
    "id": 34441274,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTY0MTIyMzg=",
    "number": 93,
    "title": "Upgrading to 1.12 version for bridge-method-annotation and bridge-method-injector - fix for #91",
    "user": {
      "login": "vr100",
      "id": 6443683,
      "node_id": "MDQ6VXNlcjY0NDM2ODM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6443683?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vr100",
      "html_url": "https://github.com/vr100",
      "followers_url": "https://api.github.com/users/vr100/followers",
      "following_url": "https://api.github.com/users/vr100/following{/other_user}",
      "gists_url": "https://api.github.com/users/vr100/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vr100/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vr100/subscriptions",
      "organizations_url": "https://api.github.com/users/vr100/orgs",
      "repos_url": "https://api.github.com/users/vr100/repos",
      "events_url": "https://api.github.com/users/vr100/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vr100/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-05-28T07:13:32Z",
    "updated_at": "2014-06-22T05:20:14Z",
    "closed_at": "2014-05-29T03:52:07Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/github-api/github-api/pulls/93",
      "html_url": "https://github.com/github-api/github-api/pull/93",
      "diff_url": "https://github.com/github-api/github-api/pull/93.diff",
      "patch_url": "https://github.com/github-api/github-api/pull/93.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/github-api/github-api/issues/92",
    "repository_url": "https://api.github.com/repos/github-api/github-api",
    "labels_url": "https://api.github.com/repos/github-api/github-api/issues/92/labels{/name}",
    "comments_url": "https://api.github.com/repos/github-api/github-api/issues/92/comments",
    "events_url": "https://api.github.com/repos/github-api/github-api/issues/92/events",
    "html_url": "https://github.com/github-api/github-api/issues/92",
    "id": 34125291,
    "node_id": "MDU6SXNzdWUzNDEyNTI5MQ==",
    "number": 92,
    "title": "getEvents fails periodically with odd exception",
    "user": {
      "login": "mebigfatguy",
      "id": 170161,
      "node_id": "MDQ6VXNlcjE3MDE2MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/170161?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mebigfatguy",
      "html_url": "https://github.com/mebigfatguy",
      "followers_url": "https://api.github.com/users/mebigfatguy/followers",
      "following_url": "https://api.github.com/users/mebigfatguy/following{/other_user}",
      "gists_url": "https://api.github.com/users/mebigfatguy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mebigfatguy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mebigfatguy/subscriptions",
      "organizations_url": "https://api.github.com/users/mebigfatguy/orgs",
      "repos_url": "https://api.github.com/users/mebigfatguy/repos",
      "events_url": "https://api.github.com/users/mebigfatguy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mebigfatguy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-05-22T21:48:49Z",
    "updated_at": "2015-02-16T15:21:23Z",
    "closed_at": "2015-02-16T15:21:23Z",
    "author_association": "NONE",
    "body": "Occasionally a call to getEvents will throw with the following exception. I'm assuming this is just the github rest layer being flaky or somethimg, but just posting it, in case there's something else going on\n\nERROR 21:37:25 Failed fetching events from github\njava.net.UnknownHostException: api.github.com\n    at java.net.InetAddress.getAllByName0(InetAddress.java:1250) ~[na:1.7.0_55]\n    at java.net.InetAddress.getAllByName(InetAddress.java:1162) ~[na:1.7.0_55]\n    at java.net.InetAddress.getAllByName(InetAddress.java:1098) ~[na:1.7.0_55]\n    at com.squareup.okhttp.internal.Dns$1.getAllByName(Dns.java:29) ~[okhttp-1.5.3.jar:na]\n    at com.squareup.okhttp.internal.http.RouteSelector.resetNextInetSocketAddress(RouteSelector.java:232) ~[okhttp-1.5.3.jar:na]\n    at com.squareup.okhttp.internal.http.RouteSelector.next(RouteSelector.java:124) ~[okhttp-1.5.3.jar:na]\n    at com.squareup.okhttp.internal.http.HttpEngine.connect(HttpEngine.java:233) ~[okhttp-1.5.3.jar:na]\n    at com.squareup.okhttp.internal.http.HttpEngine.sendRequest(HttpEngine.java:180) ~[okhttp-1.5.3.jar:na]\n    at com.squareup.okhttp.internal.http.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:366) ~[okhttp-1.5.3.jar:na]\n    at com.squareup.okhttp.internal.http.HttpURLConnectionImpl.getResponse(HttpURLConnectionImpl.java:319) ~[okhttp-1.5.3.jar:na]\n    at com.squareup.okhttp.internal.http.HttpURLConnectionImpl.getInputStream(HttpURLConnectionImpl.java:187) ~[okhttp-1.5.3.jar:na]\n    at com.squareup.okhttp.internal.http.DelegatingHttpsURLConnection.getInputStream(DelegatingHttpsURLConnection.java:210) ~[okhttp-1.5.3.jar:na]\n    at com.squareup.okhttp.internal.http.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:25) ~[okhttp-1.5.3.jar:na]\n    at org.kohsuke.github.Requester.parse(Requester.java:359) ~[github-api-1.53.jar:na]\n    at org.kohsuke.github.Requester._to(Requester.java:180) ~[github-api-1.53.jar:na]\n    at org.kohsuke.github.Requester.to(Requester.java:155) ~[github-api-1.53.jar:na]\n"
  },
  {
    "url": "https://api.github.com/repos/github-api/github-api/issues/91",
    "repository_url": "https://api.github.com/repos/github-api/github-api",
    "labels_url": "https://api.github.com/repos/github-api/github-api/issues/91/labels{/name}",
    "comments_url": "https://api.github.com/repos/github-api/github-api/issues/91/comments",
    "events_url": "https://api.github.com/repos/github-api/github-api/issues/91/events",
    "html_url": "https://github.com/github-api/github-api/issues/91",
    "id": 33315322,
    "node_id": "MDU6SXNzdWUzMzMxNTMyMg==",
    "number": 91,
    "title": "Version 1.8 of bridge-method-annotation not available in maven central",
    "user": {
      "login": "vr100",
      "id": 6443683,
      "node_id": "MDQ6VXNlcjY0NDM2ODM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6443683?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vr100",
      "html_url": "https://github.com/vr100",
      "followers_url": "https://api.github.com/users/vr100/followers",
      "following_url": "https://api.github.com/users/vr100/following{/other_user}",
      "gists_url": "https://api.github.com/users/vr100/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vr100/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vr100/subscriptions",
      "organizations_url": "https://api.github.com/users/vr100/orgs",
      "repos_url": "https://api.github.com/users/vr100/repos",
      "events_url": "https://api.github.com/users/vr100/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vr100/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-05-12T14:59:28Z",
    "updated_at": "2014-05-29T06:00:00Z",
    "closed_at": "2014-05-29T06:00:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "For your reference,\nhttp://search.maven.org/#search|gav|1|g%3A%22com.infradna.tool%22%20AND%20a%3A%22bridge-method-annotation%22\n"
  },
  {
    "url": "https://api.github.com/repos/github-api/github-api/issues/90",
    "repository_url": "https://api.github.com/repos/github-api/github-api",
    "labels_url": "https://api.github.com/repos/github-api/github-api/issues/90/labels{/name}",
    "comments_url": "https://api.github.com/repos/github-api/github-api/issues/90/comments",
    "events_url": "https://api.github.com/repos/github-api/github-api/issues/90/events",
    "html_url": "https://github.com/github-api/github-api/issues/90",
    "id": 33306759,
    "node_id": "MDU6SXNzdWUzMzMwNjc1OQ==",
    "number": 90,
    "title": "Ability to specify both branch and sha parameters at same time in GHCommitQueryBuilder",
    "user": {
      "login": "vr100",
      "id": 6443683,
      "node_id": "MDQ6VXNlcjY0NDM2ODM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6443683?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vr100",
      "html_url": "https://github.com/vr100",
      "followers_url": "https://api.github.com/users/vr100/followers",
      "following_url": "https://api.github.com/users/vr100/following{/other_user}",
      "gists_url": "https://api.github.com/users/vr100/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vr100/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vr100/subscriptions",
      "organizations_url": "https://api.github.com/users/vr100/orgs",
      "repos_url": "https://api.github.com/users/vr100/repos",
      "events_url": "https://api.github.com/users/vr100/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vr100/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-05-12T13:21:13Z",
    "updated_at": "2014-05-28T08:10:38Z",
    "closed_at": "2014-05-28T08:10:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "Github allows you to specify \"sha\" parameter multiple times while querying for commits. For eg., the case where we need commits from branch x from commit sha y, we could specify sha query parameter twice in the github api url. The current code has no way to achieve this scenario.\n\n(This is related to Merge of pull request #86 .  Commit : https://github.com/kohsuke/github-api/commit/a409b4f49c47e5c28c613e8bf9e9dd6831c78494)\n"
  },
  {
    "url": "https://api.github.com/repos/github-api/github-api/issues/89",
    "repository_url": "https://api.github.com/repos/github-api/github-api",
    "labels_url": "https://api.github.com/repos/github-api/github-api/issues/89/labels{/name}",
    "comments_url": "https://api.github.com/repos/github-api/github-api/issues/89/comments",
    "events_url": "https://api.github.com/repos/github-api/github-api/issues/89/events",
    "html_url": "https://github.com/github-api/github-api/pull/89",
    "id": 32707428,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTU0NDAwMTY=",
    "number": 89,
    "title": "add listTeams method on GHOrganization",
    "user": {
      "login": "echav",
      "id": 6654524,
      "node_id": "MDQ6VXNlcjY2NTQ1MjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6654524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/echav",
      "html_url": "https://github.com/echav",
      "followers_url": "https://api.github.com/users/echav/followers",
      "following_url": "https://api.github.com/users/echav/following{/other_user}",
      "gists_url": "https://api.github.com/users/echav/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/echav/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/echav/subscriptions",
      "organizations_url": "https://api.github.com/users/echav/orgs",
      "repos_url": "https://api.github.com/users/echav/repos",
      "events_url": "https://api.github.com/users/echav/events{/privacy}",
      "received_events_url": "https://api.github.com/users/echav/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-05-02T16:57:01Z",
    "updated_at": "2014-06-16T16:43:18Z",
    "closed_at": "2014-05-10T00:56:53Z",
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/github-api/github-api/pulls/89",
      "html_url": "https://github.com/github-api/github-api/pull/89",
      "diff_url": "https://github.com/github-api/github-api/pull/89.diff",
      "patch_url": "https://github.com/github-api/github-api/pull/89.patch"
    },
    "body": "The existing method getTeams does not retrieve all teams due to the paging of the REST API.\n\nSo I added a listTeams method in the GHOrganization API, using the same pattern as the existing listMembers (use of PagedIterable).\n"
  },
  {
    "url": "https://api.github.com/repos/github-api/github-api/issues/88",
    "repository_url": "https://api.github.com/repos/github-api/github-api",
    "labels_url": "https://api.github.com/repos/github-api/github-api/issues/88/labels{/name}",
    "comments_url": "https://api.github.com/repos/github-api/github-api/issues/88/comments",
    "events_url": "https://api.github.com/repos/github-api/github-api/issues/88/events",
    "html_url": "https://github.com/github-api/github-api/issues/88",
    "id": 32290166,
    "node_id": "MDU6SXNzdWUzMjI5MDE2Ng==",
    "number": 88,
    "title": "GHUser.getRepositories() does not pull private repositories",
    "user": {
      "login": "anandcv",
      "id": 6533835,
      "node_id": "MDQ6VXNlcjY1MzM4MzU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6533835?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anandcv",
      "html_url": "https://github.com/anandcv",
      "followers_url": "https://api.github.com/users/anandcv/followers",
      "following_url": "https://api.github.com/users/anandcv/following{/other_user}",
      "gists_url": "https://api.github.com/users/anandcv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anandcv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anandcv/subscriptions",
      "organizations_url": "https://api.github.com/users/anandcv/orgs",
      "repos_url": "https://api.github.com/users/anandcv/repos",
      "events_url": "https://api.github.com/users/anandcv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anandcv/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-04-26T14:28:02Z",
    "updated_at": "2014-05-11T15:33:33Z",
    "closed_at": "2014-05-10T22:17:19Z",
    "author_association": "NONE",
    "body": "When I tries to pull repositories of a user, I get all public repositories.\nBut the list does not show private repository at all.\n\n``` java\ngithub = GitHub.connectUsingOAuth(oAuthToken);\nuser = github.getMyself();\nMap<String,String> repos = new HashMap<String,String>();\nthis.repos = user.getRepositories();\nSystem.out.println(Repos.toString());\n```\n"
  },
  {
    "url": "https://api.github.com/repos/github-api/github-api/issues/87",
    "repository_url": "https://api.github.com/repos/github-api/github-api",
    "labels_url": "https://api.github.com/repos/github-api/github-api/issues/87/labels{/name}",
    "comments_url": "https://api.github.com/repos/github-api/github-api/issues/87/comments",
    "events_url": "https://api.github.com/repos/github-api/github-api/issues/87/events",
    "html_url": "https://github.com/github-api/github-api/pull/87",
    "id": 32280066,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTUxOTg2NjQ=",
    "number": 87,
    "title": "Fix bug in GHMyself.getEmails due to API change",
    "user": {
      "login": "kellycampbell",
      "id": 625998,
      "node_id": "MDQ6VXNlcjYyNTk5OA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/625998?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kellycampbell",
      "html_url": "https://github.com/kellycampbell",
      "followers_url": "https://api.github.com/users/kellycampbell/followers",
      "following_url": "https://api.github.com/users/kellycampbell/following{/other_user}",
      "gists_url": "https://api.github.com/users/kellycampbell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kellycampbell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kellycampbell/subscriptions",
      "organizations_url": "https://api.github.com/users/kellycampbell/orgs",
      "repos_url": "https://api.github.com/users/kellycampbell/repos",
      "events_url": "https://api.github.com/users/kellycampbell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kellycampbell/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-04-26T02:57:55Z",
    "updated_at": "2014-07-01T17:26:05Z",
    "closed_at": "2014-05-10T00:59:54Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/github-api/github-api/pulls/87",
      "html_url": "https://github.com/github-api/github-api/pull/87",
      "diff_url": "https://github.com/github-api/github-api/pull/87.diff",
      "patch_url": "https://github.com/github-api/github-api/pull/87.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/github-api/github-api/issues/86",
    "repository_url": "https://api.github.com/repos/github-api/github-api",
    "labels_url": "https://api.github.com/repos/github-api/github-api/issues/86/labels{/name}",
    "comments_url": "https://api.github.com/repos/github-api/github-api/issues/86/comments",
    "events_url": "https://api.github.com/repos/github-api/github-api/issues/86/events",
    "html_url": "https://github.com/github-api/github-api/pull/86",
    "id": 32031706,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTUwNDg1MDM=",
    "number": 86,
    "title": "Using builder pattern to list commits in a repo by author, branch, etc",
    "user": {
      "login": "vr100",
      "id": 6443683,
      "node_id": "MDQ6VXNlcjY0NDM2ODM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6443683?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vr100",
      "html_url": "https://github.com/vr100",
      "followers_url": "https://api.github.com/users/vr100/followers",
      "following_url": "https://api.github.com/users/vr100/following{/other_user}",
      "gists_url": "https://api.github.com/users/vr100/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vr100/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vr100/subscriptions",
      "organizations_url": "https://api.github.com/users/vr100/orgs",
      "repos_url": "https://api.github.com/users/vr100/repos",
      "events_url": "https://api.github.com/users/vr100/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vr100/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-04-23T04:16:51Z",
    "updated_at": "2014-07-01T17:26:05Z",
    "closed_at": "2014-05-10T01:31:27Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/github-api/github-api/pulls/86",
      "html_url": "https://github.com/github-api/github-api/pull/86",
      "diff_url": "https://github.com/github-api/github-api/pull/86.diff",
      "patch_url": "https://github.com/github-api/github-api/pull/86.patch"
    },
    "body": "Reworked on my earlier request #77 \n"
  },
  {
    "url": "https://api.github.com/repos/github-api/github-api/issues/85",
    "repository_url": "https://api.github.com/repos/github-api/github-api",
    "labels_url": "https://api.github.com/repos/github-api/github-api/issues/85/labels{/name}",
    "comments_url": "https://api.github.com/repos/github-api/github-api/issues/85/comments",
    "events_url": "https://api.github.com/repos/github-api/github-api/issues/85/events",
    "html_url": "https://github.com/github-api/github-api/issues/85",
    "id": 32020194,
    "node_id": "MDU6SXNzdWUzMjAyMDE5NA==",
    "number": 85,
    "title": "File size limited to 1MB",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-04-22T23:29:23Z",
    "updated_at": "2014-04-23T17:19:15Z",
    "closed_at": "2014-04-23T17:19:15Z",
    "author_association": "NONE",
    "body": "I tried to delete a file with 3MB from my repository. But to do that I need to call `GHRepository.getFileContent` first and that leads to the following error:\n\n```\nException: {\"message\":\"This API returns blobs up to 1 MB in size. The requested blob is too large to fetch via the API, but you can use the Git Data API to request blobs up to 100 MB in size.\",\"documentation_url\":\"https://developer.github.com/v3/repos/contents/#get-contents\",\"errors\":[{\"resource\":\"Blob\",\"field\":\"data\",\"code\":\"too_large\"}]}\n```\n\nThe same happens with `GHRepository.createContent`. \n\nIs there a way to use the git blobs api: https://developer.github.com/v3/git/blobs/?\n"
  },
  {
    "url": "https://api.github.com/repos/github-api/github-api/issues/84",
    "repository_url": "https://api.github.com/repos/github-api/github-api",
    "labels_url": "https://api.github.com/repos/github-api/github-api/issues/84/labels{/name}",
    "comments_url": "https://api.github.com/repos/github-api/github-api/issues/84/comments",
    "events_url": "https://api.github.com/repos/github-api/github-api/issues/84/events",
    "html_url": "https://github.com/github-api/github-api/pull/84",
    "id": 31886962,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTQ5NjIwMzM=",
    "number": 84,
    "title": "create a Release & Branch",
    "user": {
      "login": "fanfansama",
      "id": 5654868,
      "node_id": "MDQ6VXNlcjU2NTQ4Njg=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5654868?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanfansama",
      "html_url": "https://github.com/fanfansama",
      "followers_url": "https://api.github.com/users/fanfansama/followers",
      "following_url": "https://api.github.com/users/fanfansama/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanfansama/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanfansama/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanfansama/subscriptions",
      "organizations_url": "https://api.github.com/users/fanfansama/orgs",
      "repos_url": "https://api.github.com/users/fanfansama/repos",
      "events_url": "https://api.github.com/users/fanfansama/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanfansama/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-04-21T08:54:07Z",
    "updated_at": "2014-07-01T17:26:05Z",
    "closed_at": "2014-05-10T19:50:49Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/github-api/github-api/pulls/84",
      "html_url": "https://github.com/github-api/github-api/pull/84",
      "diff_url": "https://github.com/github-api/github-api/pull/84.diff",
      "patch_url": "https://github.com/github-api/github-api/pull/84.patch"
    },
    "body": "bonjour,\nJ'ai utilisé ta librairie pour automatiser la creation de release et de branche.\nJ'ai du adapter ton code en ajoutant quelques lignes.\n\nDu coup, je te pull mes ajouts.\n\nCoté Test Unitaires, je n'ai pas pris trop de temps pour comprendre pourquoi il ne passe pas tous.\nj'ai ajouté : testCreateRelease mais tu devras le retoucher.\n\nMerci pour ta librairie\n\nFrançois\n"
  },
  {
    "url": "https://api.github.com/repos/github-api/github-api/issues/83",
    "repository_url": "https://api.github.com/repos/github-api/github-api",
    "labels_url": "https://api.github.com/repos/github-api/github-api/issues/83/labels{/name}",
    "comments_url": "https://api.github.com/repos/github-api/github-api/issues/83/comments",
    "events_url": "https://api.github.com/repos/github-api/github-api/issues/83/events",
    "html_url": "https://github.com/github-api/github-api/pull/83",
    "id": 31801640,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTQ5MjAyMDg=",
    "number": 83,
    "title": "add tarball_url and zipball_url to GHRelease",
    "user": {
      "login": "antonkrasov",
      "id": 3696113,
      "node_id": "MDQ6VXNlcjM2OTYxMTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3696113?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/antonkrasov",
      "html_url": "https://github.com/antonkrasov",
      "followers_url": "https://api.github.com/users/antonkrasov/followers",
      "following_url": "https://api.github.com/users/antonkrasov/following{/other_user}",
      "gists_url": "https://api.github.com/users/antonkrasov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/antonkrasov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/antonkrasov/subscriptions",
      "organizations_url": "https://api.github.com/users/antonkrasov/orgs",
      "repos_url": "https://api.github.com/users/antonkrasov/repos",
      "events_url": "https://api.github.com/users/antonkrasov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/antonkrasov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-04-18T14:29:51Z",
    "updated_at": "2014-07-01T17:26:06Z",
    "closed_at": "2014-04-19T18:50:39Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/github-api/github-api/pulls/83",
      "html_url": "https://github.com/github-api/github-api/pull/83",
      "diff_url": "https://github.com/github-api/github-api/pull/83.diff",
      "patch_url": "https://github.com/github-api/github-api/pull/83.patch"
    },
    "body": "tarball_url and zipball_url were misses in GHRelease\n"
  }
]