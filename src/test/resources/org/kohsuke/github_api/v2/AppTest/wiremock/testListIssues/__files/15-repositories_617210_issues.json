[
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/281",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/281/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/281/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/281/events",
    "html_url": "https://github.com/hub4j/github-api/pull/281",
    "id": 154852610,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NzAwOTE1MDg=",
    "number": 281,
    "title": "Add Slug to GHTeam per v3 API: https://developer.github.com/v3/orgs/tâ€¦",
    "user": {
      "login": "apemberton",
      "id": 86439,
      "node_id": "MDQ6VXNlcjg2NDM5",
      "avatar_url": "https://avatars1.githubusercontent.com/u/86439?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apemberton",
      "html_url": "https://github.com/apemberton",
      "followers_url": "https://api.github.com/users/apemberton/followers",
      "following_url": "https://api.github.com/users/apemberton/following{/other_user}",
      "gists_url": "https://api.github.com/users/apemberton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apemberton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apemberton/subscriptions",
      "organizations_url": "https://api.github.com/users/apemberton/orgs",
      "repos_url": "https://api.github.com/users/apemberton/repos",
      "events_url": "https://api.github.com/users/apemberton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apemberton/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2016-05-14T13:00:55Z",
    "updated_at": "2016-06-15T14:35:12Z",
    "closed_at": "2016-06-03T04:51:47Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/hub4j/github-api/pulls/281",
      "html_url": "https://github.com/hub4j/github-api/pull/281",
      "diff_url": "https://github.com/hub4j/github-api/pull/281.diff",
      "patch_url": "https://github.com/hub4j/github-api/pull/281.patch"
    },
    "body": "https://developer.github.com/v3/orgs/teams/ has a slug property for teams. This property is similar to the login property for users and organizations - a URL path friendly tokenized string (as opposed to free text in the name field). \n\nSlug is better suited for use in automated / scripting cases when dealing with the Team API.\n\nAdmittedly, I wrote a test but could not test as the project's test harness requires super powers which I do not possess.\n\n@reviewbybees\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/279",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/279/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/279/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/279/events",
    "html_url": "https://github.com/hub4j/github-api/issues/279",
    "id": 153510442,
    "node_id": "MDU6SXNzdWUxNTM1MTA0NDI=",
    "number": 279,
    "title": "team.add(repo) should accept permission flag",
    "user": {
      "login": "tomerd",
      "id": 147247,
      "node_id": "MDQ6VXNlcjE0NzI0Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/147247?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tomerd",
      "html_url": "https://github.com/tomerd",
      "followers_url": "https://api.github.com/users/tomerd/followers",
      "following_url": "https://api.github.com/users/tomerd/following{/other_user}",
      "gists_url": "https://api.github.com/users/tomerd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tomerd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tomerd/subscriptions",
      "organizations_url": "https://api.github.com/users/tomerd/orgs",
      "repos_url": "https://api.github.com/users/tomerd/repos",
      "events_url": "https://api.github.com/users/tomerd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tomerd/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2016-05-06T18:26:15Z",
    "updated_at": "2016-06-04T03:56:12Z",
    "closed_at": "2016-06-04T03:56:12Z",
    "author_association": "NONE",
    "body": "https://developer.github.com/v3/orgs/teams/#add-or-update-team-repository\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/278",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/278/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/278/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/278/events",
    "html_url": "https://github.com/hub4j/github-api/pull/278",
    "id": 152887705,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Njg3ODQ3ODc=",
    "number": 278,
    "title": "Fixed broken link",
    "user": {
      "login": "jglick",
      "id": 154109,
      "node_id": "MDQ6VXNlcjE1NDEwOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/154109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jglick",
      "html_url": "https://github.com/jglick",
      "followers_url": "https://api.github.com/users/jglick/followers",
      "following_url": "https://api.github.com/users/jglick/following{/other_user}",
      "gists_url": "https://api.github.com/users/jglick/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jglick/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jglick/subscriptions",
      "organizations_url": "https://api.github.com/users/jglick/orgs",
      "repos_url": "https://api.github.com/users/jglick/repos",
      "events_url": "https://api.github.com/users/jglick/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jglick/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-05-03T22:20:31Z",
    "updated_at": "2016-06-03T04:50:38Z",
    "closed_at": "2016-06-03T04:50:37Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/hub4j/github-api/pulls/278",
      "html_url": "https://github.com/hub4j/github-api/pull/278",
      "diff_url": "https://github.com/hub4j/github-api/pull/278.diff",
      "patch_url": "https://github.com/hub4j/github-api/pull/278.patch"
    },
    "body": "@reviewbybees\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/277",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/277/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/277/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/277/events",
    "html_url": "https://github.com/hub4j/github-api/pull/277",
    "id": 152044790,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Njg0NzUwMDM=",
    "number": 277,
    "title": "Updated Date was wrong",
    "user": {
      "login": "KondaReddyR",
      "id": 841750,
      "node_id": "MDQ6VXNlcjg0MTc1MA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/841750?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KondaReddyR",
      "html_url": "https://github.com/KondaReddyR",
      "followers_url": "https://api.github.com/users/KondaReddyR/followers",
      "following_url": "https://api.github.com/users/KondaReddyR/following{/other_user}",
      "gists_url": "https://api.github.com/users/KondaReddyR/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KondaReddyR/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KondaReddyR/subscriptions",
      "organizations_url": "https://api.github.com/users/KondaReddyR/orgs",
      "repos_url": "https://api.github.com/users/KondaReddyR/repos",
      "events_url": "https://api.github.com/users/KondaReddyR/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KondaReddyR/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2016-04-30T18:20:58Z",
    "updated_at": "2016-06-03T04:50:22Z",
    "closed_at": "2016-06-03T04:50:22Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/hub4j/github-api/pulls/277",
      "html_url": "https://github.com/hub4j/github-api/pull/277",
      "diff_url": "https://github.com/hub4j/github-api/pull/277.diff",
      "patch_url": "https://github.com/hub4j/github-api/pull/277.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/276",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/276/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/276/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/276/events",
    "html_url": "https://github.com/hub4j/github-api/pull/276",
    "id": 151828897,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjgzNDY2MTQ=",
    "number": 276,
    "title": "Add support to delete a team",
    "user": {
      "login": "thug-gamer",
      "id": 15268260,
      "node_id": "MDQ6VXNlcjE1MjY4MjYw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/15268260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thug-gamer",
      "html_url": "https://github.com/thug-gamer",
      "followers_url": "https://api.github.com/users/thug-gamer/followers",
      "following_url": "https://api.github.com/users/thug-gamer/following{/other_user}",
      "gists_url": "https://api.github.com/users/thug-gamer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thug-gamer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thug-gamer/subscriptions",
      "organizations_url": "https://api.github.com/users/thug-gamer/orgs",
      "repos_url": "https://api.github.com/users/thug-gamer/repos",
      "events_url": "https://api.github.com/users/thug-gamer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thug-gamer/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2016-04-29T09:42:45Z",
    "updated_at": "2016-06-03T04:50:11Z",
    "closed_at": "2016-06-03T04:50:11Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/hub4j/github-api/pulls/276",
      "html_url": "https://github.com/hub4j/github-api/pull/276",
      "diff_url": "https://github.com/hub4j/github-api/pull/276.diff",
      "patch_url": "https://github.com/hub4j/github-api/pull/276.patch"
    },
    "body": "Add a method to delete a team.\n\n@kohsuke @oleg-nenashev Could you please review this pull request?\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/275",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/275/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/275/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/275/events",
    "html_url": "https://github.com/hub4j/github-api/issues/275",
    "id": 151167688,
    "node_id": "MDU6SXNzdWUxNTExNjc2ODg=",
    "number": 275,
    "title": "Pull request mergeability is boolean but should be trinary",
    "user": {
      "login": "PerilousApricot",
      "id": 93354,
      "node_id": "MDQ6VXNlcjkzMzU0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/93354?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PerilousApricot",
      "html_url": "https://github.com/PerilousApricot",
      "followers_url": "https://api.github.com/users/PerilousApricot/followers",
      "following_url": "https://api.github.com/users/PerilousApricot/following{/other_user}",
      "gists_url": "https://api.github.com/users/PerilousApricot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PerilousApricot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PerilousApricot/subscriptions",
      "organizations_url": "https://api.github.com/users/PerilousApricot/orgs",
      "repos_url": "https://api.github.com/users/PerilousApricot/repos",
      "events_url": "https://api.github.com/users/PerilousApricot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PerilousApricot/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2016-04-26T15:36:39Z",
    "updated_at": "2016-06-04T04:48:43Z",
    "closed_at": "2016-06-04T03:52:27Z",
    "author_association": "NONE",
    "body": "According to the API docs: \n\n\"The value of the mergeable attribute can be true, false, or null. If the value is null, this means that the mergeability hasn't been computed yet, and a background job was started to compute it. Give the job a few moments to complete, and then submit the request again. When the job is complete, the response will include a non-null value for the mergeable attribute.\"\n\nThis casting currently treats \"null\" as \"can not merge\", which cascades down to other plugins. Should the returned type be expanded?\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/274",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/274/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/274/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/274/events",
    "html_url": "https://github.com/hub4j/github-api/issues/274",
    "id": 150572526,
    "node_id": "MDU6SXNzdWUxNTA1NzI1MjY=",
    "number": 274,
    "title": "Webhook with content type \"application/json\"",
    "user": {
      "login": "mlabouardy",
      "id": 10320205,
      "node_id": "MDQ6VXNlcjEwMzIwMjA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10320205?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mlabouardy",
      "html_url": "https://github.com/mlabouardy",
      "followers_url": "https://api.github.com/users/mlabouardy/followers",
      "following_url": "https://api.github.com/users/mlabouardy/following{/other_user}",
      "gists_url": "https://api.github.com/users/mlabouardy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mlabouardy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mlabouardy/subscriptions",
      "organizations_url": "https://api.github.com/users/mlabouardy/orgs",
      "repos_url": "https://api.github.com/users/mlabouardy/repos",
      "events_url": "https://api.github.com/users/mlabouardy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mlabouardy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-04-23T16:36:02Z",
    "updated_at": "2016-06-04T03:34:32Z",
    "closed_at": "2016-06-04T03:34:32Z",
    "author_association": "NONE",
    "body": "How can I create a webhook with content type \"application/json\" ?\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/273",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/273/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/273/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/273/events",
    "html_url": "https://github.com/hub4j/github-api/issues/273",
    "id": 149306560,
    "node_id": "MDU6SXNzdWUxNDkzMDY1NjA=",
    "number": 273,
    "title": "Disable rate_limit check on GitHub Enterprise completely",
    "user": {
      "login": "djdefi",
      "id": 3662109,
      "node_id": "MDQ6VXNlcjM2NjIxMDk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3662109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djdefi",
      "html_url": "https://github.com/djdefi",
      "followers_url": "https://api.github.com/users/djdefi/followers",
      "following_url": "https://api.github.com/users/djdefi/following{/other_user}",
      "gists_url": "https://api.github.com/users/djdefi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djdefi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djdefi/subscriptions",
      "organizations_url": "https://api.github.com/users/djdefi/orgs",
      "repos_url": "https://api.github.com/users/djdefi/repos",
      "events_url": "https://api.github.com/users/djdefi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djdefi/received_events",
      "type": "User",
      "site_admin": true
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2016-04-19T00:06:06Z",
    "updated_at": "2017-07-18T19:35:31Z",
    "closed_at": "2016-08-06T04:12:56Z",
    "author_association": "NONE",
    "body": " GitHub Enterprise prior to 2.10 does not have rate limiting, requests to `https://hostname/api/v3/rate_limit` will return a 404 Not Found status code. in 2.10+ rate limiting can be enabled, but is disabled by default.\r\n\r\n~~Based on the change in #78 there is a check for `rate_limit`, and then the rate limit is set to an arbitrary high number. On very busy systems this results in tens of thousands of requests per hour to the GitHub Enterprise appliance. Although returning a 404 is a relatively simple operation, there are other things such as logging that are impacted by the volume of requests.~~\r\n\r\n~~A better method would be to look for **/api/v3/** within the configured API URL, and then simply skip the rate limit check altogether. **/api/v3/** is unique to GitHub Enterprise, so this will not have any impact on the GitHub.com rate_limit endpoint of https://api.github.com/rate_limit~~\r\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/272",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/272/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/272/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/272/events",
    "html_url": "https://github.com/hub4j/github-api/pull/272",
    "id": 148253949,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjY0Mjk4Mjg=",
    "number": 272,
    "title": "Added support for the extended stargazers API in Github V3 API",
    "user": {
      "login": "noctarius",
      "id": 1142801,
      "node_id": "MDQ6VXNlcjExNDI4MDE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1142801?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/noctarius",
      "html_url": "https://github.com/noctarius",
      "followers_url": "https://api.github.com/users/noctarius/followers",
      "following_url": "https://api.github.com/users/noctarius/following{/other_user}",
      "gists_url": "https://api.github.com/users/noctarius/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/noctarius/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/noctarius/subscriptions",
      "organizations_url": "https://api.github.com/users/noctarius/orgs",
      "repos_url": "https://api.github.com/users/noctarius/repos",
      "events_url": "https://api.github.com/users/noctarius/events{/privacy}",
      "received_events_url": "https://api.github.com/users/noctarius/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2016-04-14T05:10:20Z",
    "updated_at": "2016-06-03T05:04:24Z",
    "closed_at": "2016-06-03T05:04:24Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/hub4j/github-api/pulls/272",
      "html_url": "https://github.com/hub4j/github-api/pull/272",
      "diff_url": "https://github.com/hub4j/github-api/pull/272.diff",
      "patch_url": "https://github.com/hub4j/github-api/pull/272.patch"
    },
    "body": "Github has added starred_at date to stargazers when stargazers are requested with a special (new) version on the REST API. Added support for the version and a type representing the additional information.\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/271",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/271/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/271/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/271/events",
    "html_url": "https://github.com/hub4j/github-api/issues/271",
    "id": 147374094,
    "node_id": "MDU6SXNzdWUxNDczNzQwOTQ=",
    "number": 271,
    "title": "GitHub.getRateLimit hangs inside SocketInputStream.socketRead0",
    "user": {
      "login": "kiselev-dv",
      "id": 674665,
      "node_id": "MDQ6VXNlcjY3NDY2NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/674665?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kiselev-dv",
      "html_url": "https://github.com/kiselev-dv",
      "followers_url": "https://api.github.com/users/kiselev-dv/followers",
      "following_url": "https://api.github.com/users/kiselev-dv/following{/other_user}",
      "gists_url": "https://api.github.com/users/kiselev-dv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kiselev-dv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kiselev-dv/subscriptions",
      "organizations_url": "https://api.github.com/users/kiselev-dv/orgs",
      "repos_url": "https://api.github.com/users/kiselev-dv/repos",
      "events_url": "https://api.github.com/users/kiselev-dv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kiselev-dv/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-04-11T09:50:02Z",
    "updated_at": "2016-06-03T05:08:19Z",
    "closed_at": "2016-06-03T05:08:19Z",
    "author_association": "NONE",
    "body": "We've run into an issue when GitHub.getRateLimit hangs the thread.\nHere is the thread stack trace:\n\n```\n\"jenkins.util.Timer [#4]\" Id=48 Group=main RUNNABLE (in native)\n    at java.net.SocketInputStream.socketRead0(Native Method)\n    at java.net.SocketInputStream.read(SocketInputStream.java:152)\n    at java.net.SocketInputStream.read(SocketInputStream.java:122)\n    at sun.security.ssl.InputRecord.readFully(InputRecord.java:442)\n    at sun.security.ssl.InputRecord.read(InputRecord.java:480)\n    at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:946)\n    -  locked java.lang.Object@4be77f76\n    at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:903)\n    at sun.security.ssl.AppInputStream.read(AppInputStream.java:102)\n    -  locked sun.security.ssl.AppInputStream@5e6fb401\n    at java.io.BufferedInputStream.fill(BufferedInputStream.java:235)\n    at java.io.BufferedInputStream.read1(BufferedInputStream.java:275)\n    at java.io.BufferedInputStream.read(BufferedInputStream.java:334)\n    -  locked java.io.BufferedInputStream@7792de16\n    at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:690)\n    at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:633)\n    at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1325)\n    -  locked sun.net.www.protocol.https.DelegateHttpsURLConnection@6db28b13\n    at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:468)\n    at sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:338)\n    at org.kohsuke.github.Requester.parse(Requester.java:454)\n    at org.kohsuke.github.Requester._to(Requester.java:227)\n    at org.kohsuke.github.Requester.to(Requester.java:194)\n    at org.kohsuke.github.GitHub.getRateLimit(GitHub.java:245)\n    at org.jenkinsci.plugins.ghprb.GhprbRepository.initGhRepository(GhprbRepository.java:66)\n    at org.jenkinsci.plugins.ghprb.GhprbRepository.check(GhprbRepository.java:88)\n    at org.jenkinsci.plugins.ghprb.Ghprb.run(Ghprb.java:119)\n    at org.jenkinsci.plugins.ghprb.GhprbTrigger.run(GhprbTrigger.java:219)\n    at hudson.triggers.Trigger.checkTriggers(Trigger.java:272)\n    at hudson.triggers.Trigger$Cron.doRun(Trigger.java:221)\n    at hudson.triggers.SafeTimerTask.run(SafeTimerTask.java:50)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)\n    at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:304)\n    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:178)\n    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n    at java.lang.Thread.run(Thread.java:745)\n\n    Number of locked synchronizers = 1\n    - java.util.concurrent.ThreadPoolExecutor$Worker@6b1824c6\n```\n\nThere is a possibility that https://github.com/kohsuke/github-api/blob/main/src/main/java/org/kohsuke/github/Requester.java#L486 will never return an aswer.\n\nI think, `uc.setTimeout(60 * 1000);` here https://github.com/kohsuke/github-api/blob/main/src/main/java/org/kohsuke/github/Requester.java#L453 should fix the problem.\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/270",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/270/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/270/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/270/events",
    "html_url": "https://github.com/hub4j/github-api/pull/270",
    "id": 145719545,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjUxNjQ4ODY=",
    "number": 270,
    "title": "[#269] Add reopen method on GHMilestone",
    "user": {
      "login": "szpak",
      "id": 148013,
      "node_id": "MDQ6VXNlcjE0ODAxMw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/148013?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/szpak",
      "html_url": "https://github.com/szpak",
      "followers_url": "https://api.github.com/users/szpak/followers",
      "following_url": "https://api.github.com/users/szpak/following{/other_user}",
      "gists_url": "https://api.github.com/users/szpak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/szpak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/szpak/subscriptions",
      "organizations_url": "https://api.github.com/users/szpak/orgs",
      "repos_url": "https://api.github.com/users/szpak/repos",
      "events_url": "https://api.github.com/users/szpak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/szpak/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-04-04T15:31:55Z",
    "updated_at": "2016-04-13T23:15:39Z",
    "closed_at": "2016-04-13T23:15:39Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/hub4j/github-api/pulls/270",
      "html_url": "https://github.com/hub4j/github-api/pull/270",
      "diff_url": "https://github.com/hub4j/github-api/pull/270.diff",
      "patch_url": "https://github.com/hub4j/github-api/pull/270.patch"
    },
    "body": "Fixes #269.\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/269",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/269/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/269/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/269/events",
    "html_url": "https://github.com/hub4j/github-api/issues/269",
    "id": 145718053,
    "node_id": "MDU6SXNzdWUxNDU3MTgwNTM=",
    "number": 269,
    "title": "(re)open method on GHMilestone",
    "user": {
      "login": "szpak",
      "id": 148013,
      "node_id": "MDQ6VXNlcjE0ODAxMw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/148013?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/szpak",
      "html_url": "https://github.com/szpak",
      "followers_url": "https://api.github.com/users/szpak/followers",
      "following_url": "https://api.github.com/users/szpak/following{/other_user}",
      "gists_url": "https://api.github.com/users/szpak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/szpak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/szpak/subscriptions",
      "organizations_url": "https://api.github.com/users/szpak/orgs",
      "repos_url": "https://api.github.com/users/szpak/repos",
      "events_url": "https://api.github.com/users/szpak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/szpak/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2016-04-04T15:27:13Z",
    "updated_at": "2016-04-13T23:15:39Z",
    "closed_at": "2016-04-13T23:15:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "In some cases (e.g. restoring state for functional tests with sanboxed GitHub project) it could be needed to reopen already closed milestone. Unfortunately currently there is only a `close()` method on `GHMilestone` and as a workaround a private method `edit()` has to be used.\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/268",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/268/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/268/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/268/events",
    "html_url": "https://github.com/hub4j/github-api/issues/268",
    "id": 145666091,
    "node_id": "MDU6SXNzdWUxNDU2NjYwOTE=",
    "number": 268,
    "title": "More meaning toString implementations",
    "user": {
      "login": "szpak",
      "id": 148013,
      "node_id": "MDQ6VXNlcjE0ODAxMw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/148013?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/szpak",
      "html_url": "https://github.com/szpak",
      "followers_url": "https://api.github.com/users/szpak/followers",
      "following_url": "https://api.github.com/users/szpak/following{/other_user}",
      "gists_url": "https://api.github.com/users/szpak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/szpak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/szpak/subscriptions",
      "organizations_url": "https://api.github.com/users/szpak/orgs",
      "repos_url": "https://api.github.com/users/szpak/repos",
      "events_url": "https://api.github.com/users/szpak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/szpak/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-04-04T12:11:11Z",
    "updated_at": "2016-06-03T05:38:32Z",
    "closed_at": "2016-06-03T05:38:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "Currently many of the GH\\* objects don't have meaninful `toString()` implementation. As details seem to be already initialized in most cases it would be useful to see something like:\n\n```\nGHMIlestone: title=0.1.3, state=CLOSED, number=34\n```\n\ninstead of\n\n```\norg.kohsuke.github.GHMilestone@72d6b3ba\n```\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/267",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/267/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/267/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/267/events",
    "html_url": "https://github.com/hub4j/github-api/pull/267",
    "id": 145607499,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjUxMDUwNTc=",
    "number": 267,
    "title": "'uploadAsset()' method call for Github Enterprise",
    "user": {
      "login": "lwiechec",
      "id": 376537,
      "node_id": "MDQ6VXNlcjM3NjUzNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/376537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lwiechec",
      "html_url": "https://github.com/lwiechec",
      "followers_url": "https://api.github.com/users/lwiechec/followers",
      "following_url": "https://api.github.com/users/lwiechec/following{/other_user}",
      "gists_url": "https://api.github.com/users/lwiechec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lwiechec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lwiechec/subscriptions",
      "organizations_url": "https://api.github.com/users/lwiechec/orgs",
      "repos_url": "https://api.github.com/users/lwiechec/repos",
      "events_url": "https://api.github.com/users/lwiechec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lwiechec/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 11,
    "created_at": "2016-04-04T07:30:21Z",
    "updated_at": "2019-01-11T03:03:38Z",
    "closed_at": "2017-09-09T19:33:01Z",
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/hub4j/github-api/pulls/267",
      "html_url": "https://github.com/hub4j/github-api/pull/267",
      "diff_url": "https://github.com/hub4j/github-api/pull/267.diff",
      "patch_url": "https://github.com/hub4j/github-api/pull/267.patch"
    },
    "body": "I am not sure if it is possible to 'ask' the GitHub API for the default\nupload URL; that would be great but if not, we need to pass it somehow.\n\nrefs #266\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/265",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/265/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/265/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/265/events",
    "html_url": "https://github.com/hub4j/github-api/issues/265",
    "id": 144923178,
    "node_id": "MDU6SXNzdWUxNDQ5MjMxNzg=",
    "number": 265,
    "title": "java.lang.IllegalArgumentException: byteString == null",
    "user": {
      "login": "ligi",
      "id": 111600,
      "node_id": "MDQ6VXNlcjExMTYwMA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/111600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ligi",
      "html_url": "https://github.com/ligi",
      "followers_url": "https://api.github.com/users/ligi/followers",
      "following_url": "https://api.github.com/users/ligi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ligi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ligi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ligi/subscriptions",
      "organizations_url": "https://api.github.com/users/ligi/orgs",
      "repos_url": "https://api.github.com/users/ligi/repos",
      "events_url": "https://api.github.com/users/ligi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ligi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 15,
    "created_at": "2016-03-31T14:47:24Z",
    "updated_at": "2017-03-22T20:18:21Z",
    "closed_at": "2016-06-04T03:43:53Z",
    "author_association": "NONE",
    "body": "I hope this is the right repo for this bug:\n\n```\nï¿¼Branch Indexing Log\n\nStarted by timer\nFATAL: Failed to recompute children of PassAndroid\njava.lang.IllegalArgumentException: byteString == null\n    at okio.Buffer.write(Buffer.java:787)\n    at com.squareup.okhttp.Cache$Entry.readCertificateList(Cache.java:628)\n    at com.squareup.okhttp.Cache$Entry.<init>(Cache.java:555)\n    at com.squareup.okhttp.Cache.get(Cache.java:194)\n    at com.squareup.okhttp.Cache$1.get(Cache.java:139)\n    at com.squareup.okhttp.internal.http.HttpEngine.sendRequest(HttpEngine.java:226)\n    at com.squareup.okhttp.internal.huc.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:438)\n    at com.squareup.okhttp.internal.huc.HttpURLConnectionImpl.getResponse(HttpURLConnectionImpl.java:389)\n    at com.squareup.okhttp.internal.huc.HttpURLConnectionImpl.getResponseCode(HttpURLConnectionImpl.java:502)\n    at com.squareup.okhttp.internal.huc.DelegatingHttpsURLConnection.getResponseCode(DelegatingHttpsURLConnection.java:105)\n    at com.squareup.okhttp.internal.huc.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:25)\n    at org.kohsuke.github.Requester.parse(Requester.java:479)\n    at org.kohsuke.github.Requester._to(Requester.java:236)\n    at org.kohsuke.github.Requester.to(Requester.java:203)\n    at org.kohsuke.github.GitHub.isCredentialValid(GitHub.java:447)\n    at org.jenkinsci.plugins.github_branch_source.GitHubSCMSource.retrieve(GitHubSCMSource.java:224)\n    at jenkins.scm.api.SCMSource.fetch(SCMSource.java:146)\n    at jenkins.branch.MultiBranchProject.computeChildren(MultiBranchProject.java:296)\n    at com.cloudbees.hudson.plugins.folder.computed.ComputedFolder.updateChildren(ComputedFolder.java:151)\n    at com.cloudbees.hudson.plugins.folder.computed.FolderComputation.run(FolderComputation.java:122)\n    at hudson.model.ResourceController.execute(ResourceController.java:98)\n    at hudson.model.Executor.run(Executor.java:410)\nFinished: FAILURE\n```\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/264",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/264/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/264/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/264/events",
    "html_url": "https://github.com/hub4j/github-api/issues/264",
    "id": 144798110,
    "node_id": "MDU6SXNzdWUxNDQ3OTgxMTA=",
    "number": 264,
    "title": "GHRepository.fork() does not block on the async operation until it's complete",
    "user": {
      "login": "ALRubinger",
      "id": 199891,
      "node_id": "MDQ6VXNlcjE5OTg5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/199891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ALRubinger",
      "html_url": "https://github.com/ALRubinger",
      "followers_url": "https://api.github.com/users/ALRubinger/followers",
      "following_url": "https://api.github.com/users/ALRubinger/following{/other_user}",
      "gists_url": "https://api.github.com/users/ALRubinger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ALRubinger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ALRubinger/subscriptions",
      "organizations_url": "https://api.github.com/users/ALRubinger/orgs",
      "repos_url": "https://api.github.com/users/ALRubinger/repos",
      "events_url": "https://api.github.com/users/ALRubinger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ALRubinger/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2016-03-31T05:59:15Z",
    "updated_at": "2016-06-03T06:50:17Z",
    "closed_at": "2016-06-03T06:50:17Z",
    "author_association": "NONE",
    "body": "https://github.com/kohsuke/github-api/blob/main/src/main/java/org/kohsuke/github/GHRepository.java#L589\n\nThe \"forkTo\" method, however, does have some nice blocking in place.\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/263",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/263/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/263/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/263/events",
    "html_url": "https://github.com/hub4j/github-api/issues/263",
    "id": 144734475,
    "node_id": "MDU6SXNzdWUxNDQ3MzQ0NzU=",
    "number": 263,
    "title": "github.getRepository does not work for Enterprise github instance",
    "user": {
      "login": "ram-bakthavachalam",
      "id": 7400573,
      "node_id": "MDQ6VXNlcjc0MDA1NzM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7400573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ram-bakthavachalam",
      "html_url": "https://github.com/ram-bakthavachalam",
      "followers_url": "https://api.github.com/users/ram-bakthavachalam/followers",
      "following_url": "https://api.github.com/users/ram-bakthavachalam/following{/other_user}",
      "gists_url": "https://api.github.com/users/ram-bakthavachalam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ram-bakthavachalam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ram-bakthavachalam/subscriptions",
      "organizations_url": "https://api.github.com/users/ram-bakthavachalam/orgs",
      "repos_url": "https://api.github.com/users/ram-bakthavachalam/repos",
      "events_url": "https://api.github.com/users/ram-bakthavachalam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ram-bakthavachalam/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-03-30T22:07:53Z",
    "updated_at": "2016-11-26T23:14:39Z",
    "closed_at": "2016-11-26T23:14:39Z",
    "author_association": "NONE",
    "body": "github.getRepository method appends /repos/ to the url which does not work for Enterprise github instance.\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/262",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/262/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/262/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/262/events",
    "html_url": "https://github.com/hub4j/github-api/issues/262",
    "id": 143538004,
    "node_id": "MDU6SXNzdWUxNDM1MzgwMDQ=",
    "number": 262,
    "title": "Add Support for the Protected Branches API",
    "user": {
      "login": "kmadel",
      "id": 983526,
      "node_id": "MDQ6VXNlcjk4MzUyNg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/983526?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kmadel",
      "html_url": "https://github.com/kmadel",
      "followers_url": "https://api.github.com/users/kmadel/followers",
      "following_url": "https://api.github.com/users/kmadel/following{/other_user}",
      "gists_url": "https://api.github.com/users/kmadel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kmadel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kmadel/subscriptions",
      "organizations_url": "https://api.github.com/users/kmadel/orgs",
      "repos_url": "https://api.github.com/users/kmadel/repos",
      "events_url": "https://api.github.com/users/kmadel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kmadel/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-03-25T16:38:50Z",
    "updated_at": "2016-06-03T06:40:46Z",
    "closed_at": "2016-06-03T06:40:46Z",
    "author_association": "NONE",
    "body": "See https://developer.github.com/changes/2015-11-11-protected-branches-api/\nand\nhttps://developer.github.com/v3/repos/#enabling-and-disabling-branch-protection\n\nAdmittedly, this is a beta feature, but would certainly be nice to modify the protected status and protection context automatically from, say, a Jenkins job.\n\nThis is also available for GHE as of v2.5\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/261",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/261/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/261/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/261/events",
    "html_url": "https://github.com/hub4j/github-api/issues/261",
    "id": 141710751,
    "node_id": "MDU6SXNzdWUxNDE3MTA3NTE=",
    "number": 261,
    "title": "Failed to deserialize list of contributors when repo is empty",
    "user": {
      "login": "ctubbsii",
      "id": 1280725,
      "node_id": "MDQ6VXNlcjEyODA3MjU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1280725?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctubbsii",
      "html_url": "https://github.com/ctubbsii",
      "followers_url": "https://api.github.com/users/ctubbsii/followers",
      "following_url": "https://api.github.com/users/ctubbsii/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctubbsii/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctubbsii/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctubbsii/subscriptions",
      "organizations_url": "https://api.github.com/users/ctubbsii/orgs",
      "repos_url": "https://api.github.com/users/ctubbsii/repos",
      "events_url": "https://api.github.com/users/ctubbsii/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctubbsii/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-03-17T21:26:11Z",
    "updated_at": "2016-06-04T03:27:30Z",
    "closed_at": "2016-06-04T03:27:30Z",
    "author_association": "NONE",
    "body": "Saw the following error when iterating over a list of contributors on a repository. My guess is that there's a user whose username isn't compatible with whatever encoding is being used here, because it's 100% reproducible at the exact same point in the iteration.\n\n```\nException in thread \"main\" java.lang.Error: java.io.IOException: Failed to deserialize \n  at org.kohsuke.github.Requester$PagingIterator.fetch(Requester.java:422)\n  at org.kohsuke.github.Requester$PagingIterator.hasNext(Requester.java:389)\n  at org.kohsuke.github.PagedIterator.fetch(PagedIterator.java:44)\n  at org.kohsuke.github.PagedIterator.hasNext(PagedIterator.java:32)\n  at java.lang.Iterable.forEach(Iterable.java:74)\n  ...\nCaused by: java.io.IOException: Failed to deserialize \n  at org.kohsuke.github.Requester.parse(Requester.java:489)\n  at org.kohsuke.github.Requester.access$200(Requester.java:65)\n  at org.kohsuke.github.Requester$PagingIterator.fetch(Requester.java:413)\n  ... 7 more\nCaused by: com.fasterxml.jackson.databind.JsonMappingException: No content to map due to end-of-input\n at [Source: java.io.StringReader@4f51b3e0; line: 1, column: 1]\n  at com.fasterxml.jackson.databind.JsonMappingException.from(JsonMappingException.java:164)\n  at com.fasterxml.jackson.databind.ObjectMapper._initForReading(ObjectMapper.java:2931)\n  at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:2873)\n  at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2034)\n  at org.kohsuke.github.Requester.parse(Requester.java:487)\n  ... 9 more\n```\n\nIt looks like the problem is when the `PagedIterator.hasNext()` is called when the repo is empty and you try to list its contributors.\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/260",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/260/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/260/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/260/events",
    "html_url": "https://github.com/hub4j/github-api/issues/260",
    "id": 141111049,
    "node_id": "MDU6SXNzdWUxNDExMTEwNDk=",
    "number": 260,
    "title": "github-api does not distinguish between user and organisation",
    "user": {
      "login": "luizkowalski",
      "id": 112706,
      "node_id": "MDQ6VXNlcjExMjcwNg==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/112706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luizkowalski",
      "html_url": "https://github.com/luizkowalski",
      "followers_url": "https://api.github.com/users/luizkowalski/followers",
      "following_url": "https://api.github.com/users/luizkowalski/following{/other_user}",
      "gists_url": "https://api.github.com/users/luizkowalski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luizkowalski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luizkowalski/subscriptions",
      "organizations_url": "https://api.github.com/users/luizkowalski/orgs",
      "repos_url": "https://api.github.com/users/luizkowalski/repos",
      "events_url": "https://api.github.com/users/luizkowalski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luizkowalski/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-03-15T21:56:37Z",
    "updated_at": "2016-06-04T03:28:16Z",
    "closed_at": "2016-06-04T03:28:16Z",
    "author_association": "NONE",
    "body": "if you for example, call the API giving an user instead an organization login, the API can't distinguish between them and will return an \"empty\" organization with some user data\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/259",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/259/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/259/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/259/events",
    "html_url": "https://github.com/hub4j/github-api/pull/259",
    "id": 140417082,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjI2NTIzMTM=",
    "number": 259,
    "title": "Animal sniffer",
    "user": {
      "login": "Shredder121",
      "id": 4105066,
      "node_id": "MDQ6VXNlcjQxMDUwNjY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4105066?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Shredder121",
      "html_url": "https://github.com/Shredder121",
      "followers_url": "https://api.github.com/users/Shredder121/followers",
      "following_url": "https://api.github.com/users/Shredder121/following{/other_user}",
      "gists_url": "https://api.github.com/users/Shredder121/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Shredder121/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Shredder121/subscriptions",
      "organizations_url": "https://api.github.com/users/Shredder121/orgs",
      "repos_url": "https://api.github.com/users/Shredder121/repos",
      "events_url": "https://api.github.com/users/Shredder121/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Shredder121/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-03-12T21:05:22Z",
    "updated_at": "2016-03-19T01:27:22Z",
    "closed_at": "2016-03-19T01:27:22Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/hub4j/github-api/pulls/259",
      "html_url": "https://github.com/hub4j/github-api/pull/259",
      "diff_url": "https://github.com/hub4j/github-api/pull/259.diff",
      "patch_url": "https://github.com/hub4j/github-api/pull/259.patch"
    },
    "body": "Hello @kohsuke.\n\nSeeing as you recently set the compiler target back to 5, I wanted to help you maintain this compatibility.\nThere is still one unresolved issue:\n\n```\n--- animal-sniffer-maven-plugin:1.15:check (ensure-java-1.5-class-library) @ github-api ---\nChecking unresolved references to org.codehaus.mojo.signature:java15:1.0\nX:\\Git\\github\\github-api\\src\\main\\java\\org\\kohsuke\\github\\GHContent.java:81: Undefined reference: byte[] javax.xml.bind.DatatypeConverter.parseBase64Binary(String)\nX:\\Git\\github\\github-api\\src\\main\\java\\org\\kohsuke\\github\\GHContent.java:182: Undefined reference: String javax.xml.bind.DatatypeConverter.printBase64Binary(byte[])\nX:\\Git\\github\\github-api\\src\\main\\java\\org\\kohsuke\\github\\GHRepository.java:1165: Undefined reference: String javax.xml.bind.DatatypeConverter.printBase64Binary(byte[])\n```\n\nHope that you can integrate this.\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/258",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/258/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/258/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/258/events",
    "html_url": "https://github.com/hub4j/github-api/issues/258",
    "id": 140008036,
    "node_id": "MDU6SXNzdWUxNDAwMDgwMzY=",
    "number": 258,
    "title": "API Rate Limit Exceeding",
    "user": {
      "login": "sbhaktha",
      "id": 5631150,
      "node_id": "MDQ6VXNlcjU2MzExNTA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5631150?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sbhaktha",
      "html_url": "https://github.com/sbhaktha",
      "followers_url": "https://api.github.com/users/sbhaktha/followers",
      "following_url": "https://api.github.com/users/sbhaktha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sbhaktha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sbhaktha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sbhaktha/subscriptions",
      "organizations_url": "https://api.github.com/users/sbhaktha/orgs",
      "repos_url": "https://api.github.com/users/sbhaktha/repos",
      "events_url": "https://api.github.com/users/sbhaktha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sbhaktha/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-03-10T21:02:05Z",
    "updated_at": "2016-06-04T06:34:28Z",
    "closed_at": "2016-06-04T03:31:19Z",
    "author_association": "NONE",
    "body": "Hi @kohsuke,\n\nI would appreciate your help on this.\n\nI have used the `HttpConnector` and have specified a cache directory in my server. I am using OAuth and it looks like my quota is 5000 requests, based on this sample cache file:\n\n```\nhttps://api.github.com/repos/allenai/aristo-tables/contents/tables/weather_terms?ref=main\nGET\n2\nAuthorization: token e381d0427927aef5e2858ac06b6cb01a34b0a603\nAccept-Encoding: gzip\nHTTP/1.1 200 OK\n30\nServer: GitHub.com\nDate: Thu, 10 Mar 2016 20:57:33 GMT\nContent-Type: application/json; charset=utf-8\nTransfer-Encoding: chunked\nStatus: 200 OK\n**X-RateLimit-Limit: 5000**\nX-RateLimit-Remaining: 4689\nX-RateLimit-Reset: 1457646852\nCache-Control: private, max-age=60, s-maxage=60\nVary: Accept, Authorization, Cookie, X-GitHub-OTP\nETag: W/\"c2dc693298f7806038e984d1ac857ffb\"\nLast-Modified: Tue, 08 Mar 2016 23:54:00 GMT\nX-OAuth-Scopes: read:repo_hook, repo\nX-Accepted-OAuth-Scopes:\nX-OAuth-Client-Id: 47355241bdf02ac9122d\nX-GitHub-Media-Type: github.v3; format=json\nAccess-Control-Expose-Headers: ETag, Link, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval\nAccess-Control-Allow-Origin: *\nContent-Security-Policy: default-src 'none'\nStrict-Transport-Security: max-age=31536000; includeSubdomains; preload\nX-Content-Type-Options: nosniff\nX-Frame-Options: deny\nX-XSS-Protection: 1; mode=block\nVary: Accept-Encoding\nX-Served-By: 01d096e6cfe28f8aea352e988c332cd3\nContent-Encoding: gzip\nX-GitHub-Request-Id: 36D5C9C0:101B5:A516A26:56E1DFBD\nOkHttp-Selected-Protocol: http/1.1\nOkHttp-Sent-Millis: 1457643453839\nOkHttp-Received-Millis: 1457643453959\n```\n\nMy client refreshes periodically to be in sync with the repo, however, even though there has been no change in the repo, I run out of API rate limit every now and then. I thought it should just be reading from the cache. \n\nThe following call gets executed on every refresh:\n\n```\n  private def getTableDirs(\n    oauthAccessToken: String,\n    repo: GitRepoInfo,\n    tableNamesFilter: Option[Seq[String]]\n  ): Seq[GHContent] = {\n    blocking {\n      // Create a GitHubBuilder to be able to build a GitHub object with required\n      // RateLimitHandler strategy and OAuth parameters. Instead of waiting, this will\n      // throw an exception immediately if the request limit is exceeded.\n      val gitHubBuilder =\n        new GitHubBuilder()\n          .withRateLimitHandler(RateLimitHandler.FAIL)\n          .withOAuthToken(oauthAccessToken)\n          .withConnector(\n            new OkHttpConnector(\n              new OkUrlFactory(\n                new OkHttpClient().setCache(cache))))\n      val github = gitHubBuilder.build()\n\n      // Get the requested repo.\n      val repoName = repo.fork + \"/\" + repo.repo\n      val repository = github.getRepository(repoName)\n      // Get all directories (expected to be Table directories) from the top level of the repo.\n      val allTableDirs =\n        repository.getDirectoryContent(\"tables\", repo.branch).asScala.filter(_.isDirectory)\n      // If there is a filter, restrict returned table directories to that set, if not return all.\n      tableNamesFilter match {\n        case Some(filter) =>\n          val tableSet = filter.map(_.toLowerCase).toSet\n          allTableDirs.filter(d => tableSet.contains(d.getName.toLowerCase))\n        case None =>\n          allTableDirs\n      }\n    }\n  }\n```\n\nFurther, there are other calls like `ghContent.read` -- is each of these a separate request to Git? Even so, I wouldn't think they would be called every time but just looked up from the cache.\n\nAny ideas?\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/257",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/257/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/257/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/257/events",
    "html_url": "https://github.com/hub4j/github-api/issues/257",
    "id": 139401088,
    "node_id": "MDU6SXNzdWUxMzk0MDEwODg=",
    "number": 257,
    "title": "missing maven central dependencies in 1.72",
    "user": {
      "login": "cvogt",
      "id": 274947,
      "node_id": "MDQ6VXNlcjI3NDk0Nw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/274947?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cvogt",
      "html_url": "https://github.com/cvogt",
      "followers_url": "https://api.github.com/users/cvogt/followers",
      "following_url": "https://api.github.com/users/cvogt/following{/other_user}",
      "gists_url": "https://api.github.com/users/cvogt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cvogt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cvogt/subscriptions",
      "organizations_url": "https://api.github.com/users/cvogt/orgs",
      "repos_url": "https://api.github.com/users/cvogt/repos",
      "events_url": "https://api.github.com/users/cvogt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cvogt/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2016-03-08T21:38:27Z",
    "updated_at": "2018-01-04T16:29:51Z",
    "closed_at": "2016-03-08T23:01:24Z",
    "author_association": "NONE",
    "body": "also see #167\n\nsome jenkins packages aren't on maven central, so resolving from maven fails\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/256",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/256/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/256/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/256/events",
    "html_url": "https://github.com/hub4j/github-api/issues/256",
    "id": 138918972,
    "node_id": "MDU6SXNzdWUxMzg5MTg5NzI=",
    "number": 256,
    "title": "Not able to specify client Id and client secret to connect using OAuth",
    "user": {
      "login": "sbhaktha",
      "id": 5631150,
      "node_id": "MDQ6VXNlcjU2MzExNTA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5631150?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sbhaktha",
      "html_url": "https://github.com/sbhaktha",
      "followers_url": "https://api.github.com/users/sbhaktha/followers",
      "following_url": "https://api.github.com/users/sbhaktha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sbhaktha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sbhaktha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sbhaktha/subscriptions",
      "organizations_url": "https://api.github.com/users/sbhaktha/orgs",
      "repos_url": "https://api.github.com/users/sbhaktha/repos",
      "events_url": "https://api.github.com/users/sbhaktha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sbhaktha/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-03-07T08:34:15Z",
    "updated_at": "2016-03-12T07:21:29Z",
    "closed_at": "2016-03-12T07:21:29Z",
    "author_association": "NONE",
    "body": "Hi,\n\nI would like the 5000 requests rate limit / hour offered by GitHub for authenticated requests-- to do this if you're using OAuth you need to send the client Id and secret. Please see : https://developer.github.com/v3/#increasing-the-unauthenticated-rate-limit-for-oauth-applications . But I don't see a way to do that via your API. Looks like they take only the OAuth Access token. Is there a way to pass these? Or I am stuck with the 60 requests / hour limit.\n\nAppreciate your help!\nThanks,\nSumithra\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/255",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/255/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/255/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/255/events",
    "html_url": "https://github.com/hub4j/github-api/issues/255",
    "id": 138903807,
    "node_id": "MDU6SXNzdWUxMzg5MDM4MDc=",
    "number": 255,
    "title": "Stuck in  Github connect",
    "user": {
      "login": "sbhaktha",
      "id": 5631150,
      "node_id": "MDQ6VXNlcjU2MzExNTA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5631150?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sbhaktha",
      "html_url": "https://github.com/sbhaktha",
      "followers_url": "https://api.github.com/users/sbhaktha/followers",
      "following_url": "https://api.github.com/users/sbhaktha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sbhaktha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sbhaktha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sbhaktha/subscriptions",
      "organizations_url": "https://api.github.com/users/sbhaktha/orgs",
      "repos_url": "https://api.github.com/users/sbhaktha/repos",
      "events_url": "https://api.github.com/users/sbhaktha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sbhaktha/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2016-03-07T06:56:28Z",
    "updated_at": "2016-03-12T07:21:51Z",
    "closed_at": "2016-03-12T07:21:51Z",
    "author_association": "NONE",
    "body": "Hello,\n\nEvery once in a while my call to `GitHub.connectUsingOAuth` gets stuck and won't come out. I have a web client that eventually times out, but this is an issue because this is a blocking call and I don't see a way to specify a timeout so it gets out and then the web client, could issue retries.\n\nAny idea what might be going on?\n\nThanks,\nSumithra\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/254",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/254/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/254/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/254/events",
    "html_url": "https://github.com/hub4j/github-api/pull/254",
    "id": 138814521,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjE4NDg5MjA=",
    "number": 254,
    "title": "Better error messages",
    "user": {
      "login": "cyrille-leclerc",
      "id": 459691,
      "node_id": "MDQ6VXNlcjQ1OTY5MQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/459691?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cyrille-leclerc",
      "html_url": "https://github.com/cyrille-leclerc",
      "followers_url": "https://api.github.com/users/cyrille-leclerc/followers",
      "following_url": "https://api.github.com/users/cyrille-leclerc/following{/other_user}",
      "gists_url": "https://api.github.com/users/cyrille-leclerc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cyrille-leclerc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cyrille-leclerc/subscriptions",
      "organizations_url": "https://api.github.com/users/cyrille-leclerc/orgs",
      "repos_url": "https://api.github.com/users/cyrille-leclerc/repos",
      "events_url": "https://api.github.com/users/cyrille-leclerc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cyrille-leclerc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-03-06T17:36:54Z",
    "updated_at": "2016-03-12T06:56:44Z",
    "closed_at": "2016-03-12T06:56:44Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/hub4j/github-api/pulls/254",
      "html_url": "https://github.com/hub4j/github-api/pull/254",
      "diff_url": "https://github.com/hub4j/github-api/pull/254.diff",
      "patch_url": "https://github.com/hub4j/github-api/pull/254.patch"
    },
    "body": "Better error message: \n- Introduce HttpException, subclass of IOException with url, http responseCode and http responseMessage to help exception handling.\n- Add a `FINEST` log message in `GitHub.isCredentialsValid()` in case of exception as we silently swallow this exception.\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/253",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/253/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/253/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/253/events",
    "html_url": "https://github.com/hub4j/github-api/pull/253",
    "id": 138813542,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjE4NDg2Nzc=",
    "number": 253,
    "title": "Fix #252: infinite loop because the \"hypertext engine\" generates invalid URLs",
    "user": {
      "login": "cyrille-leclerc",
      "id": 459691,
      "node_id": "MDQ6VXNlcjQ1OTY5MQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/459691?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cyrille-leclerc",
      "html_url": "https://github.com/cyrille-leclerc",
      "followers_url": "https://api.github.com/users/cyrille-leclerc/followers",
      "following_url": "https://api.github.com/users/cyrille-leclerc/following{/other_user}",
      "gists_url": "https://api.github.com/users/cyrille-leclerc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cyrille-leclerc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cyrille-leclerc/subscriptions",
      "organizations_url": "https://api.github.com/users/cyrille-leclerc/orgs",
      "repos_url": "https://api.github.com/users/cyrille-leclerc/repos",
      "events_url": "https://api.github.com/users/cyrille-leclerc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cyrille-leclerc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-03-06T17:28:50Z",
    "updated_at": "2016-03-12T06:59:01Z",
    "closed_at": "2016-03-12T06:59:01Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/hub4j/github-api/pulls/253",
      "html_url": "https://github.com/hub4j/github-api/pull/253",
      "diff_url": "https://github.com/hub4j/github-api/pull/253.diff",
      "patch_url": "https://github.com/hub4j/github-api/pull/253.patch"
    },
    "body": "Fix #252: infinite loop because the \"hypertext engine\" may duplicate the `?` char generating invalid `https://api.github.com/notifications?all=true&page=2?all=true` instead of `https://api.github.com/notifications?all=true&page=2&all=true`. \n\nA better fix will be to prevent duplication of parameters (`all=true` in this case).\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/252",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/252/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/252/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/252/events",
    "html_url": "https://github.com/hub4j/github-api/issues/252",
    "id": 138804642,
    "node_id": "MDU6SXNzdWUxMzg4MDQ2NDI=",
    "number": 252,
    "title": "Infinite loop in `GHNotificationStream$1.fetch()`",
    "user": {
      "login": "cyrille-leclerc",
      "id": 459691,
      "node_id": "MDQ6VXNlcjQ1OTY5MQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/459691?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cyrille-leclerc",
      "html_url": "https://github.com/cyrille-leclerc",
      "followers_url": "https://api.github.com/users/cyrille-leclerc/followers",
      "following_url": "https://api.github.com/users/cyrille-leclerc/following{/other_user}",
      "gists_url": "https://api.github.com/users/cyrille-leclerc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cyrille-leclerc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cyrille-leclerc/subscriptions",
      "organizations_url": "https://api.github.com/users/cyrille-leclerc/orgs",
      "repos_url": "https://api.github.com/users/cyrille-leclerc/repos",
      "events_url": "https://api.github.com/users/cyrille-leclerc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cyrille-leclerc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2016-03-06T15:54:54Z",
    "updated_at": "2016-03-12T06:59:00Z",
    "closed_at": "2016-03-12T06:59:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "When I run `mvn clean verify` I often get an infinite loop of `org.kohsuke.github.Requester._to(Requester.java:244)` in `org.kohsuke.github.GHNotificationStream$1.fetch(GHNotificationStream.java:161)`.\n\nThe `tailApiUrl` is invalid with 2 occurrences of `?`:\n\n```\n\n_to (\n   tailApiUrl: \"https://api.github.com/notifications?all=true&page=2?all=true\", \n   type: \"GHTThread\") {\n\n   links= <https://api.github.com/notifications?all=true&page=2>; rel=\"next\", <https://api.github.com/notifications?all=true&page=13>; rel=\"last\"\n\n   link=https://api.github.com/notifications?all=true&page=2?all=true\n}\n```\n\nStacktrace\n\n```\n\"main\" #1 prio=5 os_prio=31 tid=0x00007f9524000000 nid=0x1703 runnable [0x00007000001ff000]\n\n  java.lang.Thread.State: RUNNABLE\n    at java.net.SocketInputStream.socketRead0(Native Method)\n    at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)\n    at java.net.SocketInputStream.read(SocketInputStream.java:170)\n    at java.net.SocketInputStream.read(SocketInputStream.java:141)\n    at sun.security.ssl.InputRecord.readFully(InputRecord.java:465)\n    at sun.security.ssl.InputRecord.read(InputRecord.java:503)\n    at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:973)\n    - locked <0x0000000795a7ea90> (a java.lang.Object)\n    at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:930)\n    at sun.security.ssl.AppInputStream.read(AppInputStream.java:105)\n    - locked <0x0000000795a9cea0> (a sun.security.ssl.AppInputStream)\n    at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)\n    at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)\n    at java.io.BufferedInputStream.read(BufferedInputStream.java:345)\n    - locked <0x00000007963e8ae8> (a java.io.BufferedInputStream)\n    at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704)\n    at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647)\n    at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536)\n    - locked <0x00000007963e6548> (a sun.net.www.protocol.https.DelegateHttpsURLConnection)\n    at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441)\n    - locked <0x00000007963e6548> (a sun.net.www.protocol.https.DelegateHttpsURLConnection)\n    at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)\n    at sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:338)\n    at org.kohsuke.github.Requester.parse(Requester.java:478)\n    at org.kohsuke.github.Requester._to(Requester.java:236)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester._to(Requester.java:244)\n    at org.kohsuke.github.Requester.to(Requester.java:203)\n    at org.kohsuke.github.GHNotificationStream$1.fetch(GHNotificationStream.java:161)\n    at org.kohsuke.github.GHNotificationStream$1.hasNext(GHNotificationStream.java:130)\n    at org.kohsuke.github.AppTest.notifications(AppTest.java:831)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:497)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)\n    at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)\n    at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:497)\n    at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)\n    at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)\n    at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)\n    at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)\n    at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)\n\n   Locked ownable synchronizers:\n    - None\n```\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/251",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/251/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/251/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/251/events",
    "html_url": "https://github.com/hub4j/github-api/pull/251",
    "id": 138696823,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjE4MTY5NzQ=",
    "number": 251,
    "title": "Improve checkApiUrlValidity() method ",
    "user": {
      "login": "recena",
      "id": 1021745,
      "node_id": "MDQ6VXNlcjEwMjE3NDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1021745?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/recena",
      "html_url": "https://github.com/recena",
      "followers_url": "https://api.github.com/users/recena/followers",
      "following_url": "https://api.github.com/users/recena/following{/other_user}",
      "gists_url": "https://api.github.com/users/recena/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/recena/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/recena/subscriptions",
      "organizations_url": "https://api.github.com/users/recena/orgs",
      "repos_url": "https://api.github.com/users/recena/repos",
      "events_url": "https://api.github.com/users/recena/events{/privacy}",
      "received_events_url": "https://api.github.com/users/recena/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-03-05T16:46:13Z",
    "updated_at": "2016-03-12T07:16:44Z",
    "closed_at": "2016-03-12T07:16:44Z",
    "author_association": "COLLABORATOR",
    "pull_request": {
      "url": "https://api.github.com/repos/hub4j/github-api/pulls/251",
      "html_url": "https://github.com/hub4j/github-api/pull/251",
      "diff_url": "https://github.com/hub4j/github-api/pull/251.diff",
      "patch_url": "https://github.com/hub4j/github-api/pull/251.patch"
    },
    "body": "Part of [JENKINS-33318](https://issues.jenkins-ci.org/browse/JENKINS-33318)\n\n@reviewbybees, specially @kohsuke and @cyrille-leclerc\n"
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/250",
    "repository_url": "https://api.github.com/repos/hub4j/github-api",
    "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/250/labels{/name}",
    "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/250/comments",
    "events_url": "https://api.github.com/repos/hub4j/github-api/issues/250/events",
    "html_url": "https://github.com/hub4j/github-api/issues/250",
    "id": 137319260,
    "node_id": "MDU6SXNzdWUxMzczMTkyNjA=",
    "number": 250,
    "title": "traceback if webhook set to \"send me everything\".",
    "user": {
      "login": "kad",
      "id": 41858,
      "node_id": "MDQ6VXNlcjQxODU4",
      "avatar_url": "https://avatars1.githubusercontent.com/u/41858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kad",
      "html_url": "https://github.com/kad",
      "followers_url": "https://api.github.com/users/kad/followers",
      "following_url": "https://api.github.com/users/kad/following{/other_user}",
      "gists_url": "https://api.github.com/users/kad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kad/subscriptions",
      "organizations_url": "https://api.github.com/users/kad/orgs",
      "repos_url": "https://api.github.com/users/kad/repos",
      "events_url": "https://api.github.com/users/kad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kad/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2016-02-29T17:31:05Z",
    "updated_at": "2016-03-01T04:56:48Z",
    "closed_at": "2016-03-01T04:56:48Z",
    "author_association": "NONE",
    "body": "If webhook is set to \"send me everything\" instead of just push events, then github-api would crash with something similar to this: \n\n```\nWARNING: Failed to add GitHub webhook for GitHubRepositoryName[host=github.com,username=xxxx,repository=zzzzzz]\njava.lang.IllegalArgumentException: No enum constant org.kohsuke.github.GHEvent.*\n        at java.lang.Enum.valueOf(Enum.java:238)\n        at org.kohsuke.github.GHHook.getEvents(GHHook.java:30)\n        at org.jenkinsci.plugins.github.webhook.WebhookManager$7.applyNullSafe(WebhookManager.java:258)\n        at org.jenkinsci.plugins.github.webhook.WebhookManager$7.applyNullSafe(WebhookManager.java:255)\n        at org.jenkinsci.plugins.github.util.misc.NullSafeFunction.apply(NullSafeFunction.java:18)\n\n\n```\n\n``` json\n    \"events\": [\n      \"*\"\n    ],\n```\n\nin theory, org.kohsuke.github.GHHook.getEvents should be able to see if \"e\" == \"*\", and skip it or add all known enums to return set... not sure about logic/usage of that function in different places.\n"
  }
]