{
  "total_count": 79,
  "incomplete_results": false,
  "items": [
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/878",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/878/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/878/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/878/events",
      "html_url": "https://github.com/hub4j/github-api/issues/878",
      "id": 650827132,
      "node_id": "MDU6SXNzdWU2NTA4MjcxMzI=",
      "number": 878,
      "title": "Failing to get sha for bigger files",
      "user": {
        "login": "Osiris-Team",
        "id": 59899645,
        "node_id": "MDQ6VXNlcjU5ODk5NjQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/59899645?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Osiris-Team",
        "html_url": "https://github.com/Osiris-Team",
        "followers_url": "https://api.github.com/users/Osiris-Team/followers",
        "following_url": "https://api.github.com/users/Osiris-Team/following{/other_user}",
        "gists_url": "https://api.github.com/users/Osiris-Team/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Osiris-Team/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Osiris-Team/subscriptions",
        "organizations_url": "https://api.github.com/users/Osiris-Team/orgs",
        "repos_url": "https://api.github.com/users/Osiris-Team/repos",
        "events_url": "https://api.github.com/users/Osiris-Team/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Osiris-Team/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 2070644911,
          "node_id": "MDU6TGFiZWwyMDcwNjQ0OTEx",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/documentation",
          "name": "documentation",
          "color": "6ee5cb",
          "default": true,
          "description": ""
        },
        {
          "id": 1662551322,
          "node_id": "MDU6TGFiZWwxNjYyNTUxMzIy",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/enhancement",
          "name": "enhancement",
          "color": "0e8a16",
          "default": true,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 6,
      "created_at": "2020-07-04T04:50:23Z",
      "updated_at": "2020-07-07T18:35:16Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "**Im trying to get the sha by using following code:**\r\n\r\n```java\r\nString sha = repo.getFileContent(\"my/file.txt\").getSha();\r\n```\r\n\r\n**But I get this error:**\r\norg.kohsuke.github.HttpException: {\"message\":\"This API returns blobs up to 1 MB in size. The requested blob is too large to fetch via the API, but you can use the Git Data API to request blobs up to 100 MB in size.\",\"errors\":[{\"resource\":\"Blob\",\"field\":\"data\",\"code\":\"too_large\"}],\"documentation_url\":\"https://developer.github.com/v3/repos/contents/#get-contents\"}\r\n\r\n**Is there a possibility to switch to Git Data or is there another workaround for this?**\r\n",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/875",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/875/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/875/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/875/events",
      "html_url": "https://github.com/hub4j/github-api/issues/875",
      "id": 649854895,
      "node_id": "MDU6SXNzdWU2NDk4NTQ4OTU=",
      "number": 875,
      "title": "Add symlink support",
      "user": {
        "login": "jtnord",
        "id": 494726,
        "node_id": "MDQ6VXNlcjQ5NDcyNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/494726?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtnord",
        "html_url": "https://github.com/jtnord",
        "followers_url": "https://api.github.com/users/jtnord/followers",
        "following_url": "https://api.github.com/users/jtnord/following{/other_user}",
        "gists_url": "https://api.github.com/users/jtnord/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jtnord/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jtnord/subscriptions",
        "organizations_url": "https://api.github.com/users/jtnord/orgs",
        "repos_url": "https://api.github.com/users/jtnord/repos",
        "events_url": "https://api.github.com/users/jtnord/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jtnord/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1662551322,
          "node_id": "MDU6TGFiZWwxNjYyNTUxMzIy",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/enhancement",
          "name": "enhancement",
          "color": "0e8a16",
          "default": true,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 11,
      "created_at": "2020-07-02T11:24:56Z",
      "updated_at": "2021-03-23T08:22:37Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "body": "**Describe the bug**\r\n\r\nif a symlink exists in the repository it does not seem possible to resolve it using the current API methods\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. create a repo\r\n2. create a directory `dir`\r\n3. create a file `file` in `dir` with contents `hello world`\r\n4. create a symlink `dir-link` pointing to `dir`\r\n5. create a symlink `file-link` pointing to `dir/file`\r\n6. use the api to try and resolve `dir-link` or `file-link`\r\n\r\n**Expected behavior**\r\n\r\nThere is an API that can be used to resolve the symbolic links to the actual files\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: N/A\r\n - Browser N/A\r\n - Version N/A\r\n\r\n**Additional context**\r\n\r\nhttps://issues.jenkins-ci.org/browse/JENKINS-62922\r\n",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/852",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/852/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/852/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/852/events",
      "html_url": "https://github.com/hub4j/github-api/issues/852",
      "id": 640766934,
      "node_id": "MDU6SXNzdWU2NDA3NjY5MzQ=",
      "number": 852,
      "title": "Add ability to detect current installed version of GHE",
      "user": {
        "login": "bitwiseman",
        "id": 1958953,
        "node_id": "MDQ6VXNlcjE5NTg5NTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1958953?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitwiseman",
        "html_url": "https://github.com/bitwiseman",
        "followers_url": "https://api.github.com/users/bitwiseman/followers",
        "following_url": "https://api.github.com/users/bitwiseman/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitwiseman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitwiseman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitwiseman/subscriptions",
        "organizations_url": "https://api.github.com/users/bitwiseman/orgs",
        "repos_url": "https://api.github.com/users/bitwiseman/repos",
        "events_url": "https://api.github.com/users/bitwiseman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitwiseman/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 265902955,
          "node_id": "MDU6TGFiZWwyNjU5MDI5NTU=",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/new%20feature",
          "name": "new feature",
          "color": "f4cc53",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2020-06-17T21:55:54Z",
      "updated_at": "2021-06-09T21:26:10Z",
      "closed_at": null,
      "author_association": "COLLABORATOR",
      "active_lock_reason": null,
      "body": "# Description\r\n\r\nIt looks like as far back as GHE 2.12 the `/meta` endpoint supports returning the GHE version as `installed_version`.  \r\n\r\n* https://developer.github.com/enterprise/2.12/v3/meta/\r\n* https://developer.github.com/enterprise/2.20/v3/meta/\r\n\r\nThis field is not preset for https://api.github.com/meta . \r\n\r\nThis is version could then be used to change the behavior of the library depending on GHE version.  See #822 and #845 for for an example of how this would be extremely useful.\r\n\r\n* https://developer.github.com/enterprise/2.19/v3/git/refs/\r\n* https://developer.github.com/enterprise/2.18/v3/git/refs/\r\n",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/837",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/837/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/837/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/837/events",
      "html_url": "https://github.com/hub4j/github-api/issues/837",
      "id": 631036684,
      "node_id": "MDU6SXNzdWU2MzEwMzY2ODQ=",
      "number": 837,
      "title": "API should expose ability to create and delete impersonation OAuth token",
      "user": {
        "login": "bmuschko",
        "id": 440872,
        "node_id": "MDQ6VXNlcjQ0MDg3Mg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/440872?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bmuschko",
        "html_url": "https://github.com/bmuschko",
        "followers_url": "https://api.github.com/users/bmuschko/followers",
        "following_url": "https://api.github.com/users/bmuschko/following{/other_user}",
        "gists_url": "https://api.github.com/users/bmuschko/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bmuschko/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bmuschko/subscriptions",
        "organizations_url": "https://api.github.com/users/bmuschko/orgs",
        "repos_url": "https://api.github.com/users/bmuschko/repos",
        "events_url": "https://api.github.com/users/bmuschko/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bmuschko/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 265902955,
          "node_id": "MDU6TGFiZWwyNjU5MDI5NTU=",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/new%20feature",
          "name": "new feature",
          "color": "f4cc53",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-06-04T18:00:57Z",
      "updated_at": "2020-06-06T21:00:04Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "Currently, this library does not expose methods for the API that can [Create an impersonation OAuth token](https://developer.github.com/enterprise/2.20/v3/enterprise-admin/users/#create-an-impersonation-oauth-token) or [Delete an impersonation OAuth token](https://developer.github.com/enterprise/2.20/v3/enterprise-admin/users/#delete-an-impersonation-oauth-token).",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/836",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/836/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/836/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/836/events",
      "html_url": "https://github.com/hub4j/github-api/issues/836",
      "id": 630834026,
      "node_id": "MDU6SXNzdWU2MzA4MzQwMjY=",
      "number": 836,
      "title": "Enable adding labels if User has triage role",
      "user": {
        "login": "blacelle",
        "id": 2117911,
        "node_id": "MDQ6VXNlcjIxMTc5MTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2117911?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/blacelle",
        "html_url": "https://github.com/blacelle",
        "followers_url": "https://api.github.com/users/blacelle/followers",
        "following_url": "https://api.github.com/users/blacelle/following{/other_user}",
        "gists_url": "https://api.github.com/users/blacelle/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/blacelle/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/blacelle/subscriptions",
        "organizations_url": "https://api.github.com/users/blacelle/orgs",
        "repos_url": "https://api.github.com/users/blacelle/repos",
        "events_url": "https://api.github.com/users/blacelle/events{/privacy}",
        "received_events_url": "https://api.github.com/users/blacelle/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1662551322,
          "node_id": "MDU6TGFiZWwxNjYyNTUxMzIy",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/enhancement",
          "name": "enhancement",
          "color": "0e8a16",
          "default": true,
          "description": ""
        },
        {
          "id": 1686290078,
          "node_id": "MDU6TGFiZWwxNjg2MjkwMDc4",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/external",
          "name": "external",
          "color": "a0a0a0",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 9,
      "created_at": "2020-06-04T13:39:08Z",
      "updated_at": "2021-07-21T15:47:43Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "body": "**Describe the bug**\r\nGiven a user with Triage access, labels are not added when creating an issue.\r\n\r\n**To Reproduce**\r\n1. Give a user Triage access to a repo\r\n2. Create a Ticket with one label\r\n\r\nThe label is not applied.\r\n\r\n**Expected behavior**\r\nGiven Triage allow applying labels, I expect my label to be applied.\r\n\r\nhttps://help.github.com/en/github/setting-up-and-managing-organizations-and-teams/repository-permission-levels-for-an-organization\r\n\r\nIt appears I can add the labels once the issue is created\r\n\r\nConfirmed with 1.112\r\n\r\nTypically, in this usecase, I sucvcessfully apply with labels with something like:\r\n\r\n```\r\n\t\t\tGHIssue issue = building.create();\r\n\r\n\t\t\tlabels.forEach(t -> {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tissue.addLabels(t);\r\n\t\t\t\t} catch (IOException e) {\r\n\t\t\t\t\tthrow new UncheckedIOException(e);\r\n\t\t\t\t}\r\n\t\t\t});\r\n```\r\n",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/835",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/835/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/835/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/835/events",
      "html_url": "https://github.com/hub4j/github-api/issues/835",
      "id": 630566215,
      "node_id": "MDU6SXNzdWU2MzA1NjYyMTU=",
      "number": 835,
      "title": "Add option to take clean snapshots (instead of manual cleaning)",
      "user": {
        "login": "bitwiseman",
        "id": 1958953,
        "node_id": "MDQ6VXNlcjE5NTg5NTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1958953?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitwiseman",
        "html_url": "https://github.com/bitwiseman",
        "followers_url": "https://api.github.com/users/bitwiseman/followers",
        "following_url": "https://api.github.com/users/bitwiseman/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitwiseman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitwiseman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitwiseman/subscriptions",
        "organizations_url": "https://api.github.com/users/bitwiseman/orgs",
        "repos_url": "https://api.github.com/users/bitwiseman/repos",
        "events_url": "https://api.github.com/users/bitwiseman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitwiseman/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1664647346,
          "node_id": "MDU6TGFiZWwxNjY0NjQ3MzQ2",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/task",
          "name": "task",
          "color": "bfdadc",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-06-04T07:05:38Z",
      "updated_at": "2020-06-06T06:44:33Z",
      "closed_at": null,
      "author_association": "COLLABORATOR",
      "active_lock_reason": null,
      "body": "One of the most common scenarios is needing to take a new snapshot for a test.  \r\nInstead of making people file the right resources folder, we should make `github.test.takeSnapshot` default to snapshotting in a clean directory and then replacing the existing snapshot files.   The current behavior could be moved to `github.test.takeMergedSnapshot` (or some similar name). \r\n\r\nOr allow that value of `github.test.takeSnapshot` to be `merge`? \r\n\r\nThe same should be done with `github.test.useProxy` - it would use only proxy files from a clean directory and we'd add a `github.test.useMergedProxy`.  \r\n\r\n\r\n",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/833",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/833/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/833/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/833/events",
      "html_url": "https://github.com/hub4j/github-api/issues/833",
      "id": 626776927,
      "node_id": "MDU6SXNzdWU2MjY3NzY5Mjc=",
      "number": 833,
      "title": "Stop using `getUrl()` for populate and refresh actions",
      "user": {
        "login": "bitwiseman",
        "id": 1958953,
        "node_id": "MDQ6VXNlcjE5NTg5NTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1958953?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitwiseman",
        "html_url": "https://github.com/bitwiseman",
        "followers_url": "https://api.github.com/users/bitwiseman/followers",
        "following_url": "https://api.github.com/users/bitwiseman/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitwiseman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitwiseman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitwiseman/subscriptions",
        "organizations_url": "https://api.github.com/users/bitwiseman/orgs",
        "repos_url": "https://api.github.com/users/bitwiseman/repos",
        "events_url": "https://api.github.com/users/bitwiseman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitwiseman/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1662551322,
          "node_id": "MDU6TGFiZWwxNjYyNTUxMzIy",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/enhancement",
          "name": "enhancement",
          "color": "0e8a16",
          "default": true,
          "description": ""
        },
        {
          "id": 1664647346,
          "node_id": "MDU6TGFiZWwxNjY0NjQ3MzQ2",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/task",
          "name": "task",
          "color": "bfdadc",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-05-28T20:00:43Z",
      "updated_at": "2020-05-28T20:00:43Z",
      "closed_at": null,
      "author_association": "COLLABORATOR",
      "active_lock_reason": null,
      "body": "The urls returned from github are often problematic and inaccurate.  \r\n\r\nExample: \r\nThe url return `getRef()` returns a url with `git/refs` in it, even when the original query was to `git/ref`.  \r\n\r\n",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/829",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/829/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/829/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/829/events",
      "html_url": "https://github.com/hub4j/github-api/issues/829",
      "id": 625251397,
      "node_id": "MDU6SXNzdWU2MjUyNTEzOTc=",
      "number": 829,
      "title": "Documentation for create Branch and PR for new changes in branch",
      "user": {
        "login": "riddhi2910",
        "id": 32148809,
        "node_id": "MDQ6VXNlcjMyMTQ4ODA5",
        "avatar_url": "https://avatars.githubusercontent.com/u/32148809?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/riddhi2910",
        "html_url": "https://github.com/riddhi2910",
        "followers_url": "https://api.github.com/users/riddhi2910/followers",
        "following_url": "https://api.github.com/users/riddhi2910/following{/other_user}",
        "gists_url": "https://api.github.com/users/riddhi2910/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/riddhi2910/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/riddhi2910/subscriptions",
        "organizations_url": "https://api.github.com/users/riddhi2910/orgs",
        "repos_url": "https://api.github.com/users/riddhi2910/repos",
        "events_url": "https://api.github.com/users/riddhi2910/events{/privacy}",
        "received_events_url": "https://api.github.com/users/riddhi2910/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 2070644911,
          "node_id": "MDU6TGFiZWwyMDcwNjQ0OTEx",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/documentation",
          "name": "documentation",
          "color": "6ee5cb",
          "default": true,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 2,
      "created_at": "2020-05-26T22:56:14Z",
      "updated_at": "2021-07-19T23:57:22Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "Hello,\r\n\r\nI don't see enough documentation on how to create branch and then pull requests for changes in that branch.\r\n\r\nCould you please help me with that?\r\n\r\n",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/816",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/816/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/816/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/816/events",
      "html_url": "https://github.com/hub4j/github-api/issues/816",
      "id": 620293400,
      "node_id": "MDU6SXNzdWU2MjAyOTM0MDA=",
      "number": 816,
      "title": "Document process for \"Preview\" API endpoint usage ",
      "user": {
        "login": "bitwiseman",
        "id": 1958953,
        "node_id": "MDQ6VXNlcjE5NTg5NTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1958953?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitwiseman",
        "html_url": "https://github.com/bitwiseman",
        "followers_url": "https://api.github.com/users/bitwiseman/followers",
        "following_url": "https://api.github.com/users/bitwiseman/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitwiseman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitwiseman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitwiseman/subscriptions",
        "organizations_url": "https://api.github.com/users/bitwiseman/orgs",
        "repos_url": "https://api.github.com/users/bitwiseman/repos",
        "events_url": "https://api.github.com/users/bitwiseman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitwiseman/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 2070644911,
          "node_id": "MDU6TGFiZWwyMDcwNjQ0OTEx",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/documentation",
          "name": "documentation",
          "color": "6ee5cb",
          "default": true,
          "description": ""
        },
        {
          "id": 1991401619,
          "node_id": "MDU6TGFiZWwxOTkxNDAxNjE5",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/good%20first%20issue",
          "name": "good first issue",
          "color": "00FF00",
          "default": true,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 2,
      "created_at": "2020-05-18T15:16:35Z",
      "updated_at": "2021-03-02T08:07:19Z",
      "closed_at": null,
      "author_association": "COLLABORATOR",
      "active_lock_reason": null,
      "body": "We need to document how the project supports using \"Preview\" API endpoints, including `@Preview`, `@Deprecated`, `withPreview()`, and the `Previews` class.\r\n\r\nAlso all `@Preview` items should include a link of GitHub documentation of what they are previewing and `@deprectated` JavaDoc field with boiler plate explaining that this feature is still in preview and a link to the same documentation.",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/807",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/807/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/807/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/807/events",
      "html_url": "https://github.com/hub4j/github-api/issues/807",
      "id": 615125196,
      "node_id": "MDU6SXNzdWU2MTUxMjUxOTY=",
      "number": 807,
      "title": "enterprise apiUrl",
      "user": {
        "login": "dimmonn",
        "id": 6670698,
        "node_id": "MDQ6VXNlcjY2NzA2OTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6670698?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dimmonn",
        "html_url": "https://github.com/dimmonn",
        "followers_url": "https://api.github.com/users/dimmonn/followers",
        "following_url": "https://api.github.com/users/dimmonn/following{/other_user}",
        "gists_url": "https://api.github.com/users/dimmonn/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dimmonn/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dimmonn/subscriptions",
        "organizations_url": "https://api.github.com/users/dimmonn/orgs",
        "repos_url": "https://api.github.com/users/dimmonn/repos",
        "events_url": "https://api.github.com/users/dimmonn/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dimmonn/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1662551322,
          "node_id": "MDU6TGFiZWwxNjYyNTUxMzIy",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/enhancement",
          "name": "enhancement",
          "color": "0e8a16",
          "default": true,
          "description": ""
        },
        {
          "id": 1991401619,
          "node_id": "MDU6TGFiZWwxOTkxNDAxNjE5",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/good%20first%20issue",
          "name": "good first issue",
          "color": "00FF00",
          "default": true,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 6,
      "created_at": "2020-05-09T08:39:12Z",
      "updated_at": "2020-05-18T16:39:48Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "`org.kohsuke.github.GitHubBuilder#fromProperties()` as well as `org.kohsuke.github.GitHubBuilder#fromEnvironment()` doesn't support custom apiUrl",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/789",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/789/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/789/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/789/events",
      "html_url": "https://github.com/hub4j/github-api/issues/789",
      "id": 601236800,
      "node_id": "MDU6SXNzdWU2MDEyMzY4MDA=",
      "number": 789,
      "title": "Github is dropping support for HTTP basic auth",
      "user": {
        "login": "csdev",
        "id": 1824428,
        "node_id": "MDQ6VXNlcjE4MjQ0Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1824428?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/csdev",
        "html_url": "https://github.com/csdev",
        "followers_url": "https://api.github.com/users/csdev/followers",
        "following_url": "https://api.github.com/users/csdev/following{/other_user}",
        "gists_url": "https://api.github.com/users/csdev/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/csdev/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/csdev/subscriptions",
        "organizations_url": "https://api.github.com/users/csdev/orgs",
        "repos_url": "https://api.github.com/users/csdev/repos",
        "events_url": "https://api.github.com/users/csdev/events{/privacy}",
        "received_events_url": "https://api.github.com/users/csdev/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1991401619,
          "node_id": "MDU6TGFiZWwxOTkxNDAxNjE5",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/good%20first%20issue",
          "name": "good first issue",
          "color": "00FF00",
          "default": true,
          "description": ""
        },
        {
          "id": 1664647346,
          "node_id": "MDU6TGFiZWwxNjY0NjQ3MzQ2",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/task",
          "name": "task",
          "color": "bfdadc",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 17,
      "created_at": "2020-04-16T16:41:55Z",
      "updated_at": "2020-11-17T01:46:53Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "Github is dropping support for basic auth on Nov 13, 2020 (with service brownouts on Sep 30 and Oct 28)\r\nhttps://developer.github.com/changes/2020-02-14-deprecating-password-auth/\r\n\r\nWe should make sure that we support using personal access tokens with the `Authorization: token` header. We may also want to issue deprecation warnings if users continue to use basic auth:\r\nhttps://github.com/github-api/github-api/blob/5c9474d1c891121f11ce9c31b51d42216a8e416f/src/main/java/org/kohsuke/github/GitHubClient.java#L119-L123",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/788",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/788/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/788/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/788/events",
      "html_url": "https://github.com/hub4j/github-api/issues/788",
      "id": 600914620,
      "node_id": "MDU6SXNzdWU2MDA5MTQ2MjA=",
      "number": 788,
      "title": "Need support to get \"combined status for a specific ref\"",
      "user": {
        "login": "prabinb",
        "id": 3772520,
        "node_id": "MDQ6VXNlcjM3NzI1MjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3772520?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/prabinb",
        "html_url": "https://github.com/prabinb",
        "followers_url": "https://api.github.com/users/prabinb/followers",
        "following_url": "https://api.github.com/users/prabinb/following{/other_user}",
        "gists_url": "https://api.github.com/users/prabinb/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/prabinb/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/prabinb/subscriptions",
        "organizations_url": "https://api.github.com/users/prabinb/orgs",
        "repos_url": "https://api.github.com/users/prabinb/repos",
        "events_url": "https://api.github.com/users/prabinb/events{/privacy}",
        "received_events_url": "https://api.github.com/users/prabinb/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1662551322,
          "node_id": "MDU6TGFiZWwxNjYyNTUxMzIy",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/enhancement",
          "name": "enhancement",
          "color": "0e8a16",
          "default": true,
          "description": ""
        },
        {
          "id": 1991401619,
          "node_id": "MDU6TGFiZWwxOTkxNDAxNjE5",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/good%20first%20issue",
          "name": "good first issue",
          "color": "00FF00",
          "default": true,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2020-04-16T10:07:27Z",
      "updated_at": "2020-04-16T18:36:25Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "Please refer to this githug api - https://developer.github.com/v3/repos/statuses/#get-the-combined-status-for-a-specific-ref\r\n\r\nCurrently there in the library there is no good way to find the combined status of a ref. I believe support for this end point would be a good use case. ",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/772",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/772/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/772/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/772/events",
      "html_url": "https://github.com/hub4j/github-api/issues/772",
      "id": 593634012,
      "node_id": "MDU6SXNzdWU1OTM2MzQwMTI=",
      "number": 772,
      "title": "GHRepository.getFileContent should give helpful error message when misused",
      "user": {
        "login": "LorenzNickel",
        "id": 29959150,
        "node_id": "MDQ6VXNlcjI5OTU5MTUw",
        "avatar_url": "https://avatars.githubusercontent.com/u/29959150?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LorenzNickel",
        "html_url": "https://github.com/LorenzNickel",
        "followers_url": "https://api.github.com/users/LorenzNickel/followers",
        "following_url": "https://api.github.com/users/LorenzNickel/following{/other_user}",
        "gists_url": "https://api.github.com/users/LorenzNickel/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/LorenzNickel/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/LorenzNickel/subscriptions",
        "organizations_url": "https://api.github.com/users/LorenzNickel/orgs",
        "repos_url": "https://api.github.com/users/LorenzNickel/repos",
        "events_url": "https://api.github.com/users/LorenzNickel/events{/privacy}",
        "received_events_url": "https://api.github.com/users/LorenzNickel/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1662551322,
          "node_id": "MDU6TGFiZWwxNjYyNTUxMzIy",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/enhancement",
          "name": "enhancement",
          "color": "0e8a16",
          "default": true,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 2,
      "created_at": "2020-04-03T20:51:52Z",
      "updated_at": "2020-04-03T21:13:43Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Description\r\nWhen you misuse GHRepository.getFileContent a `com.fasterxml.jackson.databind.exc.MismatchedInputException` is thrown.\r\n\r\n## Reproduce\r\nCreate an authorized instance `Github github` (for example  using `new GitHubBuilder().withOAuthToken(token).build();`)\r\n\r\nExecute this:\r\n`gitHub.getRepository(\"github-api/github-api\").getFileContent(\"\");`\r\n\r\nYou should get something like this:\r\n`org.kohsuke.github.HttpException: Server returned HTTP response code: 200, message: '200 OK' for URL: https://api.github.com/repos/github-api/github-api/contents/`\r\n...\r\n`Caused by: java.io.IOException: Failed to deserialize`\r\n...\r\n`Caused by: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of 'org.kohsuke.github.GHContent' out of START_ARRAY token\r\n at`\r\n...\r\n\r\n## Fix\r\nPlease throw a a proper exception or redesign your implementation to avoid such errors.\r\n\r\n---\r\n\r\nI'd be really happy if you could fix this, please keep up your great work!",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/771",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/771/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/771/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/771/events",
      "html_url": "https://github.com/hub4j/github-api/issues/771",
      "id": 592640787,
      "node_id": "MDU6SXNzdWU1OTI2NDA3ODc=",
      "number": 771,
      "title": "NullPointerException when retrieve a review's user if it's deleted",
      "user": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following{/other_user}",
        "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 265902919,
          "node_id": "MDU6TGFiZWwyNjU5MDI5MTk=",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/bug",
          "name": "bug",
          "color": "e11d21",
          "default": true,
          "description": null
        },
        {
          "id": 1991401619,
          "node_id": "MDU6TGFiZWwxOTkxNDAxNjE5",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/good%20first%20issue",
          "name": "good first issue",
          "color": "00FF00",
          "default": true,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-04-02T13:39:56Z",
      "updated_at": "2020-04-16T18:53:15Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "**Describe the bug**\r\n[This line](https://github.com/github-api/github-api/blob/master/src/main/java/org/kohsuke/github/GHPullRequestReview.java#L81) throws an NPE if the reviewer's user account is deleted in github\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create a Pull Request in a Github repo\r\n2. Register a new github user\r\n3. Use the new user to add a review (e.g. comment + approval) of the pull request\r\n4. Delete that new github user account\r\n5. Try use this API to fetch the review user (i.e. call `review.getUser();` on that `GHPullRequestReview` object.\r\n6. There would an uncaught NullPointerException.\r\n\r\n**Expected behavior**\r\nPerhaps returns a null user?\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: MacOS\r\n - Browser: N/A\r\n - Version: 1.1.06\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/766",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/766/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/766/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/766/events",
      "html_url": "https://github.com/hub4j/github-api/issues/766",
      "id": 591464899,
      "node_id": "MDU6SXNzdWU1OTE0NjQ4OTk=",
      "number": 766,
      "title": "Replace `GHCreateRepositoryBuilder`",
      "user": {
        "login": "bitwiseman",
        "id": 1958953,
        "node_id": "MDQ6VXNlcjE5NTg5NTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1958953?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitwiseman",
        "html_url": "https://github.com/bitwiseman",
        "followers_url": "https://api.github.com/users/bitwiseman/followers",
        "following_url": "https://api.github.com/users/bitwiseman/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitwiseman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitwiseman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitwiseman/subscriptions",
        "organizations_url": "https://api.github.com/users/bitwiseman/orgs",
        "repos_url": "https://api.github.com/users/bitwiseman/repos",
        "events_url": "https://api.github.com/users/bitwiseman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitwiseman/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1780165359,
          "node_id": "MDU6TGFiZWwxNzgwMTY1MzU5",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/breaking%20change",
          "name": "breaking change",
          "color": "b60205",
          "default": false,
          "description": ""
        },
        {
          "id": 1664647346,
          "node_id": "MDU6TGFiZWwxNjY0NjQ3MzQ2",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/task",
          "name": "task",
          "color": "bfdadc",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-03-31T22:08:09Z",
      "updated_at": "2020-03-31T22:08:09Z",
      "closed_at": null,
      "author_association": "COLLABORATOR",
      "active_lock_reason": null,
      "body": "Rename `GHCreateRepositoryBuilder`to `GHRepositoryBuilder`, or perhaps even `GHRepository.Creator` ",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/763",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/763/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/763/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/763/events",
      "html_url": "https://github.com/hub4j/github-api/issues/763",
      "id": 591188016,
      "node_id": "MDU6SXNzdWU1OTExODgwMTY=",
      "number": 763,
      "title": "Add and enforce copyright at the top of all code files",
      "user": {
        "login": "bitwiseman",
        "id": 1958953,
        "node_id": "MDQ6VXNlcjE5NTg5NTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1958953?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitwiseman",
        "html_url": "https://github.com/bitwiseman",
        "followers_url": "https://api.github.com/users/bitwiseman/followers",
        "following_url": "https://api.github.com/users/bitwiseman/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitwiseman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitwiseman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitwiseman/subscriptions",
        "organizations_url": "https://api.github.com/users/bitwiseman/orgs",
        "repos_url": "https://api.github.com/users/bitwiseman/repos",
        "events_url": "https://api.github.com/users/bitwiseman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitwiseman/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1664647346,
          "node_id": "MDU6TGFiZWwxNjY0NjQ3MzQ2",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/task",
          "name": "task",
          "color": "bfdadc",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2020-03-31T15:08:44Z",
      "updated_at": "2020-07-17T20:08:43Z",
      "closed_at": null,
      "author_association": "COLLABORATOR",
      "active_lock_reason": null,
      "body": "",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/761",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/761/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/761/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/761/events",
      "html_url": "https://github.com/hub4j/github-api/issues/761",
      "id": 590656505,
      "node_id": "MDU6SXNzdWU1OTA2NTY1MDU=",
      "number": 761,
      "title": "Http headers should not be exposed as a Map",
      "user": {
        "login": "bitwiseman",
        "id": 1958953,
        "node_id": "MDQ6VXNlcjE5NTg5NTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1958953?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitwiseman",
        "html_url": "https://github.com/bitwiseman",
        "followers_url": "https://api.github.com/users/bitwiseman/followers",
        "following_url": "https://api.github.com/users/bitwiseman/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitwiseman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitwiseman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitwiseman/subscriptions",
        "organizations_url": "https://api.github.com/users/bitwiseman/orgs",
        "repos_url": "https://api.github.com/users/bitwiseman/repos",
        "events_url": "https://api.github.com/users/bitwiseman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitwiseman/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1780165359,
          "node_id": "MDU6TGFiZWwxNzgwMTY1MzU5",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/breaking%20change",
          "name": "breaking change",
          "color": "b60205",
          "default": false,
          "description": ""
        },
        {
          "id": 1662551322,
          "node_id": "MDU6TGFiZWwxNjYyNTUxMzIy",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/enhancement",
          "name": "enhancement",
          "color": "0e8a16",
          "default": true,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-03-30T23:02:25Z",
      "updated_at": "2020-03-31T16:48:06Z",
      "closed_at": null,
      "author_association": "COLLABORATOR",
      "active_lock_reason": null,
      "body": "See #751 \r\n\r\nHttp headers should *not* be represented by a `Map<String, List<String>>`.  \r\n\r\nThe field names a *case-insensitive* whereas Map keys are case-sensitive by definition.  \r\n\r\nhttps://tools.ietf.org/html/rfc7230#section-3.2\r\n\r\nWe should have a `Headers` class that does not follow the Map contract. \r\n\r\n",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/754",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/754/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/754/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/754/events",
      "html_url": "https://github.com/hub4j/github-api/issues/754",
      "id": 587696283,
      "node_id": "MDU6SXNzdWU1ODc2OTYyODM=",
      "number": 754,
      "title": "Illegal Reflective Access Operation to field java.net.HttpURLConnection.method",
      "user": {
        "login": "andrewlalis",
        "id": 9953867,
        "node_id": "MDQ6VXNlcjk5NTM4Njc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9953867?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewlalis",
        "html_url": "https://github.com/andrewlalis",
        "followers_url": "https://api.github.com/users/andrewlalis/followers",
        "following_url": "https://api.github.com/users/andrewlalis/following{/other_user}",
        "gists_url": "https://api.github.com/users/andrewlalis/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/andrewlalis/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/andrewlalis/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewlalis/orgs",
        "repos_url": "https://api.github.com/users/andrewlalis/repos",
        "events_url": "https://api.github.com/users/andrewlalis/events{/privacy}",
        "received_events_url": "https://api.github.com/users/andrewlalis/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 265902919,
          "node_id": "MDU6TGFiZWwyNjU5MDI5MTk=",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/bug",
          "name": "bug",
          "color": "e11d21",
          "default": true,
          "description": null
        },
        {
          "id": 1686290078,
          "node_id": "MDU6TGFiZWwxNjg2MjkwMDc4",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/external",
          "name": "external",
          "color": "a0a0a0",
          "default": false,
          "description": ""
        },
        {
          "id": 1664647346,
          "node_id": "MDU6TGFiZWwxNjY0NjQ3MzQ2",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/task",
          "name": "task",
          "color": "bfdadc",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 16,
      "created_at": "2020-03-25T13:28:11Z",
      "updated_at": "2021-06-01T22:44:41Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "**Describe the bug**\r\nI attempt to archive a repository using the following code:\r\n```java\r\nGHRepository repo = this.org.getRepository(\"repo-name-here\");\r\nrepo.archive();\r\n```\r\nWhen checking GitHub itself, the repository is in fact archived, however I receive a warning in the stderr stream consisting of the following:\r\n```\r\nWARNING: An illegal reflective access operation has occurred\r\nWARNING: Illegal reflective access by org.kohsuke.github.GitHubHttpUrlConnectionClient$HttpURLConnectionResponseInfo (file:/C:/Users/andrew/.m2/repository/org/kohsuke/github-api/1.108/github-api-1.108.jar) to field java.net.HttpURLConnection.method\r\nWARNING: Please consider reporting this to the maintainers of org.kohsuke.github.GitHubHttpUrlConnectionClient$HttpURLConnectionResponseInfo\r\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\r\nWARNING: All illegal access operations will be denied in a future release\r\n```\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Fetch a `GHRepository` that is not yet archived.\r\n2. Call `archive()` on that repository.\r\n\r\n**Expected behavior**\r\nI expect that there should not be any illegal reflective access exceptions.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: Windows 10\r\n - Browser Firefox\r\n - Version 74\r\n",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/749",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/749/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/749/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/749/events",
      "html_url": "https://github.com/hub4j/github-api/issues/749",
      "id": 583217841,
      "node_id": "MDU6SXNzdWU1ODMyMTc4NDE=",
      "number": 749,
      "title": "PagedSearchIterable relies on cached result",
      "user": {
        "login": "bitwiseman",
        "id": 1958953,
        "node_id": "MDQ6VXNlcjE5NTg5NTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1958953?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitwiseman",
        "html_url": "https://github.com/bitwiseman",
        "followers_url": "https://api.github.com/users/bitwiseman/followers",
        "following_url": "https://api.github.com/users/bitwiseman/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitwiseman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitwiseman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitwiseman/subscriptions",
        "organizations_url": "https://api.github.com/users/bitwiseman/orgs",
        "repos_url": "https://api.github.com/users/bitwiseman/repos",
        "events_url": "https://api.github.com/users/bitwiseman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitwiseman/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 265902919,
          "node_id": "MDU6TGFiZWwyNjU5MDI5MTk=",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/bug",
          "name": "bug",
          "color": "e11d21",
          "default": true,
          "description": null
        },
        {
          "id": 1664647346,
          "node_id": "MDU6TGFiZWwxNjY0NjQ3MzQ2",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/task",
          "name": "task",
          "color": "bfdadc",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-03-17T18:35:53Z",
      "updated_at": "2020-03-17T19:43:17Z",
      "closed_at": null,
      "author_association": "COLLABORATOR",
      "active_lock_reason": null,
      "body": "The `populate()` method depends on `adapt()`.  The Iterator created in `adapt()` loads a result, but never refreshes it: \r\nhttps://github.com/github-api/github-api/blob/bccae94c7a740fa7ba297fd6eb2a6782ed156a98/src/main/java/org/kohsuke/github/PagedSearchIterable.java#L91-L93\r\n\r\nThis means that the `getTotalCount()` can become out of sync from iterators or actual search results.\r\n\r\nhttps://github.com/github-api/github-api/blob/bccae94c7a740fa7ba297fd6eb2a6782ed156a98/src/main/java/org/kohsuke/github/PagedSearchIterable.java#L48-L50\r\n",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/748",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/748/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/748/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/748/events",
      "html_url": "https://github.com/hub4j/github-api/issues/748",
      "id": 583197683,
      "node_id": "MDU6SXNzdWU1ODMxOTc2ODM=",
      "number": 748,
      "title": "GHRepository.getLastCommitStatus() reads all statuses to find last status",
      "user": {
        "login": "bitwiseman",
        "id": 1958953,
        "node_id": "MDQ6VXNlcjE5NTg5NTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1958953?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitwiseman",
        "html_url": "https://github.com/bitwiseman",
        "followers_url": "https://api.github.com/users/bitwiseman/followers",
        "following_url": "https://api.github.com/users/bitwiseman/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitwiseman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitwiseman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitwiseman/subscriptions",
        "organizations_url": "https://api.github.com/users/bitwiseman/orgs",
        "repos_url": "https://api.github.com/users/bitwiseman/repos",
        "events_url": "https://api.github.com/users/bitwiseman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitwiseman/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 265902919,
          "node_id": "MDU6TGFiZWwyNjU5MDI5MTk=",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/bug",
          "name": "bug",
          "color": "e11d21",
          "default": true,
          "description": null
        },
        {
          "id": 1991401619,
          "node_id": "MDU6TGFiZWwxOTkxNDAxNjE5",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/good%20first%20issue",
          "name": "good first issue",
          "color": "00FF00",
          "default": true,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-03-17T18:01:15Z",
      "updated_at": "2020-04-16T18:54:08Z",
      "closed_at": null,
      "author_association": "COLLABORATOR",
      "active_lock_reason": null,
      "body": "\r\nhttps://github.com/github-api/github-api/blob/bccae94c7a740fa7ba297fd6eb2a6782ed156a98/src/main/java/org/kohsuke/github/GHRepository.java#L1771-L1774\r\n\r\nThis is fine for a few pages, but bad beyond three pages. \r\n\r\nThis points to a need for `last()`, `first()`, `count()`, and other methods to be added to `PagedIterable` or better `PagedIterator`.   ",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/729",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/729/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/729/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/729/events",
      "html_url": "https://github.com/hub4j/github-api/issues/729",
      "id": 577305635,
      "node_id": "MDU6SXNzdWU1NzczMDU2MzU=",
      "number": 729,
      "title": "NullPointerException when trying to read file-content because encoding is not set",
      "user": {
        "login": "centic9",
        "id": 548322,
        "node_id": "MDQ6VXNlcjU0ODMyMg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548322?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/centic9",
        "html_url": "https://github.com/centic9",
        "followers_url": "https://api.github.com/users/centic9/followers",
        "following_url": "https://api.github.com/users/centic9/following{/other_user}",
        "gists_url": "https://api.github.com/users/centic9/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/centic9/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/centic9/subscriptions",
        "organizations_url": "https://api.github.com/users/centic9/orgs",
        "repos_url": "https://api.github.com/users/centic9/repos",
        "events_url": "https://api.github.com/users/centic9/events{/privacy}",
        "received_events_url": "https://api.github.com/users/centic9/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 265902919,
          "node_id": "MDU6TGFiZWwyNjU5MDI5MTk=",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/bug",
          "name": "bug",
          "color": "e11d21",
          "default": true,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 4,
      "created_at": "2020-03-07T09:12:03Z",
      "updated_at": "2020-04-21T03:31:46Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "**Describe the bug**\r\nThe test-case below triggers a NullPointerException because since some versions github-api expects \"encoding\" to be set in GHContent always, however it seems sometimes this is not set for some repositories.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Run the unit-test below\r\n2. It fails with NullPointerException\r\n\r\n```\r\n    @Test\r\n    public void testNullPointerException() throws IOException {\r\n        GitHub github = GitHub.connect();\r\n\r\n        final PagedSearchIterable<GHContent> list = github.searchContent().\r\n                repo(\"Savyonify/cryptApiSet/\").\r\n                filename(\"build.gradle\").list();\r\n\r\n        for(GHContent match : list) {\r\n            System.out.println(\"Reading \" + match.getHtmlUrl());\r\n            try (final InputStream stream = match.read()) {\r\n                assertNotNull(stream);\r\n            }\r\n        }\r\n    }\r\n```\r\n\r\n**Expected behavior**\r\nI would expect to still be able to read those files.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: Linux\r\n - Browser N/A\r\n - Version 1.95, 1.107, 1.108\r\n\r\n**Additional context**\r\nIt seems github now returns some files as part of search-results which are not existing any more, maybe we can handle these more gracefully?\r\n",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/728",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/728/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/728/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/728/events",
      "html_url": "https://github.com/hub4j/github-api/issues/728",
      "id": 576299912,
      "node_id": "MDU6SXNzdWU1NzYyOTk5MTI=",
      "number": 728,
      "title": "Create Label Event object",
      "user": {
        "login": "aleboulanger",
        "id": 35097656,
        "node_id": "MDQ6VXNlcjM1MDk3NjU2",
        "avatar_url": "https://avatars.githubusercontent.com/u/35097656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aleboulanger",
        "html_url": "https://github.com/aleboulanger",
        "followers_url": "https://api.github.com/users/aleboulanger/followers",
        "following_url": "https://api.github.com/users/aleboulanger/following{/other_user}",
        "gists_url": "https://api.github.com/users/aleboulanger/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/aleboulanger/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/aleboulanger/subscriptions",
        "organizations_url": "https://api.github.com/users/aleboulanger/orgs",
        "repos_url": "https://api.github.com/users/aleboulanger/repos",
        "events_url": "https://api.github.com/users/aleboulanger/events{/privacy}",
        "received_events_url": "https://api.github.com/users/aleboulanger/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1662551322,
          "node_id": "MDU6TGFiZWwxNjYyNTUxMzIy",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/enhancement",
          "name": "enhancement",
          "color": "0e8a16",
          "default": true,
          "description": ""
        },
        {
          "id": 1991401619,
          "node_id": "MDU6TGFiZWwxOTkxNDAxNjE5",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/good%20first%20issue",
          "name": "good first issue",
          "color": "00FF00",
          "default": true,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-03-05T14:38:07Z",
      "updated_at": "2020-04-16T18:55:08Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "**Describe the bug**\r\nThe label event is not implemented in the github API\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to '...'\r\n2. Click on '....'\r\n3. Scroll down to '....'\r\n4. See error\r\n\r\n**Expected behavior**\r\nA label event should be implemented following https://developer.github.com/v3/activity/events/types/#labelevent\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: [e.g. iOS]\r\n - Browser [e.g. chrome, safari]\r\n - Version [e.g. 22]\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/727",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/727/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/727/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/727/events",
      "html_url": "https://github.com/hub4j/github-api/issues/727",
      "id": 575738080,
      "node_id": "MDU6SXNzdWU1NzU3MzgwODA=",
      "number": 727,
      "title": "Consider removing @author javadoc, document policy",
      "user": {
        "login": "bitwiseman",
        "id": 1958953,
        "node_id": "MDQ6VXNlcjE5NTg5NTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1958953?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitwiseman",
        "html_url": "https://github.com/bitwiseman",
        "followers_url": "https://api.github.com/users/bitwiseman/followers",
        "following_url": "https://api.github.com/users/bitwiseman/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitwiseman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitwiseman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitwiseman/subscriptions",
        "organizations_url": "https://api.github.com/users/bitwiseman/orgs",
        "repos_url": "https://api.github.com/users/bitwiseman/repos",
        "events_url": "https://api.github.com/users/bitwiseman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitwiseman/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 2070644911,
          "node_id": "MDU6TGFiZWwyMDcwNjQ0OTEx",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/documentation",
          "name": "documentation",
          "color": "6ee5cb",
          "default": true,
          "description": ""
        },
        {
          "id": 1664647346,
          "node_id": "MDU6TGFiZWwxNjY0NjQ3MzQ2",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/task",
          "name": "task",
          "color": "bfdadc",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 6,
      "created_at": "2020-03-04T20:15:52Z",
      "updated_at": "2020-05-21T19:55:37Z",
      "closed_at": null,
      "author_association": "COLLABORATOR",
      "active_lock_reason": null,
      "body": "I saw a number of projects making the choice to remove `@author` tags from their JavaDocs (https://github.com/checkstyle/checkstyle/issues/5738 for example).  \r\n\r\nI thought it was a good choice - this is a collaborative project that has been going for years with over a hundred contributors and very few classes have only one contributor. \r\n\r\nI removed all the `@author` javadoc tags thinking this was not a controversial choice.  I didn't even send it through PR.  That was wrong to do.   \r\n\r\n@PauloMigAlmeida asked that we bring them back and I realized that I had not given the change sufficient consideration.   I reverted the change in https://github.com/github-api/github-api/commit/a42305dd59f0be426f0c9091748e947f60d76bcd  so that we can discuss and do this right.\r\n\r\nPaulo, could you talk about reasons to keep them?  Perhaps we can address your concerns with something other that this particular JavaDoc tag? ",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/702",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/702/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/702/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/702/events",
      "html_url": "https://github.com/hub4j/github-api/issues/702",
      "id": 566517856,
      "node_id": "MDU6SXNzdWU1NjY1MTc4NTY=",
      "number": 702,
      "title": "Rename `PagedIterable` and `PagedIterator` to `PageContentsIterable` and `PageContentsIterator`",
      "user": {
        "login": "bitwiseman",
        "id": 1958953,
        "node_id": "MDQ6VXNlcjE5NTg5NTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1958953?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitwiseman",
        "html_url": "https://github.com/bitwiseman",
        "followers_url": "https://api.github.com/users/bitwiseman/followers",
        "following_url": "https://api.github.com/users/bitwiseman/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitwiseman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitwiseman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitwiseman/subscriptions",
        "organizations_url": "https://api.github.com/users/bitwiseman/orgs",
        "repos_url": "https://api.github.com/users/bitwiseman/repos",
        "events_url": "https://api.github.com/users/bitwiseman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitwiseman/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1780165359,
          "node_id": "MDU6TGFiZWwxNzgwMTY1MzU5",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/breaking%20change",
          "name": "breaking change",
          "color": "b60205",
          "default": false,
          "description": ""
        },
        {
          "id": 1664647346,
          "node_id": "MDU6TGFiZWwxNjY0NjQ3MzQ2",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/task",
          "name": "task",
          "color": "bfdadc",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-02-17T21:07:31Z",
      "updated_at": "2020-02-17T21:09:48Z",
      "closed_at": null,
      "author_association": "COLLABORATOR",
      "active_lock_reason": null,
      "body": "This can be partially completed in a non-breaking way by moving the implementation to `PageContentsIterable` and having `PagedIterable` inherit from it.  But ultimately it will require API changes. ",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/700",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/700/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/700/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/700/events",
      "html_url": "https://github.com/hub4j/github-api/issues/700",
      "id": 566056369,
      "node_id": "MDU6SXNzdWU1NjYwNTYzNjk=",
      "number": 700,
      "title": "Finish moving all full URL setting to `setRawUrlPath` and change `withUrlPath` to not require starting `/`",
      "user": {
        "login": "bitwiseman",
        "id": 1958953,
        "node_id": "MDQ6VXNlcjE5NTg5NTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1958953?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitwiseman",
        "html_url": "https://github.com/bitwiseman",
        "followers_url": "https://api.github.com/users/bitwiseman/followers",
        "following_url": "https://api.github.com/users/bitwiseman/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitwiseman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitwiseman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitwiseman/subscriptions",
        "organizations_url": "https://api.github.com/users/bitwiseman/orgs",
        "repos_url": "https://api.github.com/users/bitwiseman/repos",
        "events_url": "https://api.github.com/users/bitwiseman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitwiseman/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1664647346,
          "node_id": "MDU6TGFiZWwxNjY0NjQ3MzQ2",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/task",
          "name": "task",
          "color": "bfdadc",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-02-17T04:58:21Z",
      "updated_at": "2020-02-21T23:57:37Z",
      "closed_at": null,
      "author_association": "COLLABORATOR",
      "active_lock_reason": null,
      "body": "https://github.com/github-api/github-api/pull/697#discussion_r379982558\r\n\r\nThis will require looking at each call to `withUrlPath` to determine if it is passing a tail URL (starting with \"/\") or passing a full url (starting with `http`).  \r\n\r\nOh, look here's one: \r\nhttps://github.com/github-api/github-api/blob/ff3136df7069d22d937daa8f2cddc357c777e07e/src/main/java/org/kohsuke/github/GHBranch.java#L104\r\n\r\nThere more in that class as well, but there are no tests for a number of those methods.  \r\n\r\nSo, each case of this needs a test written to show it works and then change to use `setRawUrlPath`.  Finally, when we should block `withUrlPath` from accepting full urls.  ",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/699",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/699/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/699/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/699/events",
      "html_url": "https://github.com/hub4j/github-api/issues/699",
      "id": 566052912,
      "node_id": "MDU6SXNzdWU1NjYwNTI5MTI=",
      "number": 699,
      "title": "Remove any unneeded `with` methods from `Requester`",
      "user": {
        "login": "bitwiseman",
        "id": 1958953,
        "node_id": "MDQ6VXNlcjE5NTg5NTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1958953?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitwiseman",
        "html_url": "https://github.com/bitwiseman",
        "followers_url": "https://api.github.com/users/bitwiseman/followers",
        "following_url": "https://api.github.com/users/bitwiseman/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitwiseman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitwiseman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitwiseman/subscriptions",
        "organizations_url": "https://api.github.com/users/bitwiseman/orgs",
        "repos_url": "https://api.github.com/users/bitwiseman/repos",
        "events_url": "https://api.github.com/users/bitwiseman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitwiseman/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1664647346,
          "node_id": "MDU6TGFiZWwxNjY0NjQ3MzQ2",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/task",
          "name": "task",
          "color": "bfdadc",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-02-17T04:45:34Z",
      "updated_at": "2020-02-23T03:17:33Z",
      "closed_at": null,
      "author_association": "COLLABORATOR",
      "active_lock_reason": null,
      "body": "From https://github.com/github-api/github-api/pull/697#discussion_r379932880\r\n",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/689",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/689/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/689/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/689/events",
      "html_url": "https://github.com/hub4j/github-api/issues/689",
      "id": 557302663,
      "node_id": "MDU6SXNzdWU1NTczMDI2NjM=",
      "number": 689,
      "title": "Cache corruption fix from #669 not working on Windows",
      "user": {
        "login": "bitwiseman",
        "id": 1958953,
        "node_id": "MDQ6VXNlcjE5NTg5NTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1958953?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitwiseman",
        "html_url": "https://github.com/bitwiseman",
        "followers_url": "https://api.github.com/users/bitwiseman/followers",
        "following_url": "https://api.github.com/users/bitwiseman/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitwiseman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitwiseman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitwiseman/subscriptions",
        "organizations_url": "https://api.github.com/users/bitwiseman/orgs",
        "repos_url": "https://api.github.com/users/bitwiseman/repos",
        "events_url": "https://api.github.com/users/bitwiseman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitwiseman/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 265902919,
          "node_id": "MDU6TGFiZWwyNjU5MDI5MTk=",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/bug",
          "name": "bug",
          "color": "e11d21",
          "default": true,
          "description": null
        },
        {
          "id": 1686290078,
          "node_id": "MDU6TGFiZWwxNjg2MjkwMDc4",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/external",
          "name": "external",
          "color": "a0a0a0",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 2,
      "created_at": "2020-01-30T06:58:51Z",
      "updated_at": "2020-06-07T19:52:27Z",
      "closed_at": null,
      "author_association": "COLLABORATOR",
      "active_lock_reason": null,
      "body": "The work around for #669 isn't working on Windows.  It appears this may be a bug in Okhttp caching on windows, but it is unclear.   https://github.com/github-api/github-api/commit/967512629821b706e8d06ef9b3e57061f397d073",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/681",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/681/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/681/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/681/events",
      "html_url": "https://github.com/hub4j/github-api/issues/681",
      "id": 555087416,
      "node_id": "MDU6SXNzdWU1NTUwODc0MTY=",
      "number": 681,
      "title": "GHPullRequest for more than one Repo",
      "user": {
        "login": "namanbada0606",
        "id": 49596631,
        "node_id": "MDQ6VXNlcjQ5NTk2NjMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/49596631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/namanbada0606",
        "html_url": "https://github.com/namanbada0606",
        "followers_url": "https://api.github.com/users/namanbada0606/followers",
        "following_url": "https://api.github.com/users/namanbada0606/following{/other_user}",
        "gists_url": "https://api.github.com/users/namanbada0606/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/namanbada0606/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/namanbada0606/subscriptions",
        "organizations_url": "https://api.github.com/users/namanbada0606/orgs",
        "repos_url": "https://api.github.com/users/namanbada0606/repos",
        "events_url": "https://api.github.com/users/namanbada0606/events{/privacy}",
        "received_events_url": "https://api.github.com/users/namanbada0606/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 265902955,
          "node_id": "MDU6TGFiZWwyNjU5MDI5NTU=",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/new%20feature",
          "name": "new feature",
          "color": "f4cc53",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 6,
      "created_at": "2020-01-25T13:47:20Z",
      "updated_at": "2020-01-28T20:48:40Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "**Describe the bug**\r\nFirstly wanted to say BIG THANK YOU for this great library, it's really my team a big way. \r\n\r\nContext:\r\nClass GHPullRequest currently handles for one repo to pull PR, how do I leverage the same for more than one repo? Is this a currently limited to ONE ?  \r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n\r\nclone https://github.com/sebkur/github-cli\r\n\r\n./gradlew clean create\r\n\r\n./scripts/hubcli list-pull-requests  <repositoryName>\r\n\r\n\r\n\r\n**Expected behavior**\r\nWe should require more than one repo\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: MAC\r\n - Browser CHROME\r\n - Version 73\r\n\r\n\r\n",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/668",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/668/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/668/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/668/events",
      "html_url": "https://github.com/hub4j/github-api/issues/668",
      "id": 551035485,
      "node_id": "MDU6SXNzdWU1NTEwMzU0ODU=",
      "number": 668,
      "title": "Check performance and behavior of ReflectionToStringBuilder ",
      "user": {
        "login": "bitwiseman",
        "id": 1958953,
        "node_id": "MDQ6VXNlcjE5NTg5NTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1958953?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitwiseman",
        "html_url": "https://github.com/bitwiseman",
        "followers_url": "https://api.github.com/users/bitwiseman/followers",
        "following_url": "https://api.github.com/users/bitwiseman/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitwiseman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitwiseman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitwiseman/subscriptions",
        "organizations_url": "https://api.github.com/users/bitwiseman/orgs",
        "repos_url": "https://api.github.com/users/bitwiseman/repos",
        "events_url": "https://api.github.com/users/bitwiseman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitwiseman/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1664647346,
          "node_id": "MDU6TGFiZWwxNjY0NjQ3MzQ2",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/task",
          "name": "task",
          "color": "bfdadc",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-01-16T20:26:10Z",
      "updated_at": "2020-01-16T20:26:10Z",
      "closed_at": null,
      "author_association": "COLLABORATOR",
      "active_lock_reason": null,
      "body": "",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/632",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/632/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/632/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/632/events",
      "html_url": "https://github.com/hub4j/github-api/issues/632",
      "id": 532081873,
      "node_id": "MDU6SXNzdWU1MzIwODE4NzM=",
      "number": 632,
      "title": "Branch Protection Pattern",
      "user": {
        "login": "inidona",
        "id": 2903923,
        "node_id": "MDQ6VXNlcjI5MDM5MjM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2903923?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/inidona",
        "html_url": "https://github.com/inidona",
        "followers_url": "https://api.github.com/users/inidona/followers",
        "following_url": "https://api.github.com/users/inidona/following{/other_user}",
        "gists_url": "https://api.github.com/users/inidona/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/inidona/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/inidona/subscriptions",
        "organizations_url": "https://api.github.com/users/inidona/orgs",
        "repos_url": "https://api.github.com/users/inidona/repos",
        "events_url": "https://api.github.com/users/inidona/events{/privacy}",
        "received_events_url": "https://api.github.com/users/inidona/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1662551322,
          "node_id": "MDU6TGFiZWwxNjYyNTUxMzIy",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/enhancement",
          "name": "enhancement",
          "color": "0e8a16",
          "default": true,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2019-12-03T15:51:10Z",
      "updated_at": "2019-12-03T16:05:47Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "In GitHub UI i can create an Branch Protection with an Pattern.\r\nSo the branches not exists in this moment in the repo and will be protected after it created.\r\n\r\ni studied your api but found only the protection of real existing branches.\r\n\r\ni am right, and if is it possible to enhance the api ? Mayby with an String contructor in GHBranchProtectionBuilder ?\r\n\r\nthanks\r\nandreas",
      "performed_via_github_app": null,
      "score": 1
    }
  ]
}