[
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/comments/652951538",
    "html_url": "https://github.com/hub4j/github-api/issues/875#issuecomment-652951538",
    "issue_url": "https://api.github.com/repos/hub4j/github-api/issues/875",
    "id": 652951538,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1Mjk1MTUzOA==",
    "user": {
      "login": "jtnord",
      "id": 494726,
      "node_id": "MDQ6VXNlcjQ5NDcyNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/494726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtnord",
      "html_url": "https://github.com/jtnord",
      "followers_url": "https://api.github.com/users/jtnord/followers",
      "following_url": "https://api.github.com/users/jtnord/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtnord/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtnord/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtnord/subscriptions",
      "organizations_url": "https://api.github.com/users/jtnord/orgs",
      "repos_url": "https://api.github.com/users/jtnord/repos",
      "events_url": "https://api.github.com/users/jtnord/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtnord/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-02T11:29:40Z",
    "updated_at": "2020-07-02T11:39:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "`target` is the underlying location...\r\nhttps://developer.github.com/v3/repos/contents/#response-if-content-is-a-symlink",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/comments/653068000",
    "html_url": "https://github.com/hub4j/github-api/issues/875#issuecomment-653068000",
    "issue_url": "https://api.github.com/repos/hub4j/github-api/issues/875",
    "id": 653068000,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzA2ODAwMA==",
    "user": {
      "login": "jtnord",
      "id": 494726,
      "node_id": "MDQ6VXNlcjQ5NDcyNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/494726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtnord",
      "html_url": "https://github.com/jtnord",
      "followers_url": "https://api.github.com/users/jtnord/followers",
      "following_url": "https://api.github.com/users/jtnord/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtnord/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtnord/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtnord/subscriptions",
      "organizations_url": "https://api.github.com/users/jtnord/orgs",
      "repos_url": "https://api.github.com/users/jtnord/repos",
      "events_url": "https://api.github.com/users/jtnord/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtnord/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-02T15:16:50Z",
    "updated_at": "2020-07-02T15:16:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "note: if the symlink is to a file and in the same directory then `getContent` works.  if the path contains a symlinked directory then it does not.\r\n\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/comments/653246745",
    "html_url": "https://github.com/hub4j/github-api/issues/875#issuecomment-653246745",
    "issue_url": "https://api.github.com/repos/hub4j/github-api/issues/875",
    "id": 653246745,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzI0Njc0NQ==",
    "user": {
      "login": "bitwiseman",
      "id": 1958953,
      "node_id": "MDQ6VXNlcjE5NTg5NTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1958953?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bitwiseman",
      "html_url": "https://github.com/bitwiseman",
      "followers_url": "https://api.github.com/users/bitwiseman/followers",
      "following_url": "https://api.github.com/users/bitwiseman/following{/other_user}",
      "gists_url": "https://api.github.com/users/bitwiseman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bitwiseman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bitwiseman/subscriptions",
      "organizations_url": "https://api.github.com/users/bitwiseman/orgs",
      "repos_url": "https://api.github.com/users/bitwiseman/repos",
      "events_url": "https://api.github.com/users/bitwiseman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bitwiseman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-02T22:32:41Z",
    "updated_at": "2020-07-02T22:32:41Z",
    "author_association": "COLLABORATOR",
    "body": "The problem here is that the path `ghcontent-ro/a-symlink-to-a-dir/entry-one` does not actually exist in the repo. It can be reached by traversing the symlink, but as far as git and github are concerned, the path is not there.  \r\n\r\nThe behavior of the API for [getting repository contents](https://docs.github.com/en/rest/reference/repos#get-repository-content) is kind of all over the place:\r\n* If the path you request points to a file, you get that file's record. \r\n* If the path you request points to a directory, you get an ARRAY of file records for the files in that directory.  It would be much better to get the directory's record with a \"children\" field containing an array\r\n* If the path you request points to a symlink AND the target is a file, you get the target file's record.  \r\n* If the path you request points to a symlink AND the target is not a file, you get the symlink's record.  \r\n\r\nThe only way to use directory symlinks would be to take the path and traverse it one element at a time looking for symlinks and changing the path to request the targeted path.  That would result in one request per path element which is painfully costly.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/comments/653254535",
    "html_url": "https://github.com/hub4j/github-api/issues/875#issuecomment-653254535",
    "issue_url": "https://api.github.com/repos/hub4j/github-api/issues/875",
    "id": 653254535,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzI1NDUzNQ==",
    "user": {
      "login": "bitwiseman",
      "id": 1958953,
      "node_id": "MDQ6VXNlcjE5NTg5NTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1958953?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bitwiseman",
      "html_url": "https://github.com/bitwiseman",
      "followers_url": "https://api.github.com/users/bitwiseman/followers",
      "following_url": "https://api.github.com/users/bitwiseman/following{/other_user}",
      "gists_url": "https://api.github.com/users/bitwiseman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bitwiseman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bitwiseman/subscriptions",
      "organizations_url": "https://api.github.com/users/bitwiseman/orgs",
      "repos_url": "https://api.github.com/users/bitwiseman/repos",
      "events_url": "https://api.github.com/users/bitwiseman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bitwiseman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-02T23:06:10Z",
    "updated_at": "2020-07-02T23:06:10Z",
    "author_association": "COLLABORATOR",
    "body": "Thinking about the least costly way to do this: \r\n1. Request a path.  IF success, return.\r\n2. If 404: \r\n  a. If parent directory is `\\`, return 404.\r\n  b. Request the parent directory.\r\n  c. If parent directory is symlink, replace with target and goto 1. \r\n  c. If parent directory is directory, return 404\r\n  c. If 404, set parent directory to parent of current parent, goto 2.a. \r\n\r\nThis could be done in a bisecting fashion to keep the number of requests down. Even so, the cost for any 404 would go from one request to `log(n)` requests - there's no way to tell if the 404 is real or caused by a symlink. That would mean every file content 404 would suddenly start causing multiple requests.\r\n\r\nWe could make it an optional behavior, maybe a new API method.  \r\n\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/comments/653255935",
    "html_url": "https://github.com/hub4j/github-api/issues/875#issuecomment-653255935",
    "issue_url": "https://api.github.com/repos/hub4j/github-api/issues/875",
    "id": 653255935,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzI1NTkzNQ==",
    "user": {
      "login": "bitwiseman",
      "id": 1958953,
      "node_id": "MDQ6VXNlcjE5NTg5NTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1958953?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bitwiseman",
      "html_url": "https://github.com/bitwiseman",
      "followers_url": "https://api.github.com/users/bitwiseman/followers",
      "following_url": "https://api.github.com/users/bitwiseman/following{/other_user}",
      "gists_url": "https://api.github.com/users/bitwiseman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bitwiseman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bitwiseman/subscriptions",
      "organizations_url": "https://api.github.com/users/bitwiseman/orgs",
      "repos_url": "https://api.github.com/users/bitwiseman/repos",
      "events_url": "https://api.github.com/users/bitwiseman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bitwiseman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-02T23:12:44Z",
    "updated_at": "2020-07-02T23:24:19Z",
    "author_association": "COLLABORATOR",
    "body": "@jtnord\r\n\r\nHm, doing a bit more searching, I see there's a \"[trees API](https://developer.github.com/v3/git/trees/#get-a-tree)\".  It doesn't traverse directory symlinks either, but it could be used to find symlinks with fewer requests. It has a `recursive` option that would let us quickly get a flat list of the directory tree.  \r\n\r\nhttps://api.github.com/repos/hub4j-test-org/GHContentIntegrationTest/git/trees/cc7e26f850339a8e8427fa2d983ca6006ad1a78c?recursive=1\r\n\r\nThat query can return a large number of records which might make it slow.  It may truncate if there are too many.  Truncation could be handled by querying again inside a subtree.  Looks like symlinks are `blob`s just like files, but they have a different `mode`. \r\n\r\nThis would reduce the added cost for general 404's to a much smaller number of querie, probably only 1 or 2 in most cases. That wouldn't be so bad.  Traversing to symlinks would be the same cost - an initial 404 followed by a remapping. The tree could be cached on the `GHRepository` instance maybe?\r\n\r\nStill probably not something we'd want turned on by default, but I'm open to discussion.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/comments/653471726",
    "html_url": "https://github.com/hub4j/github-api/issues/875#issuecomment-653471726",
    "issue_url": "https://api.github.com/repos/hub4j/github-api/issues/875",
    "id": 653471726,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzQ3MTcyNg==",
    "user": {
      "login": "jtnord",
      "id": 494726,
      "node_id": "MDQ6VXNlcjQ5NDcyNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/494726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtnord",
      "html_url": "https://github.com/jtnord",
      "followers_url": "https://api.github.com/users/jtnord/followers",
      "following_url": "https://api.github.com/users/jtnord/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtnord/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtnord/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtnord/subscriptions",
      "organizations_url": "https://api.github.com/users/jtnord/orgs",
      "repos_url": "https://api.github.com/users/jtnord/repos",
      "events_url": "https://api.github.com/users/jtnord/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtnord/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-03T10:19:00Z",
    "updated_at": "2020-07-03T10:19:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "> If the path you request points to a symlink AND the target is a file, you get the target file's record.\r\n\r\niff the target file exists within the bounds of the repo, otherwise the symlink record :)\r\n\r\nI concur that doing this by default in `GHRepository.getFileContent(String)` is probably not the best use of API token calls due to rate limiting.  but I think maybe another function that callers can use `GHRepository.getFileContent(String path, boolean traverseSymLinks)` could be useful (and make the former call the latter with a default `false` maybe set by a global static/system property)?\r\n\r\n\r\n\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/comments/654431275",
    "html_url": "https://github.com/hub4j/github-api/issues/875#issuecomment-654431275",
    "issue_url": "https://api.github.com/repos/hub4j/github-api/issues/875",
    "id": 654431275,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NDQzMTI3NQ==",
    "user": {
      "login": "bitwiseman",
      "id": 1958953,
      "node_id": "MDQ6VXNlcjE5NTg5NTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1958953?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bitwiseman",
      "html_url": "https://github.com/bitwiseman",
      "followers_url": "https://api.github.com/users/bitwiseman/followers",
      "following_url": "https://api.github.com/users/bitwiseman/following{/other_user}",
      "gists_url": "https://api.github.com/users/bitwiseman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bitwiseman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bitwiseman/subscriptions",
      "organizations_url": "https://api.github.com/users/bitwiseman/orgs",
      "repos_url": "https://api.github.com/users/bitwiseman/repos",
      "events_url": "https://api.github.com/users/bitwiseman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bitwiseman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-06T19:46:52Z",
    "updated_at": "2020-07-06T19:46:52Z",
    "author_association": "COLLABORATOR",
    "body": "@jtnord \r\nThat sounds reasonable.  \r\n\r\nAlso, instead of caching at the object level, we could depend on okhttp caching to reduce rate limit usage while also accurately updating if the tree updates. ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/comments/655072320",
    "html_url": "https://github.com/hub4j/github-api/issues/875#issuecomment-655072320",
    "issue_url": "https://api.github.com/repos/hub4j/github-api/issues/875",
    "id": 655072320,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NTA3MjMyMA==",
    "user": {
      "login": "bitwiseman",
      "id": 1958953,
      "node_id": "MDQ6VXNlcjE5NTg5NTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1958953?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bitwiseman",
      "html_url": "https://github.com/bitwiseman",
      "followers_url": "https://api.github.com/users/bitwiseman/followers",
      "following_url": "https://api.github.com/users/bitwiseman/following{/other_user}",
      "gists_url": "https://api.github.com/users/bitwiseman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bitwiseman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bitwiseman/subscriptions",
      "organizations_url": "https://api.github.com/users/bitwiseman/orgs",
      "repos_url": "https://api.github.com/users/bitwiseman/repos",
      "events_url": "https://api.github.com/users/bitwiseman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bitwiseman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-07T19:22:29Z",
    "updated_at": "2020-07-07T19:22:29Z",
    "author_association": "COLLABORATOR",
    "body": "See #878 for some related discussion around GHTree interactions.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/comments/804129752",
    "html_url": "https://github.com/hub4j/github-api/issues/875#issuecomment-804129752",
    "issue_url": "https://api.github.com/repos/hub4j/github-api/issues/875",
    "id": 804129752,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNDEyOTc1Mg==",
    "user": {
      "login": "janosh",
      "id": 30958850,
      "node_id": "MDQ6VXNlcjMwOTU4ODUw",
      "avatar_url": "https://avatars.githubusercontent.com/u/30958850?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janosh",
      "html_url": "https://github.com/janosh",
      "followers_url": "https://api.github.com/users/janosh/followers",
      "following_url": "https://api.github.com/users/janosh/following{/other_user}",
      "gists_url": "https://api.github.com/users/janosh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janosh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janosh/subscriptions",
      "organizations_url": "https://api.github.com/users/janosh/orgs",
      "repos_url": "https://api.github.com/users/janosh/repos",
      "events_url": "https://api.github.com/users/janosh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janosh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-22T14:59:21Z",
    "updated_at": "2021-03-22T14:59:21Z",
    "author_association": "NONE",
    "body": "Sorry for the bother but perhaps you can help me out here. Do you guys know if symlinks can be made to work on GitHub?\r\n\r\nThat is, could they forward resource requests to `raw.githubusercontent.com` to the symlink target? I.e. if I have a repo with a folder called `images` as well as a symlink called `logos` pointing to `images` and some images with unchangeable `src`:\r\n\r\n```html\r\n<img src=\"https://raw.githubusercontent.com/<user>/<repo>/main/logos/<some-file>.jpg\" />\r\n```\r\n\r\nCurrently the URL returns \"404 not found\".  Is it possible to return the symlinked file?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/comments/804235727",
    "html_url": "https://github.com/hub4j/github-api/issues/875#issuecomment-804235727",
    "issue_url": "https://api.github.com/repos/hub4j/github-api/issues/875",
    "id": 804235727,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNDIzNTcyNw==",
    "user": {
      "login": "bitwiseman",
      "id": 1958953,
      "node_id": "MDQ6VXNlcjE5NTg5NTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1958953?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bitwiseman",
      "html_url": "https://github.com/bitwiseman",
      "followers_url": "https://api.github.com/users/bitwiseman/followers",
      "following_url": "https://api.github.com/users/bitwiseman/following{/other_user}",
      "gists_url": "https://api.github.com/users/bitwiseman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bitwiseman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bitwiseman/subscriptions",
      "organizations_url": "https://api.github.com/users/bitwiseman/orgs",
      "repos_url": "https://api.github.com/users/bitwiseman/repos",
      "events_url": "https://api.github.com/users/bitwiseman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bitwiseman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-22T17:06:10Z",
    "updated_at": "2021-03-22T17:06:10Z",
    "author_association": "COLLABORATOR",
    "body": "@janosh \r\nBased on the discussion above, yes, it can be done, but it would need to be separate method/option because the behavior requires multiple API calls. \r\n\r\nPRs welcome. I'd be happy to answer any questions you have for how to implement the solution suggested above. ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hub4j/github-api/issues/comments/804712019",
    "html_url": "https://github.com/hub4j/github-api/issues/875#issuecomment-804712019",
    "issue_url": "https://api.github.com/repos/hub4j/github-api/issues/875",
    "id": 804712019,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNDcxMjAxOQ==",
    "user": {
      "login": "janosh",
      "id": 30958850,
      "node_id": "MDQ6VXNlcjMwOTU4ODUw",
      "avatar_url": "https://avatars.githubusercontent.com/u/30958850?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janosh",
      "html_url": "https://github.com/janosh",
      "followers_url": "https://api.github.com/users/janosh/followers",
      "following_url": "https://api.github.com/users/janosh/following{/other_user}",
      "gists_url": "https://api.github.com/users/janosh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janosh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janosh/subscriptions",
      "organizations_url": "https://api.github.com/users/janosh/orgs",
      "repos_url": "https://api.github.com/users/janosh/repos",
      "events_url": "https://api.github.com/users/janosh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janosh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-23T08:22:37Z",
    "updated_at": "2021-03-23T08:22:37Z",
    "author_association": "NONE",
    "body": "Sorry, I'm not a Java dev. I contacted GitHub support about the possibility of making this symlink forwarding native functionality. Will report back if anything comes of that.",
    "performed_via_github_app": null
  }
]