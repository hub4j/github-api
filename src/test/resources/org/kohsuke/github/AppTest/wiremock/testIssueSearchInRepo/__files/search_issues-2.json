{
  "total_count": 79,
  "incomplete_results": false,
  "items": [
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/1191",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/1191/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/1191/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/1191/events",
      "html_url": "https://github.com/hub4j/github-api/issues/1191",
      "id": 932007585,
      "node_id": "MDU6SXNzdWU5MzIwMDc1ODU=",
      "number": 1191,
      "title": "Fix GHContentUpdatedResponse to return GitCommit instead of GHCommit",
      "user": {
        "login": "bitwiseman",
        "id": 1958953,
        "node_id": "MDQ6VXNlcjE5NTg5NTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1958953?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitwiseman",
        "html_url": "https://github.com/bitwiseman",
        "followers_url": "https://api.github.com/users/bitwiseman/followers",
        "following_url": "https://api.github.com/users/bitwiseman/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitwiseman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitwiseman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitwiseman/subscriptions",
        "organizations_url": "https://api.github.com/users/bitwiseman/orgs",
        "repos_url": "https://api.github.com/users/bitwiseman/repos",
        "events_url": "https://api.github.com/users/bitwiseman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitwiseman/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 265902919,
          "node_id": "MDU6TGFiZWwyNjU5MDI5MTk=",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/bug",
          "name": "bug",
          "color": "e11d21",
          "default": true,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-06-28T21:24:35Z",
      "updated_at": "2021-06-29T20:27:12Z",
      "closed_at": null,
      "author_association": "COLLABORATOR",
      "active_lock_reason": null,
      "body": "In #1185, @takezoe discovered that the date returned for `GHContentUpdatedResponse.commit` does not match up with `GHCommit`.  It most closely matches `GHCommit.ShortInfo` but even that is not truly accurate.  \r\n\r\nIn #1190 , I figured out that while this a bad the functionality is not completely broken. The `sha` and the `url` match up and that is enough for the `GHCommit` to populate the missing data and continue on.  This is still not great because it results in additional requests where there probably shouldn't be any. \r\n\r\n After a bit of digging in the docs, I found an endpoint that [gets a Git Commit](https://docs.github.com/en/rest/reference/git#get-a-commit). What we should do is create a new class call `GitCommit` , matching the structure of this endpoint and then have other classes like `GHCommit.ShortInfo` extend that class. \r\n\r\nFixing this will involve creating a bridge method for `getCommit()` that continues to return a working `GHCommit` while the new official API method returns a `GitCommit`.  As part of this, we'll need to add a reflection based call to the `GHCommit`-returning method and verify that instance still works.\r\n",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/1181",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/1181/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/1181/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/1181/events",
      "html_url": "https://github.com/hub4j/github-api/issues/1181",
      "id": 916818327,
      "node_id": "MDU6SXNzdWU5MTY4MTgzMjc=",
      "number": 1181,
      "title": "Create a new implementation for issue events that aligns with webhook event design ",
      "user": {
        "login": "bitwiseman",
        "id": 1958953,
        "node_id": "MDQ6VXNlcjE5NTg5NTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1958953?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitwiseman",
        "html_url": "https://github.com/bitwiseman",
        "followers_url": "https://api.github.com/users/bitwiseman/followers",
        "following_url": "https://api.github.com/users/bitwiseman/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitwiseman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitwiseman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitwiseman/subscriptions",
        "organizations_url": "https://api.github.com/users/bitwiseman/orgs",
        "repos_url": "https://api.github.com/users/bitwiseman/repos",
        "events_url": "https://api.github.com/users/bitwiseman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitwiseman/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1780165359,
          "node_id": "MDU6TGFiZWwxNzgwMTY1MzU5",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/breaking%20change",
          "name": "breaking change",
          "color": "b60205",
          "default": false,
          "description": ""
        },
        {
          "id": 265902919,
          "node_id": "MDU6TGFiZWwyNjU5MDI5MTk=",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/bug",
          "name": "bug",
          "color": "e11d21",
          "default": true,
          "description": null
        },
        {
          "id": 1662551322,
          "node_id": "MDU6TGFiZWwxNjYyNTUxMzIy",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/enhancement",
          "name": "enhancement",
          "color": "0e8a16",
          "default": true,
          "description": ""
        },
        {
          "id": 1664647346,
          "node_id": "MDU6TGFiZWwxNjY0NjQ3MzQ2",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/task",
          "name": "task",
          "color": "bfdadc",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-06-10T02:14:49Z",
      "updated_at": "2021-07-26T19:19:51Z",
      "closed_at": null,
      "author_association": "COLLABORATOR",
      "active_lock_reason": null,
      "body": "Found by #1175 \r\nRelated #1199 \r\n\r\nIssue events are similar to webhook events: there are a set of common attributes and then different events types have different additional fields.\r\n\r\nSee:\r\n* https://docs.github.com/en/developers/webhooks-and-events/events/issue-event-types#issue-event-object-common-properties\r\n* https://github.com/hub4j/github-api/blob/main/src/main/java/org/kohsuke/github/GHEventPayload.java#L22-L24\r\n\r\nHowever, `GHIssueEvent` is implemented completely differently from `GHEvent` and `GHEventPayload`.  We should have a design that is similar instead.   \r\n\r\nDoing this is likely either a breaking change or at very least an addition of a new API and deprecation of the current classes. \r\n\r\n\r\n",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/1179",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/1179/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/1179/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/1179/events",
      "html_url": "https://github.com/hub4j/github-api/issues/1179",
      "id": 916680790,
      "node_id": "MDU6SXNzdWU5MTY2ODA3OTA=",
      "number": 1179,
      "title": "Consumers of Preview APIs should have to explicitly enable the Previews they want",
      "user": {
        "login": "bitwiseman",
        "id": 1958953,
        "node_id": "MDQ6VXNlcjE5NTg5NTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1958953?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitwiseman",
        "html_url": "https://github.com/bitwiseman",
        "followers_url": "https://api.github.com/users/bitwiseman/followers",
        "following_url": "https://api.github.com/users/bitwiseman/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitwiseman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitwiseman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitwiseman/subscriptions",
        "organizations_url": "https://api.github.com/users/bitwiseman/orgs",
        "repos_url": "https://api.github.com/users/bitwiseman/repos",
        "events_url": "https://api.github.com/users/bitwiseman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitwiseman/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 265902955,
          "node_id": "MDU6TGFiZWwyNjU5MDI5NTU=",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/new%20feature",
          "name": "new feature",
          "color": "f4cc53",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-06-09T21:17:33Z",
      "updated_at": "2021-06-09T21:17:41Z",
      "closed_at": null,
      "author_association": "COLLABORATOR",
      "active_lock_reason": null,
      "body": "Related #1017 #1003\r\n\r\nCurrently, we mark preview APIs as deprecated.  Instead we should require consumers to enable the specific Preview endpoints they want and by doing so they accept that those methods may change.  \r\n\r\nWe can do this now.  In v1, we can log warnings the first time a Preview endpoint is used without being enabled, but otherwise do not change behavior.  For v2 we'll actually fail if a preview is used when it hasn't been enabled. ",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/1154",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/1154/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/1154/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/1154/events",
      "html_url": "https://github.com/hub4j/github-api/issues/1154",
      "id": 900362367,
      "node_id": "MDU6SXNzdWU5MDAzNjIzNjc=",
      "number": 1154,
      "title": "allow including results from forks",
      "user": {
        "login": "maxandersen",
        "id": 54129,
        "node_id": "MDQ6VXNlcjU0MTI5",
        "avatar_url": "https://avatars.githubusercontent.com/u/54129?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maxandersen",
        "html_url": "https://github.com/maxandersen",
        "followers_url": "https://api.github.com/users/maxandersen/followers",
        "following_url": "https://api.github.com/users/maxandersen/following{/other_user}",
        "gists_url": "https://api.github.com/users/maxandersen/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/maxandersen/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/maxandersen/subscriptions",
        "organizations_url": "https://api.github.com/users/maxandersen/orgs",
        "repos_url": "https://api.github.com/users/maxandersen/repos",
        "events_url": "https://api.github.com/users/maxandersen/events{/privacy}",
        "received_events_url": "https://api.github.com/users/maxandersen/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 265902919,
          "node_id": "MDU6TGFiZWwyNjU5MDI5MTk=",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/bug",
          "name": "bug",
          "color": "e11d21",
          "default": true,
          "description": null
        },
        {
          "id": 1991401619,
          "node_id": "MDU6TGFiZWwxOTkxNDAxNjE5",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/good%20first%20issue",
          "name": "good first issue",
          "color": "00FF00",
          "default": true,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 5,
      "created_at": "2021-05-25T06:58:09Z",
      "updated_at": "2021-06-02T23:18:08Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "**Describe the bug**\r\nsearchContent() does not seem to have a flag/method to enable searching content in forks, i.e. what corresponds to choosing \"Fork\" in the \"Filters\" section when searching, i.e.:\r\n\r\nhttps://github.com/search?q=topic%3Ajbang-appstore+fork%3Atrue&type=repositories\r\n\r\n**Expected behavior**\r\nAbility to have search include results in forks.\r\n",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/1143",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/1143/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/1143/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/1143/events",
      "html_url": "https://github.com/hub4j/github-api/issues/1143",
      "id": 895781703,
      "node_id": "MDU6SXNzdWU4OTU3ODE3MDM=",
      "number": 1143,
      "title": "Undeprecate machine-man preview API calls",
      "user": {
        "login": "gadams00",
        "id": 2694081,
        "node_id": "MDQ6VXNlcjI2OTQwODE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2694081?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gadams00",
        "html_url": "https://github.com/gadams00",
        "followers_url": "https://api.github.com/users/gadams00/followers",
        "following_url": "https://api.github.com/users/gadams00/following{/other_user}",
        "gists_url": "https://api.github.com/users/gadams00/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gadams00/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gadams00/subscriptions",
        "organizations_url": "https://api.github.com/users/gadams00/orgs",
        "repos_url": "https://api.github.com/users/gadams00/repos",
        "events_url": "https://api.github.com/users/gadams00/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gadams00/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 2139969963,
          "node_id": "MDU6TGFiZWwyMTM5OTY5OTYz",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/chore",
          "name": "chore",
          "color": "adf461",
          "default": false,
          "description": ""
        },
        {
          "id": 1662551322,
          "node_id": "MDU6TGFiZWwxNjYyNTUxMzIy",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/enhancement",
          "name": "enhancement",
          "color": "0e8a16",
          "default": true,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-05-19T19:01:40Z",
      "updated_at": "2021-06-09T21:27:16Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "https://developer.github.com/changes/2020-08-20-graduate-machine-man-and-sailor-v-previews/\r\nhttps://github.com/hub4j/github-api/blob/main/src/main/java/org/kohsuke/github/internal/Previews.java#L90 Previews.MACHINE_MAN deprecations (and preview annotations) should no longer be necessary.\r\n",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/1142",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/1142/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/1142/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/1142/events",
      "html_url": "https://github.com/hub4j/github-api/pull/1142",
      "id": 895490655,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NjQ3NzA1ODUw",
      "number": 1142,
      "title": "(feat) Support code-scanning API (Pt#1)",
      "user": {
        "login": "akashRindhe",
        "id": 14114123,
        "node_id": "MDQ6VXNlcjE0MTE0MTIz",
        "avatar_url": "https://avatars.githubusercontent.com/u/14114123?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/akashRindhe",
        "html_url": "https://github.com/akashRindhe",
        "followers_url": "https://api.github.com/users/akashRindhe/followers",
        "following_url": "https://api.github.com/users/akashRindhe/following{/other_user}",
        "gists_url": "https://api.github.com/users/akashRindhe/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/akashRindhe/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/akashRindhe/subscriptions",
        "organizations_url": "https://api.github.com/users/akashRindhe/orgs",
        "repos_url": "https://api.github.com/users/akashRindhe/repos",
        "events_url": "https://api.github.com/users/akashRindhe/events{/privacy}",
        "received_events_url": "https://api.github.com/users/akashRindhe/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 2,
      "created_at": "2021-05-19T14:06:43Z",
      "updated_at": "2021-07-13T20:47:21Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/hub4j/github-api/pulls/1142",
        "html_url": "https://github.com/hub4j/github-api/pull/1142",
        "diff_url": "https://github.com/hub4j/github-api/pull/1142.diff",
        "patch_url": "https://github.com/hub4j/github-api/pull/1142.patch"
      },
      "body": "# Description\r\n\r\nRelated issue - https://github.com/hub4j/github-api/issues/1133\r\nNew feature supporting GitHub code-scanning API. \r\n\r\nAs this is a big feature with multiple functions, breaking this into smaller PRs to reduce review effort. The functions supported in this PR are -\r\n\r\n- [Listing all code-scanning alerts for a repository](https://docs.github.com/en/rest/reference/code-scanning#list-code-scanning-alerts-for-a-repository)\r\n- [Get a code-scanning alert for a repository by its id](https://docs.github.com/en/rest/reference/code-scanning#get-a-code-scanning-alert)\r\n- [List all instances for a code-scanning alert](https://docs.github.com/en/rest/reference/code-scanning#list-instances-of-a-code-scanning-alert)\r\n\r\n",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/1140",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/1140/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/1140/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/1140/events",
      "html_url": "https://github.com/hub4j/github-api/issues/1140",
      "id": 881974654,
      "node_id": "MDU6SXNzdWU4ODE5NzQ2NTQ=",
      "number": 1140,
      "title": "stargazercount is  0 unless fetched directly",
      "user": {
        "login": "maxandersen",
        "id": 54129,
        "node_id": "MDQ6VXNlcjU0MTI5",
        "avatar_url": "https://avatars.githubusercontent.com/u/54129?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maxandersen",
        "html_url": "https://github.com/maxandersen",
        "followers_url": "https://api.github.com/users/maxandersen/followers",
        "following_url": "https://api.github.com/users/maxandersen/following{/other_user}",
        "gists_url": "https://api.github.com/users/maxandersen/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/maxandersen/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/maxandersen/subscriptions",
        "organizations_url": "https://api.github.com/users/maxandersen/orgs",
        "repos_url": "https://api.github.com/users/maxandersen/repos",
        "events_url": "https://api.github.com/users/maxandersen/events{/privacy}",
        "received_events_url": "https://api.github.com/users/maxandersen/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 265902919,
          "node_id": "MDU6TGFiZWwyNjU5MDI5MTk=",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/bug",
          "name": "bug",
          "color": "e11d21",
          "default": true,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 3,
      "created_at": "2021-05-09T08:04:50Z",
      "updated_at": "2021-05-12T03:47:13Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "**Describe the bug**\r\nUsing latest 1.128:\r\n\r\n`ghContent.getOwner().getStarGazersCount()` returns 0, but\r\n`gitHub.getRepository(ghContent.getOwner().getFullName()).getStargazersCount());` returns the proper count.\r\n\r\nProbably related to #349 and #1068 \r\n\r\n**Expected behavior**\r\nstargazer count should be fetched, throw error or return -1 or similar - anything but returning 0.\r\n\r\n",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/1138",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/1138/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/1138/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/1138/events",
      "html_url": "https://github.com/hub4j/github-api/issues/1138",
      "id": 880034392,
      "node_id": "MDU6SXNzdWU4ODAwMzQzOTI=",
      "number": 1138,
      "title": "Add request information (endpoint or GraphQL query details) to all data objects",
      "user": {
        "login": "bitwiseman",
        "id": 1958953,
        "node_id": "MDQ6VXNlcjE5NTg5NTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1958953?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitwiseman",
        "html_url": "https://github.com/bitwiseman",
        "followers_url": "https://api.github.com/users/bitwiseman/followers",
        "following_url": "https://api.github.com/users/bitwiseman/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitwiseman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitwiseman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitwiseman/subscriptions",
        "organizations_url": "https://api.github.com/users/bitwiseman/orgs",
        "repos_url": "https://api.github.com/users/bitwiseman/repos",
        "events_url": "https://api.github.com/users/bitwiseman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitwiseman/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1686292366,
          "node_id": "MDU6TGFiZWwxNjg2MjkyMzY2",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/more%20information%20needed",
          "name": "more information needed",
          "color": "9ce1ed",
          "default": false,
          "description": ""
        },
        {
          "id": 265902955,
          "node_id": "MDU6TGFiZWwyNjU5MDI5NTU=",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/new%20feature",
          "name": "new feature",
          "color": "f4cc53",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-05-08T01:05:42Z",
      "updated_at": "2021-05-09T00:41:11Z",
      "closed_at": null,
      "author_association": "COLLABORATOR",
      "active_lock_reason": null,
      "body": "Different endpoints in the REST API return different subsets of various data types.  `GHRepository` comes in any number of forms depending on what endpoint is returning it. When we implement GraphQL support this will be even more common: each query can return a different set of fields and relationships for each data type. \r\n\r\nIf we had information about the request that returned a particular record, it would be possible to predict whether a particular field has already been populated or if a refresh is needed to get that information. \r\n \r\n\r\nhttps://github.com/hub4j/github-api/pull/1136#issuecomment-834919797\r\n\r\n",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/1133",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/1133/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/1133/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/1133/events",
      "html_url": "https://github.com/hub4j/github-api/issues/1133",
      "id": 873785408,
      "node_id": "MDU6SXNzdWU4NzM3ODU0MDg=",
      "number": 1133,
      "title": "Feature request - support for code scanning",
      "user": {
        "login": "SavvasKatsuyaSawada",
        "id": 43150831,
        "node_id": "MDQ6VXNlcjQzMTUwODMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/43150831?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/SavvasKatsuyaSawada",
        "html_url": "https://github.com/SavvasKatsuyaSawada",
        "followers_url": "https://api.github.com/users/SavvasKatsuyaSawada/followers",
        "following_url": "https://api.github.com/users/SavvasKatsuyaSawada/following{/other_user}",
        "gists_url": "https://api.github.com/users/SavvasKatsuyaSawada/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/SavvasKatsuyaSawada/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/SavvasKatsuyaSawada/subscriptions",
        "organizations_url": "https://api.github.com/users/SavvasKatsuyaSawada/orgs",
        "repos_url": "https://api.github.com/users/SavvasKatsuyaSawada/repos",
        "events_url": "https://api.github.com/users/SavvasKatsuyaSawada/events{/privacy}",
        "received_events_url": "https://api.github.com/users/SavvasKatsuyaSawada/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 265902955,
          "node_id": "MDU6TGFiZWwyNjU5MDI5NTU=",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/new%20feature",
          "name": "new feature",
          "color": "f4cc53",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "akashRindhe",
        "id": 14114123,
        "node_id": "MDQ6VXNlcjE0MTE0MTIz",
        "avatar_url": "https://avatars.githubusercontent.com/u/14114123?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/akashRindhe",
        "html_url": "https://github.com/akashRindhe",
        "followers_url": "https://api.github.com/users/akashRindhe/followers",
        "following_url": "https://api.github.com/users/akashRindhe/following{/other_user}",
        "gists_url": "https://api.github.com/users/akashRindhe/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/akashRindhe/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/akashRindhe/subscriptions",
        "organizations_url": "https://api.github.com/users/akashRindhe/orgs",
        "repos_url": "https://api.github.com/users/akashRindhe/repos",
        "events_url": "https://api.github.com/users/akashRindhe/events{/privacy}",
        "received_events_url": "https://api.github.com/users/akashRindhe/received_events",
        "type": "User",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "akashRindhe",
          "id": 14114123,
          "node_id": "MDQ6VXNlcjE0MTE0MTIz",
          "avatar_url": "https://avatars.githubusercontent.com/u/14114123?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/akashRindhe",
          "html_url": "https://github.com/akashRindhe",
          "followers_url": "https://api.github.com/users/akashRindhe/followers",
          "following_url": "https://api.github.com/users/akashRindhe/following{/other_user}",
          "gists_url": "https://api.github.com/users/akashRindhe/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/akashRindhe/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/akashRindhe/subscriptions",
          "organizations_url": "https://api.github.com/users/akashRindhe/orgs",
          "repos_url": "https://api.github.com/users/akashRindhe/repos",
          "events_url": "https://api.github.com/users/akashRindhe/events{/privacy}",
          "received_events_url": "https://api.github.com/users/akashRindhe/received_events",
          "type": "User",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2021-05-01T22:45:04Z",
      "updated_at": "2021-05-16T17:16:26Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "Can you please correct me if I am wrong, but I cannot find implementation for access code scanning.\r\n\r\nI would love that the code scanning feature is supported in the library.\r\nhttps://docs.github.com/en/rest/reference/code-scanning\r\n\r\nI'm using: org.kohsuke:github-api:1.128",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/1098",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/1098/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/1098/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/1098/events",
      "html_url": "https://github.com/hub4j/github-api/issues/1098",
      "id": 858301287,
      "node_id": "MDU6SXNzdWU4NTgzMDEyODc=",
      "number": 1098,
      "title": "Implement better common behavior/handler for 202 responses ",
      "user": {
        "login": "bitwiseman",
        "id": 1958953,
        "node_id": "MDQ6VXNlcjE5NTg5NTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1958953?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitwiseman",
        "html_url": "https://github.com/bitwiseman",
        "followers_url": "https://api.github.com/users/bitwiseman/followers",
        "following_url": "https://api.github.com/users/bitwiseman/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitwiseman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitwiseman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitwiseman/subscriptions",
        "organizations_url": "https://api.github.com/users/bitwiseman/orgs",
        "repos_url": "https://api.github.com/users/bitwiseman/repos",
        "events_url": "https://api.github.com/users/bitwiseman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitwiseman/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1662551322,
          "node_id": "MDU6TGFiZWwxNjYyNTUxMzIy",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/enhancement",
          "name": "enhancement",
          "color": "0e8a16",
          "default": true,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-04-14T22:07:09Z",
      "updated_at": "2021-04-14T22:07:25Z",
      "closed_at": null,
      "author_association": "COLLABORATOR",
      "active_lock_reason": null,
      "body": "See #1095 .  \r\n\r\n> We should probably implement a 202 handling behavior in GitHubClient. Currently, forking and statistics both implement their own waiting behavior. However, now that I look at it forking returns a GHRepository on success, so maybe the waiting behavior isn't correct.\r\n",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/1097",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/1097/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/1097/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/1097/events",
      "html_url": "https://github.com/hub4j/github-api/issues/1097",
      "id": 858072573,
      "node_id": "MDU6SXNzdWU4NTgwNzI1NzM=",
      "number": 1097,
      "title": "ghProjectCard.content.repository is null",
      "user": {
        "login": "JLLeitschuh",
        "id": 1323708,
        "node_id": "MDQ6VXNlcjEzMjM3MDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1323708?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JLLeitschuh",
        "html_url": "https://github.com/JLLeitschuh",
        "followers_url": "https://api.github.com/users/JLLeitschuh/followers",
        "following_url": "https://api.github.com/users/JLLeitschuh/following{/other_user}",
        "gists_url": "https://api.github.com/users/JLLeitschuh/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/JLLeitschuh/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/JLLeitschuh/subscriptions",
        "organizations_url": "https://api.github.com/users/JLLeitschuh/orgs",
        "repos_url": "https://api.github.com/users/JLLeitschuh/repos",
        "events_url": "https://api.github.com/users/JLLeitschuh/events{/privacy}",
        "received_events_url": "https://api.github.com/users/JLLeitschuh/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 265902919,
          "node_id": "MDU6TGFiZWwyNjU5MDI5MTk=",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/bug",
          "name": "bug",
          "color": "e11d21",
          "default": true,
          "description": null
        },
        {
          "id": 1991401619,
          "node_id": "MDU6TGFiZWwxOTkxNDAxNjE5",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/good%20first%20issue",
          "name": "good first issue",
          "color": "00FF00",
          "default": true,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-04-14T16:40:36Z",
      "updated_at": "2021-04-14T22:09:51Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "**Describe the bug**\r\nA clear and concise description of what the bug is.\r\n\r\nTry to call `getRepository` on an issue instantiated from a `getContent` call on a `GHProjectCard` throws an NPE.\r\n\r\n```kotlin\r\nval gitHub = GitHubBuilder.fromPropertyFile().build()\r\nprintln(gitHub.myself)\r\nval project = gitHub.getOrganization(organization).listProjects().single { it.number == projectNumber }\r\nval issues = project.listColumns().flatMap { ghProjectColumn ->\r\n    println(\"Scanning column: ${ghProjectColumn.name}\")\r\n    ghProjectColumn.listCards().mapNotNull { ghProjectCard ->\r\n        ghProjectCard.content?.run {\r\n            SecurityBoardIssue(\r\n                title = title,\r\n                dateCreated = createdAt,\r\n                column = ghProjectColumn.name,\r\n                repository = repository.name // throws NPE\r\n            )\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n**Expected behavior**\r\n\r\nShould be able to determine the repository that a project card originates from.\r\n\r\n",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/1086",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/1086/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/1086/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/1086/events",
      "html_url": "https://github.com/hub4j/github-api/issues/1086",
      "id": 854688735,
      "node_id": "MDU6SXNzdWU4NTQ2ODg3MzU=",
      "number": 1086,
      "title": "Add support for Java 11+ HttpClient",
      "user": {
        "login": "bitwiseman",
        "id": 1958953,
        "node_id": "MDQ6VXNlcjE5NTg5NTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1958953?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitwiseman",
        "html_url": "https://github.com/bitwiseman",
        "followers_url": "https://api.github.com/users/bitwiseman/followers",
        "following_url": "https://api.github.com/users/bitwiseman/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitwiseman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitwiseman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitwiseman/subscriptions",
        "organizations_url": "https://api.github.com/users/bitwiseman/orgs",
        "repos_url": "https://api.github.com/users/bitwiseman/repos",
        "events_url": "https://api.github.com/users/bitwiseman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitwiseman/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 265902955,
          "node_id": "MDU6TGFiZWwyNjU5MDI5NTU=",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/new%20feature",
          "name": "new feature",
          "color": "f4cc53",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-04-09T16:47:20Z",
      "updated_at": "2021-04-09T16:47:20Z",
      "closed_at": null,
      "author_association": "COLLABORATOR",
      "active_lock_reason": null,
      "body": "We need to maintain support for Java 8 but it would be great to be able to support/use the Java 11+ HttpClient. We should look at creating a multi-release jar or releasing a Java 11 version of this library. ",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/1085",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/1085/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/1085/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/1085/events",
      "html_url": "https://github.com/hub4j/github-api/issues/1085",
      "id": 854677495,
      "node_id": "MDU6SXNzdWU4NTQ2Nzc0OTU=",
      "number": 1085,
      "title": "Deprecate and remove all dependency on HttpConnector and HttpURLConnection",
      "user": {
        "login": "bitwiseman",
        "id": 1958953,
        "node_id": "MDQ6VXNlcjE5NTg5NTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1958953?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitwiseman",
        "html_url": "https://github.com/bitwiseman",
        "followers_url": "https://api.github.com/users/bitwiseman/followers",
        "following_url": "https://api.github.com/users/bitwiseman/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitwiseman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitwiseman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitwiseman/subscriptions",
        "organizations_url": "https://api.github.com/users/bitwiseman/orgs",
        "repos_url": "https://api.github.com/users/bitwiseman/repos",
        "events_url": "https://api.github.com/users/bitwiseman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitwiseman/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1780165359,
          "node_id": "MDU6TGFiZWwxNzgwMTY1MzU5",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/breaking%20change",
          "name": "breaking change",
          "color": "b60205",
          "default": false,
          "description": ""
        },
        {
          "id": 265902955,
          "node_id": "MDU6TGFiZWwyNjU5MDI5NTU=",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/new%20feature",
          "name": "new feature",
          "color": "f4cc53",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-04-09T16:30:15Z",
      "updated_at": "2021-04-09T16:30:51Z",
      "closed_at": null,
      "author_association": "COLLABORATOR",
      "active_lock_reason": null,
      "body": "[HttpConnector](https://github.com/hub4j/github-api/blob/master/src/main/java/org/kohsuke/github/HttpConnector.java) depends on [HttpURLConnection](https://docs.oracle.com/javase/8/docs/api/java/net/HttpURLConnection.html) an old and very crufty way of working with Http connections.  Some modern clients have even stopped supporting HttpURLConnection. This makes it harder to implement support for different http clients. \r\n\r\nWe should remove all dependency on `HttpConnector`.   `GithubClient` will become the new base class to extend in order to support new clients.  Other methods the depend on `HttpURLConnection` should switch to other ways of providing the same information. ",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/1082",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/1082/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/1082/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/1082/events",
      "html_url": "https://github.com/hub4j/github-api/issues/1082",
      "id": 853233226,
      "node_id": "MDU6SXNzdWU4NTMyMzMyMjY=",
      "number": 1082,
      "title": "Some \"GHAppInstallation\" methods need an installation token, not a JWT token",
      "user": {
        "login": "tginiotis-at-work",
        "id": 61763026,
        "node_id": "MDQ6VXNlcjYxNzYzMDI2",
        "avatar_url": "https://avatars.githubusercontent.com/u/61763026?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tginiotis-at-work",
        "html_url": "https://github.com/tginiotis-at-work",
        "followers_url": "https://api.github.com/users/tginiotis-at-work/followers",
        "following_url": "https://api.github.com/users/tginiotis-at-work/following{/other_user}",
        "gists_url": "https://api.github.com/users/tginiotis-at-work/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/tginiotis-at-work/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tginiotis-at-work/subscriptions",
        "organizations_url": "https://api.github.com/users/tginiotis-at-work/orgs",
        "repos_url": "https://api.github.com/users/tginiotis-at-work/repos",
        "events_url": "https://api.github.com/users/tginiotis-at-work/events{/privacy}",
        "received_events_url": "https://api.github.com/users/tginiotis-at-work/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1686292366,
          "node_id": "MDU6TGFiZWwxNjg2MjkyMzY2",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/more%20information%20needed",
          "name": "more information needed",
          "color": "9ce1ed",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-04-08T08:48:43Z",
      "updated_at": "2021-04-08T18:41:29Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "body": "I can explain the oddity on lines 84-87, since I originally wrote them.\r\n\r\nhttps://github.com/hub4j/github-api/blob/7c8a7ff26ebfb31aed3bfdd8f0825ea56142ba4e/src/test/java/org/kohsuke/github/AbstractGHAppInstallationTest.java#L71-L87\r\n\r\nThe `GitHub` client constructed on line 71 is using the JWT token. Which is appropriate for e.g. retrieving a list of installations for the app and other high-level information about the App.\r\n\r\nThe tests in `GHAppInstallationTest.java` are using API methods that need a client authenticated as an \"Installation\", not an \"App\" though. I.e. a GitHub client needs to be constructed with the \"installation token\", which is separate and is retrieved using the \"JWT token\".\r\n\r\nDetails from the documentation: \r\n* [Authenticating as a GitHub App](https://docs.github.com/en/developers/apps/authenticating-with-github-apps#authenticating-as-a-github-app)\r\n* [Authenticating as an installation](https://docs.github.com/en/developers/apps/authenticating-with-github-apps#authenticating-as-an-installation)\r\n\r\nSo the commented out code did exactly that - used the client with the \"JWT token\" to create an \"installation token\" and inserted it back on the `GHAppInstallation` object, so further API calls would correctly use the \"installation token\".\r\n\r\nI am pretty sure the live tests will fail now with that code commented out.\r\n\r\nAnd I remember not finding a really nice way (without using `setRoot()`) of exchanging those tokens on the `GHAppInstallation` object, so it is probably an improvement opportunity.\r\n",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/1058",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/1058/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/1058/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/1058/events",
      "html_url": "https://github.com/hub4j/github-api/issues/1058",
      "id": 832067018,
      "node_id": "MDU6SXNzdWU4MzIwNjcwMTg=",
      "number": 1058,
      "title": "Refactor GHEventPayload inner classes into top level classes in a new namespace",
      "user": {
        "login": "bitwiseman",
        "id": 1958953,
        "node_id": "MDQ6VXNlcjE5NTg5NTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1958953?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitwiseman",
        "html_url": "https://github.com/bitwiseman",
        "followers_url": "https://api.github.com/users/bitwiseman/followers",
        "following_url": "https://api.github.com/users/bitwiseman/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitwiseman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitwiseman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitwiseman/subscriptions",
        "organizations_url": "https://api.github.com/users/bitwiseman/orgs",
        "repos_url": "https://api.github.com/users/bitwiseman/repos",
        "events_url": "https://api.github.com/users/bitwiseman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitwiseman/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1664647346,
          "node_id": "MDU6TGFiZWwxNjY0NjQ3MzQ2",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/task",
          "name": "task",
          "color": "bfdadc",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 3,
      "created_at": "2021-03-15T18:11:18Z",
      "updated_at": "2021-03-18T11:11:57Z",
      "closed_at": null,
      "author_association": "COLLABORATOR",
      "active_lock_reason": null,
      "body": "[GHEventPayload](https://github.com/hub4j/github-api/blob/master/src/main/java/org/kohsuke/github/GHEventPayload.java) is one monolithic class with a bunch of inner classes for payloads. We should look at refactoring these inner classes into their own files in a separate namespace.",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/1035",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/1035/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/1035/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/1035/events",
      "html_url": "https://github.com/hub4j/github-api/issues/1035",
      "id": 806598555,
      "node_id": "MDU6SXNzdWU4MDY1OTg1NTU=",
      "number": 1035,
      "title": "Add serialization JSON output ",
      "user": {
        "login": "bitwiseman",
        "id": 1958953,
        "node_id": "MDQ6VXNlcjE5NTg5NTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1958953?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitwiseman",
        "html_url": "https://github.com/bitwiseman",
        "followers_url": "https://api.github.com/users/bitwiseman/followers",
        "following_url": "https://api.github.com/users/bitwiseman/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitwiseman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitwiseman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitwiseman/subscriptions",
        "organizations_url": "https://api.github.com/users/bitwiseman/orgs",
        "repos_url": "https://api.github.com/users/bitwiseman/repos",
        "events_url": "https://api.github.com/users/bitwiseman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitwiseman/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 265902955,
          "node_id": "MDU6TGFiZWwyNjU5MDI5NTU=",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/new%20feature",
          "name": "new feature",
          "color": "f4cc53",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-02-11T17:33:16Z",
      "updated_at": "2021-02-11T17:33:37Z",
      "closed_at": null,
      "author_association": "COLLABORATOR",
      "active_lock_reason": null,
      "body": "Several users have filed issues around serializing objects to JSON: #1034, #971. \r\n\r\nConsider adding a `toJSON()` method to objects, `readRawJSON()` method to `GitHub`, or documenting a supported way to do this using the existing `ObjectMapper` returning methods.\r\n\r\n",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/1025",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/1025/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/1025/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/1025/events",
      "html_url": "https://github.com/hub4j/github-api/issues/1025",
      "id": 794265440,
      "node_id": "MDU6SXNzdWU3OTQyNjU0NDA=",
      "number": 1025,
      "title": "Add GHIssueQueryBuilder to allow better filtering of issue queries",
      "user": {
        "login": "blacelle",
        "id": 2117911,
        "node_id": "MDQ6VXNlcjIxMTc5MTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2117911?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/blacelle",
        "html_url": "https://github.com/blacelle",
        "followers_url": "https://api.github.com/users/blacelle/followers",
        "following_url": "https://api.github.com/users/blacelle/following{/other_user}",
        "gists_url": "https://api.github.com/users/blacelle/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/blacelle/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/blacelle/subscriptions",
        "organizations_url": "https://api.github.com/users/blacelle/orgs",
        "repos_url": "https://api.github.com/users/blacelle/repos",
        "events_url": "https://api.github.com/users/blacelle/events{/privacy}",
        "received_events_url": "https://api.github.com/users/blacelle/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1662551322,
          "node_id": "MDU6TGFiZWwxNjYyNTUxMzIy",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/enhancement",
          "name": "enhancement",
          "color": "0e8a16",
          "default": true,
          "description": ""
        },
        {
          "id": 1991401619,
          "node_id": "MDU6TGFiZWwxOTkxNDAxNjE5",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/good%20first%20issue",
          "name": "good first issue",
          "color": "00FF00",
          "default": true,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-01-26T14:15:41Z",
      "updated_at": "2021-06-28T21:15:25Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "body": "**Describe the feature**\r\nGitHub API  enables multiple search criteria: https://docs.github.com/en/rest/reference/issues#list-repository-issues (e.g. assignee, creator, labels). \r\n\r\nHow, I can't see how one can take advantage of these parameters through the library API?\r\n\r\n**Additional context**\r\nI might have crafted manually a call similar to \r\n\r\n```\r\n    /**\r\n     * Lists up all the issues in this repository.\r\n     *\r\n     * @param state\r\n     *            the state\r\n     * @return the paged iterable\r\n     */\r\n    public PagedIterable<GHIssue> listIssues(final GHIssueState state) {\r\n        return root.createRequest()\r\n                .with(\"state\", state)\r\n                .withUrlPath(getApiTailUrl(\"issues\"))\r\n                .toIterable(GHIssue[].class, item -> item.wrap(this));\r\n    }\r\n```\r\n\r\nbut it seems not trivial to get a reference to the root variable inside GHRepository.\r\n\r\nThanks",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/1024",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/1024/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/1024/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/1024/events",
      "html_url": "https://github.com/hub4j/github-api/issues/1024",
      "id": 789898861,
      "node_id": "MDU6SXNzdWU3ODk4OTg4NjE=",
      "number": 1024,
      "title": "GHProjectCard return null on getContent()",
      "user": {
        "login": "WolverMinion",
        "id": 23451407,
        "node_id": "MDQ6VXNlcjIzNDUxNDA3",
        "avatar_url": "https://avatars.githubusercontent.com/u/23451407?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/WolverMinion",
        "html_url": "https://github.com/WolverMinion",
        "followers_url": "https://api.github.com/users/WolverMinion/followers",
        "following_url": "https://api.github.com/users/WolverMinion/following{/other_user}",
        "gists_url": "https://api.github.com/users/WolverMinion/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/WolverMinion/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/WolverMinion/subscriptions",
        "organizations_url": "https://api.github.com/users/WolverMinion/orgs",
        "repos_url": "https://api.github.com/users/WolverMinion/repos",
        "events_url": "https://api.github.com/users/WolverMinion/events{/privacy}",
        "received_events_url": "https://api.github.com/users/WolverMinion/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 265902919,
          "node_id": "MDU6TGFiZWwyNjU5MDI5MTk=",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/bug",
          "name": "bug",
          "color": "e11d21",
          "default": true,
          "description": null
        },
        {
          "id": 1991401619,
          "node_id": "MDU6TGFiZWwxOTkxNDAxNjE5",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/good%20first%20issue",
          "name": "good first issue",
          "color": "00FF00",
          "default": true,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "WolverMinion",
        "id": 23451407,
        "node_id": "MDQ6VXNlcjIzNDUxNDA3",
        "avatar_url": "https://avatars.githubusercontent.com/u/23451407?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/WolverMinion",
        "html_url": "https://github.com/WolverMinion",
        "followers_url": "https://api.github.com/users/WolverMinion/followers",
        "following_url": "https://api.github.com/users/WolverMinion/following{/other_user}",
        "gists_url": "https://api.github.com/users/WolverMinion/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/WolverMinion/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/WolverMinion/subscriptions",
        "organizations_url": "https://api.github.com/users/WolverMinion/orgs",
        "repos_url": "https://api.github.com/users/WolverMinion/repos",
        "events_url": "https://api.github.com/users/WolverMinion/events{/privacy}",
        "received_events_url": "https://api.github.com/users/WolverMinion/received_events",
        "type": "User",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "WolverMinion",
          "id": 23451407,
          "node_id": "MDQ6VXNlcjIzNDUxNDA3",
          "avatar_url": "https://avatars.githubusercontent.com/u/23451407?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/WolverMinion",
          "html_url": "https://github.com/WolverMinion",
          "followers_url": "https://api.github.com/users/WolverMinion/followers",
          "following_url": "https://api.github.com/users/WolverMinion/following{/other_user}",
          "gists_url": "https://api.github.com/users/WolverMinion/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/WolverMinion/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/WolverMinion/subscriptions",
          "organizations_url": "https://api.github.com/users/WolverMinion/orgs",
          "repos_url": "https://api.github.com/users/WolverMinion/repos",
          "events_url": "https://api.github.com/users/WolverMinion/events{/privacy}",
          "received_events_url": "https://api.github.com/users/WolverMinion/received_events",
          "type": "User",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2021-01-20T11:35:09Z",
      "updated_at": "2021-01-22T16:38:03Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "**Describe the bug**\r\nI need a issue list from a project column. The implementation is in a jenkins shared library.\r\nIt's easy to use. Unfortunately I get an error.\r\nSee this Code. github-api is included as a dependency with version 1.122\r\n\r\n**To Reproduce**\r\n\r\n```groovy\r\nimport ....\r\nfinal GitHub github = GitHub.connectToEnterpriseWithOAuth('https://github.enterprise.com/api/v3', null, 'usertoken123')\r\nfinal GHProjectColumn projectColumn = github.getProjectColumn(12345)\r\nprojectColumn.listCards().each { projectCard ->\r\n   echo \"\"\"\r\nProjectCard: ${projectCard}\r\nContentUrl: ${projectCard.getContentUrl()}\r\nContent: ${projectCard.getContent()}\r\n\"\"\"\r\n    GHIssue issue = projectCard.getContent()\r\n   // issue must not be null\r\n}\r\n```\r\nhttps://github.com/hub4j/github-api/blob/8e6dbf37724cd76096b339ea7399fd49d06b49cb/src/main/java/org/kohsuke/github/GHProjectCard.java#L120\r\n\r\n**Expected behavior**\r\n`projectCard.getContent()` return the existing issue object or a helpful error message.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: unimportant\r\n - Browser unimportant\r\n - Version 1.122\r\n",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/1019",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/1019/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/1019/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/1019/events",
      "html_url": "https://github.com/hub4j/github-api/issues/1019",
      "id": 784310675,
      "node_id": "MDU6SXNzdWU3ODQzMTA2NzU=",
      "number": 1019,
      "title": "Unable to download asset from release in private repository",
      "user": {
        "login": "filipjonckers",
        "id": 3816316,
        "node_id": "MDQ6VXNlcjM4MTYzMTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3816316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/filipjonckers",
        "html_url": "https://github.com/filipjonckers",
        "followers_url": "https://api.github.com/users/filipjonckers/followers",
        "following_url": "https://api.github.com/users/filipjonckers/following{/other_user}",
        "gists_url": "https://api.github.com/users/filipjonckers/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/filipjonckers/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/filipjonckers/subscriptions",
        "organizations_url": "https://api.github.com/users/filipjonckers/orgs",
        "repos_url": "https://api.github.com/users/filipjonckers/repos",
        "events_url": "https://api.github.com/users/filipjonckers/events{/privacy}",
        "received_events_url": "https://api.github.com/users/filipjonckers/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1662551322,
          "node_id": "MDU6TGFiZWwxNjYyNTUxMzIy",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/enhancement",
          "name": "enhancement",
          "color": "0e8a16",
          "default": true,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-01-12T14:57:31Z",
      "updated_at": "2021-01-12T20:06:05Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "I'm trying to download assets from a private repository - the asset is a jar/zip file which is saved in the latest release.\r\nI'm able to connect and see the asset but cannot figure out how to download the asset into a local file using the existing GitHub connection.\r\nThe response I get when trying to download is: **HTTP/1.1 406 Not Acceptable**\r\nAs mentioned in the API documentation, the accept header is set to **application/octet-stream**\r\nI am probably doing something wring in the authentication part...\r\n\r\nHow should I tackle this?\r\n\r\nSource code of a test method:\r\n\r\n```java\r\n    private void testGitHubReleaseAssetDownload(final String jwtToken, final String repoFullName) {\r\n        try {\r\n            GitHub githubBuilder = new GitHubBuilder().withJwtToken(jwtToken).build();\r\n            GHAppInstallation appInstallation = githubBuilder.getApp().getInstallationById(GITHUB_APP_INSTALLATION_ID);\r\n            GHAppInstallationToken appInstallationToken = appInstallation.createToken(appInstallation.getPermissions()).create();\r\n            GitHub github = new GitHubBuilder().withAppInstallationToken(appInstallationToken.getToken()).build();\r\n            LOGGER.info(\"Credentials are: {}\", github.isCredentialValid() ? \"valid\" : \"invalid\");\r\n\r\n            GHRepository repo = github.getRepository(repoFullName);\r\n            GHRelease release = repo.getLatestRelease();\r\n            GHAsset asset = release.listAssets().toList().get(0);\r\n\r\n            File file = new File(\".\", asset.getName());\r\n            String downloadUrl = asset.getBrowserDownloadUrl();\r\n            String githubToken = appInstallationToken.getToken();\r\n\r\n            try (CloseableHttpClient httpClient = HttpClients.createDefault()) {\r\n                HttpGet httpGet = new HttpGet(downloadUrl);\r\n                httpGet.addHeader(\"authorization:\", \"token \" + githubToken);\r\n                httpGet.addHeader(\"Accept:\", \"application/octet-stream\");\r\n                try (CloseableHttpResponse httpResponse = httpClient.execute(httpGet)) {\r\n                    // response: HTTP/1.1 406 Not Acceptable\r\n                    if (httpResponse.getStatusLine().getStatusCode() == 200) {\r\n                        HttpEntity entity = httpResponse.getEntity();\r\n                        if(entity.getContentLength() > 0) {\r\n                            FileUtils.copyInputStreamToFile(entity.getContent(), file);\r\n                        }\r\n                    }\r\n                }\r\n                httpGet.releaseConnection();\r\n            } catch (IOException e) {\r\n                LOGGER.error(\"unable to download asset: {}\", downloadUrl);\r\n            }\r\n        } catch (Exception e) {\r\n            LOGGER.error(\"ERROR: {}\", e.toString());\r\n        }\r\n    }\r\n```\r\n",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/1017",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/1017/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/1017/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/1017/events",
      "html_url": "https://github.com/hub4j/github-api/issues/1017",
      "id": 781731411,
      "node_id": "MDU6SXNzdWU3ODE3MzE0MTE=",
      "number": 1017,
      "title": "Using a Preview API should activate that Preview for all related method calls on that GitHub instance",
      "user": {
        "login": "bitwiseman",
        "id": 1958953,
        "node_id": "MDQ6VXNlcjE5NTg5NTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1958953?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitwiseman",
        "html_url": "https://github.com/bitwiseman",
        "followers_url": "https://api.github.com/users/bitwiseman/followers",
        "following_url": "https://api.github.com/users/bitwiseman/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitwiseman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitwiseman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitwiseman/subscriptions",
        "organizations_url": "https://api.github.com/users/bitwiseman/orgs",
        "repos_url": "https://api.github.com/users/bitwiseman/repos",
        "events_url": "https://api.github.com/users/bitwiseman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitwiseman/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 265902955,
          "node_id": "MDU6TGFiZWwyNjU5MDI5NTU=",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/new%20feature",
          "name": "new feature",
          "color": "f4cc53",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-01-07T23:55:15Z",
      "updated_at": "2021-03-30T15:57:06Z",
      "closed_at": null,
      "author_association": "COLLABORATOR",
      "active_lock_reason": null,
      "body": "Currently, Preview methods are only enabled on specific methods but their usage is otherwise untracked.\r\n\r\nThis means that if I'm checking if any of my repositories are templates, [this code](https://github.com/hub4j/github-api/blob/7e1531dbcad2ed7dae809d96ea3787ec348f8889/src/main/java/org/kohsuke/github/GHRepository.java#L718-L731) will result in an additional api call for every check regardless of how many times I do it.  \r\n\r\nInstead, `GitHub` should track which `Previews` have been used and related methods should have a `withOptionalPreview()` call that will add a `Preview` to api call if it has been used for other api calls via `withPreview()`.  In this case, [`read()`](https://github.com/hub4j/github-api/blob/7e1531dbcad2ed7dae809d96ea3787ec348f8889/src/main/java/org/kohsuke/github/GHRepository.java#L123-L125) or `populate()` should have ``withOptionalPreview(BAPTISTE)`. ",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/1016",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/1016/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/1016/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/1016/events",
      "html_url": "https://github.com/hub4j/github-api/issues/1016",
      "id": 781715355,
      "node_id": "MDU6SXNzdWU3ODE3MTUzNTU=",
      "number": 1016,
      "title": "Add ArchUnit that verifies public or protected methods do not take private or internal parameters",
      "user": {
        "login": "bitwiseman",
        "id": 1958953,
        "node_id": "MDQ6VXNlcjE5NTg5NTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1958953?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitwiseman",
        "html_url": "https://github.com/bitwiseman",
        "followers_url": "https://api.github.com/users/bitwiseman/followers",
        "following_url": "https://api.github.com/users/bitwiseman/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitwiseman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitwiseman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitwiseman/subscriptions",
        "organizations_url": "https://api.github.com/users/bitwiseman/orgs",
        "repos_url": "https://api.github.com/users/bitwiseman/repos",
        "events_url": "https://api.github.com/users/bitwiseman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitwiseman/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1664647346,
          "node_id": "MDU6TGFiZWwxNjY0NjQ3MzQ2",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/task",
          "name": "task",
          "color": "bfdadc",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-01-07T23:36:32Z",
      "updated_at": "2021-01-07T23:36:32Z",
      "closed_at": null,
      "author_association": "COLLABORATOR",
      "active_lock_reason": null,
      "body": "#1015 fixed an issue where a `public` annotation had a `public` constructor that had a [`package-private`](https://docs.oracle.com/javase/tutorial/java/javaOO/accesscontrol.html) `enum` parameter. This didn't break immediately, but caused issue for mocking.  If it were a more generally used method, that method would be visible but not callable.  \r\n\r\nWe should add an ArchUnit tests that: \r\n* find all public methods and verifies that all parameters of those method are also public\r\n* find all protected methods and verify that all parameters of those method are also at least protected - might be harder to write this test\r\n* find all public classes and verify they extend public classes - this may or may not be strictly required, but it makes for better testing and clarity.",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/988",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/988/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/988/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/988/events",
      "html_url": "https://github.com/hub4j/github-api/issues/988",
      "id": 753040877,
      "node_id": "MDU6SXNzdWU3NTMwNDA4Nzc=",
      "number": 988,
      "title": "Updating branch protection details is very cumbersome",
      "user": {
        "login": "Vampire",
        "id": 325196,
        "node_id": "MDQ6VXNlcjMyNTE5Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/325196?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Vampire",
        "html_url": "https://github.com/Vampire",
        "followers_url": "https://api.github.com/users/Vampire/followers",
        "following_url": "https://api.github.com/users/Vampire/following{/other_user}",
        "gists_url": "https://api.github.com/users/Vampire/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Vampire/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Vampire/subscriptions",
        "organizations_url": "https://api.github.com/users/Vampire/orgs",
        "repos_url": "https://api.github.com/users/Vampire/repos",
        "events_url": "https://api.github.com/users/Vampire/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Vampire/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1662551322,
          "node_id": "MDU6TGFiZWwxNjYyNTUxMzIy",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/enhancement",
          "name": "enhancement",
          "color": "0e8a16",
          "default": true,
          "description": ""
        },
        {
          "id": 1991401619,
          "node_id": "MDU6TGFiZWwxOTkxNDAxNjE5",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/good%20first%20issue",
          "name": "good first issue",
          "color": "00FF00",
          "default": true,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2020-11-29T23:14:31Z",
      "updated_at": "2020-12-18T23:09:02Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "I have a project where I have various branch protections enabled like linear history, required status checks, and so on and those restrictions should also be valid for administrators usually to not have a broken state on `master`.\r\n\r\nBut when creating a release, I actually want to push one merge commit to `master` and also without having the status checks run before as this would need manual intervention.\r\n\r\nSo I thought I simply make a Gradle task that removes the \"also for administrators\" flag before the push and another task that again enables that flag that is run after the task that pushes to `master`.\r\n\r\nThe problem is, that this lib does not allow to change only one detail, but you always have to supply the full set of protection rules. When I just did `....enableProtection().includeAdmins(false).enable()`, all other properties were unset.\r\nBut I also don't want to maintain the restrictions in the code.\r\nAnd taking the protections from the current protection object, setting them on the builder is extremely cumbersome and boiler-platey and also if some attributes get added, suddenly the logic will be wrong as it will not be copied over along except if you use reflection for this, which also would not work anyway due to inconsistencies in naming (e. g. `requiredChecks` vs. `contexts`).\r\n\r\nIt would be nice if this could be enhanced, for example by having some `copy attributes from this protection instance` method, or maybe even better an additional `updateProtection()` method that has all properties set like they currently are and then allows to update only the things that should be changed.\r\n",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/970",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/970/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/970/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/970/events",
      "html_url": "https://github.com/hub4j/github-api/issues/970",
      "id": 733050512,
      "node_id": "MDU6SXNzdWU3MzMwNTA1MTI=",
      "number": 970,
      "title": "Document reading pages of items",
      "user": {
        "login": "eric-5512",
        "id": 56282991,
        "node_id": "MDQ6VXNlcjU2MjgyOTkx",
        "avatar_url": "https://avatars.githubusercontent.com/u/56282991?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eric-5512",
        "html_url": "https://github.com/eric-5512",
        "followers_url": "https://api.github.com/users/eric-5512/followers",
        "following_url": "https://api.github.com/users/eric-5512/following{/other_user}",
        "gists_url": "https://api.github.com/users/eric-5512/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/eric-5512/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/eric-5512/subscriptions",
        "organizations_url": "https://api.github.com/users/eric-5512/orgs",
        "repos_url": "https://api.github.com/users/eric-5512/repos",
        "events_url": "https://api.github.com/users/eric-5512/events{/privacy}",
        "received_events_url": "https://api.github.com/users/eric-5512/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 2070644911,
          "node_id": "MDU6TGFiZWwyMDcwNjQ0OTEx",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/documentation",
          "name": "documentation",
          "color": "6ee5cb",
          "default": true,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 8,
      "created_at": "2020-10-30T10:14:06Z",
      "updated_at": "2021-03-15T18:35:42Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "Return open or closed issues in pagination\r\n\r\n```\r\npublic List<GHIssue> getIssues(GHIssueState state) throws IOException {\r\n        return this.listIssues(state).toList();\r\n    }\r\n\r\n    public List<GHIssue> getIssues(GHIssueState state, GHMilestone milestone) throws IOException {\r\n        Requester requester = (Requester)((Requester)this.root.createRequest().with(\"state\", state)).with(\"milestone\", milestone == null ? \"none\" : \"\" + milestone.getNumber());\r\n        return ((Requester)requester.withUrlPath(this.getApiTailUrl(\"issues\"), new String[0])).toIterable(GHIssue[].class, (item) -> {\r\n            item.wrap(this);\r\n        }).toList();\r\n    }\r\n```\r\n\r\nI didn’t see any support for paging\r\n\r\n![image](https://user-images.githubusercontent.com/56282991/97699344-ef06d480-1ae4-11eb-9257-651b209018b0.png)\r\n\r\nNeed to manually specify page and pre_page",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/937",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/937/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/937/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/937/events",
      "html_url": "https://github.com/hub4j/github-api/issues/937",
      "id": 686155949,
      "node_id": "MDU6SXNzdWU2ODYxNTU5NDk=",
      "number": 937,
      "title": "Adding public key to user",
      "user": {
        "login": "vmax",
        "id": 499267,
        "node_id": "MDQ6VXNlcjQ5OTI2Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/499267?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vmax",
        "html_url": "https://github.com/vmax",
        "followers_url": "https://api.github.com/users/vmax/followers",
        "following_url": "https://api.github.com/users/vmax/following{/other_user}",
        "gists_url": "https://api.github.com/users/vmax/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/vmax/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/vmax/subscriptions",
        "organizations_url": "https://api.github.com/users/vmax/orgs",
        "repos_url": "https://api.github.com/users/vmax/repos",
        "events_url": "https://api.github.com/users/vmax/events{/privacy}",
        "received_events_url": "https://api.github.com/users/vmax/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1662551322,
          "node_id": "MDU6TGFiZWwxNjYyNTUxMzIy",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/enhancement",
          "name": "enhancement",
          "color": "0e8a16",
          "default": true,
          "description": ""
        },
        {
          "id": 1991401619,
          "node_id": "MDU6TGFiZWwxOTkxNDAxNjE5",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/good%20first%20issue",
          "name": "good first issue",
          "color": "00FF00",
          "default": true,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 5,
      "created_at": "2020-08-26T09:15:37Z",
      "updated_at": "2020-11-05T18:43:13Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "**Describe the bug**\r\n\r\nIt currently seems to be impossible to add a new public key to user's account using `GHMyself`. [`POST /user/keys`](https://developer.github.com/v3/users/keys/#create-a-public-ssh-key-for-the-authenticated-user) is the relevant GitHub API endpoint.\r\n\r\n**To Reproduce**\r\nRead docs on `GHMyself` and observe the method not being present\r\n\r\n**Expected behavior**\r\n`GHMyself::addKey` to be available, with an interface similar to `GHRepository::addDeployKey`\r\n\r\n",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/929",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/929/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/929/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/929/events",
      "html_url": "https://github.com/hub4j/github-api/issues/929",
      "id": 680693157,
      "node_id": "MDU6SXNzdWU2ODA2OTMxNTc=",
      "number": 929,
      "title": "Include Project card details into response when listing issue events",
      "user": {
        "login": "annguyen-qh",
        "id": 20037026,
        "node_id": "MDQ6VXNlcjIwMDM3MDI2",
        "avatar_url": "https://avatars.githubusercontent.com/u/20037026?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/annguyen-qh",
        "html_url": "https://github.com/annguyen-qh",
        "followers_url": "https://api.github.com/users/annguyen-qh/followers",
        "following_url": "https://api.github.com/users/annguyen-qh/following{/other_user}",
        "gists_url": "https://api.github.com/users/annguyen-qh/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/annguyen-qh/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/annguyen-qh/subscriptions",
        "organizations_url": "https://api.github.com/users/annguyen-qh/orgs",
        "repos_url": "https://api.github.com/users/annguyen-qh/repos",
        "events_url": "https://api.github.com/users/annguyen-qh/events{/privacy}",
        "received_events_url": "https://api.github.com/users/annguyen-qh/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1662551322,
          "node_id": "MDU6TGFiZWwxNjYyNTUxMzIy",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/enhancement",
          "name": "enhancement",
          "color": "0e8a16",
          "default": true,
          "description": ""
        },
        {
          "id": 1991401619,
          "node_id": "MDU6TGFiZWwxOTkxNDAxNjE5",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/good%20first%20issue",
          "name": "good first issue",
          "color": "00FF00",
          "default": true,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 6,
      "created_at": "2020-08-18T05:04:44Z",
      "updated_at": "2021-01-21T16:39:10Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "It would be great if the `GHIssueEvent` class could include Project card details. This information is valuable with project-related issue events\r\n\r\nThe relevant GitHub API endpoint is `GET /repos/:owner/:repo/issues/:issue_number/events` - https://developer.github.com/v3/issues/events/#list-issue-events\r\n\r\n",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/915",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/915/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/915/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/915/events",
      "html_url": "https://github.com/hub4j/github-api/issues/915",
      "id": 672648458,
      "node_id": "MDU6SXNzdWU2NzI2NDg0NTg=",
      "number": 915,
      "title": "Unable to clone submodules",
      "user": {
        "login": "saptakniyogi",
        "id": 13414332,
        "node_id": "MDQ6VXNlcjEzNDE0MzMy",
        "avatar_url": "https://avatars.githubusercontent.com/u/13414332?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/saptakniyogi",
        "html_url": "https://github.com/saptakniyogi",
        "followers_url": "https://api.github.com/users/saptakniyogi/followers",
        "following_url": "https://api.github.com/users/saptakniyogi/following{/other_user}",
        "gists_url": "https://api.github.com/users/saptakniyogi/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/saptakniyogi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/saptakniyogi/subscriptions",
        "organizations_url": "https://api.github.com/users/saptakniyogi/orgs",
        "repos_url": "https://api.github.com/users/saptakniyogi/repos",
        "events_url": "https://api.github.com/users/saptakniyogi/events{/privacy}",
        "received_events_url": "https://api.github.com/users/saptakniyogi/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 265902919,
          "node_id": "MDU6TGFiZWwyNjU5MDI5MTk=",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/bug",
          "name": "bug",
          "color": "e11d21",
          "default": true,
          "description": null
        },
        {
          "id": 1662551322,
          "node_id": "MDU6TGFiZWwxNjYyNTUxMzIy",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/enhancement",
          "name": "enhancement",
          "color": "0e8a16",
          "default": true,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 6,
      "created_at": "2020-08-04T09:29:28Z",
      "updated_at": "2020-08-25T13:12:51Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "**Describe the bug**\r\nWhen Github organization scans for repos, it fails if the repo contains submodules with following error:\r\nCaused by: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `[Lorg.kohsuke.github.GHContent;` out of START_OBJECT token\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Scan Github Org with repos having sub-modules\r\n\r\n**Expected behavior**\r\nScan and clone the sub-modules\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: Windows Server 2016\r\n - Browser: Chrome\r\n - Version 1.115\r\n\r\n**Additional context**\r\n",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/903",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/903/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/903/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/903/events",
      "html_url": "https://github.com/hub4j/github-api/issues/903",
      "id": 666484469,
      "node_id": "MDU6SXNzdWU2NjY0ODQ0Njk=",
      "number": 903,
      "title": "Consider using URI Templates instead of constructing url strings",
      "user": {
        "login": "bitwiseman",
        "id": 1958953,
        "node_id": "MDQ6VXNlcjE5NTg5NTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1958953?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitwiseman",
        "html_url": "https://github.com/bitwiseman",
        "followers_url": "https://api.github.com/users/bitwiseman/followers",
        "following_url": "https://api.github.com/users/bitwiseman/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitwiseman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitwiseman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitwiseman/subscriptions",
        "organizations_url": "https://api.github.com/users/bitwiseman/orgs",
        "repos_url": "https://api.github.com/users/bitwiseman/repos",
        "events_url": "https://api.github.com/users/bitwiseman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitwiseman/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1662551322,
          "node_id": "MDU6TGFiZWwxNjYyNTUxMzIy",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/enhancement",
          "name": "enhancement",
          "color": "0e8a16",
          "default": true,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-07-27T18:07:44Z",
      "updated_at": "2020-07-27T18:07:50Z",
      "closed_at": null,
      "author_association": "COLLABORATOR",
      "active_lock_reason": null,
      "body": "Using URI Templates would make it clearer what parts of Requests are supposed to be in the URL and which should be passed as JSON.  This would also simplify `GitHubRequest` and `GitHubClient`. \r\n\r\nOne example of a library that could be used: https://github.com/damnhandy/Handy-URI-Templates\r\n",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/902",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/902/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/902/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/902/events",
      "html_url": "https://github.com/hub4j/github-api/issues/902",
      "id": 666414517,
      "node_id": "MDU6SXNzdWU2NjY0MTQ1MTc=",
      "number": 902,
      "title": "GithubRequest.with() methods should not silently ignore null values ",
      "user": {
        "login": "bitwiseman",
        "id": 1958953,
        "node_id": "MDQ6VXNlcjE5NTg5NTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1958953?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitwiseman",
        "html_url": "https://github.com/bitwiseman",
        "followers_url": "https://api.github.com/users/bitwiseman/followers",
        "following_url": "https://api.github.com/users/bitwiseman/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitwiseman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitwiseman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitwiseman/subscriptions",
        "organizations_url": "https://api.github.com/users/bitwiseman/orgs",
        "repos_url": "https://api.github.com/users/bitwiseman/repos",
        "events_url": "https://api.github.com/users/bitwiseman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitwiseman/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1780165359,
          "node_id": "MDU6TGFiZWwxNzgwMTY1MzU5",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/breaking%20change",
          "name": "breaking change",
          "color": "b60205",
          "default": false,
          "description": ""
        },
        {
          "id": 1662551322,
          "node_id": "MDU6TGFiZWwxNjYyNTUxMzIy",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/enhancement",
          "name": "enhancement",
          "color": "0e8a16",
          "default": true,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-07-27T16:13:16Z",
      "updated_at": "2021-02-11T20:06:07Z",
      "closed_at": null,
      "author_association": "COLLABORATOR",
      "active_lock_reason": null,
      "body": "The `GithubRequest.with()` currently discard null values.  Only `GithubRequest.withNullable()` keeps them.  This is convenient sometimes but leaves things open for confusing issues with missing fields.  Also, the presence of `withNullable()` implies (via Spotbugs annotations) that the `with()` methods require `Nonnull`. \r\n\r\nConsider adding a `withOptional()` that ignores `null` values and changing `with()` to not ignore `null` values. \r\n\r\nSee #899 \r\n\r\n",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/901",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/901/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/901/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/901/events",
      "html_url": "https://github.com/hub4j/github-api/issues/901",
      "id": 666061684,
      "node_id": "MDU6SXNzdWU2NjYwNjE2ODQ=",
      "number": 901,
      "title": "Commit bigger file failed",
      "user": {
        "login": "onedrive-x",
        "id": 53255535,
        "node_id": "MDQ6VXNlcjUzMjU1NTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/53255535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/onedrive-x",
        "html_url": "https://github.com/onedrive-x",
        "followers_url": "https://api.github.com/users/onedrive-x/followers",
        "following_url": "https://api.github.com/users/onedrive-x/following{/other_user}",
        "gists_url": "https://api.github.com/users/onedrive-x/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/onedrive-x/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/onedrive-x/subscriptions",
        "organizations_url": "https://api.github.com/users/onedrive-x/orgs",
        "repos_url": "https://api.github.com/users/onedrive-x/repos",
        "events_url": "https://api.github.com/users/onedrive-x/events{/privacy}",
        "received_events_url": "https://api.github.com/users/onedrive-x/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1662551322,
          "node_id": "MDU6TGFiZWwxNjYyNTUxMzIy",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/enhancement",
          "name": "enhancement",
          "color": "0e8a16",
          "default": true,
          "description": ""
        },
        {
          "id": 265902955,
          "node_id": "MDU6TGFiZWwyNjU5MDI5NTU=",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/new%20feature",
          "name": "new feature",
          "color": "f4cc53",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 4,
      "created_at": "2020-07-27T07:34:42Z",
      "updated_at": "2020-07-31T22:40:33Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "Error when I upload a 60M file.\r\nThis is my code.\r\n```\r\nGHRepository repo = github.getRepository(user+\"/\"+GithubUploader.repo);\r\n\t\t\tGHRef masterRef = repo.getRef(\"heads/master\");\r\n\t        String masterTreeSha = repo.getTreeRecursive(\"master\", 1).getSha();\r\n\t        GHTreeBuilder treeBuilder = repo.createTree().baseTree(masterTreeSha);\r\n\t\t\ttreeBuilder.add(uploadPath+\"/\"+file.getName(), FileUtil.readBytes(file), true);\r\n\t\t\tString treeSha = treeBuilder.create().getSha();\r\n\t        String commitSha = repo.createCommit()\r\n\t        \t   .message(username + \" updates\")\r\n\t               .tree(treeSha)\r\n\t               .parent(masterRef.getObject().getSha())\r\n\t               .create()\r\n\t               .getSHA1();\r\n\t        masterRef.updateTo(commitSha);\r\n```\r\nAnd the error:\r\n```\r\njava.lang.OutOfMemoryError: Java heap space\r\n\tat java.util.Base64$Encoder.encode(Base64.java:262) ~[na:1.8.0_262]\r\n\tat java.util.Base64$Encoder.encodeToString(Base64.java:315) ~[na:1.8.0_262]\r\n\tat org.kohsuke.github.GHBlobBuilder.binaryContent(GHBlobBuilder.java:39) ~[github-api-1.115.jar!/:na]\r\n\tat org.kohsuke.github.GHTreeBuilder.add(GHTreeBuilder.java:136) ~[github-api-1.115.jar!/:na]\r\n```\r\nRefer to this link\r\nhttps://github.com/hub4j/github-api/issues/878#issuecomment-655047530",
      "performed_via_github_app": null,
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/hub4j/github-api/issues/881",
      "repository_url": "https://api.github.com/repos/hub4j/github-api",
      "labels_url": "https://api.github.com/repos/hub4j/github-api/issues/881/labels{/name}",
      "comments_url": "https://api.github.com/repos/hub4j/github-api/issues/881/comments",
      "events_url": "https://api.github.com/repos/hub4j/github-api/issues/881/events",
      "html_url": "https://github.com/hub4j/github-api/issues/881",
      "id": 652686003,
      "node_id": "MDU6SXNzdWU2NTI2ODYwMDM=",
      "number": 881,
      "title": "Update to handle updated git references api ",
      "user": {
        "login": "bitwiseman",
        "id": 1958953,
        "node_id": "MDQ6VXNlcjE5NTg5NTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1958953?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitwiseman",
        "html_url": "https://github.com/bitwiseman",
        "followers_url": "https://api.github.com/users/bitwiseman/followers",
        "following_url": "https://api.github.com/users/bitwiseman/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitwiseman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitwiseman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitwiseman/subscriptions",
        "organizations_url": "https://api.github.com/users/bitwiseman/orgs",
        "repos_url": "https://api.github.com/users/bitwiseman/repos",
        "events_url": "https://api.github.com/users/bitwiseman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitwiseman/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 265902919,
          "node_id": "MDU6TGFiZWwyNjU5MDI5MTk=",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/bug",
          "name": "bug",
          "color": "e11d21",
          "default": true,
          "description": null
        },
        {
          "id": 1662551322,
          "node_id": "MDU6TGFiZWwxNjYyNTUxMzIy",
          "url": "https://api.github.com/repos/hub4j/github-api/labels/enhancement",
          "name": "enhancement",
          "color": "0e8a16",
          "default": true,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-07-07T22:10:07Z",
      "updated_at": "2020-07-08T21:43:47Z",
      "closed_at": null,
      "author_association": "COLLABORATOR",
      "active_lock_reason": null,
      "body": "Version 2.18 and older use this: \r\nhttps://docs.github.com/en/enterprise/2.18/user/rest/reference/git#get-all-references\r\n\r\nVersion 2.19 and new use this: \r\nhttps://docs.github.com/en/rest/reference/git#references\r\n\r\n\r\nSpecifically, getting references is now done using `git/matching-refs` instead of `git/refs`.  \r\n\r\nSee #822, #842, #844, #845.  Also see #852 for likely feature that needs to be added to make this safe. \r\n\r\nThat said 2.18 will be unsupported after August 2020.  Perhaps the right behavior is to try default to the new API and have a switch to enable the old one. \r\n",
      "performed_via_github_app": null,
      "score": 1
    }
  ]
}